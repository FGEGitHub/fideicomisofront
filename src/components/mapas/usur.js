import { useState, useEffect, useRef } from "react";
import DialogComponent from './modalusur';
import Tooltip from '@mui/material/Tooltip';
import NativeSelect from '@mui/material/NativeSelect';

import { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';
import * as React from 'react';
import Chip from '@material-ui/core/Chip';
import DoneIcon from '@material-ui/icons/Done';
import MuiAlert from '@mui/material/Alert';
import DialogActions from '@mui/material/DialogActions';
import servicioLotes from '../../services/lotes'

import Button from '@mui/material/Button';

import Gps from "../../Assets/completo.jpeg"
const Alert = React.forwardRef(function Alert(props, ref) {
  return <MuiAlert elevation={6} ref={ref} variant="filled" {...props} />;
});



const Arg = () => {
  //configuracion de Hooks
  const dialogRef = useRef();
  const [info, setInfo] = React.useState(false);
  const [open, setOpen] = React.useState(false);
  const [lotes, setLotes] = React.useState();
  const [seleccion, setSeleccion] = useState()
  const [imagenDeFondoActivada, setImagenDeFondoActivada] = useState(false);

  const getClients = async () => {

    const lotess = await servicioLotes.listausur()
console.log(lotess)
    setLotes(lotess[0])

  }

  useEffect(() => {
    getClients()
  }, [])

  const handleOpenDialog = (p) => {
    setInfo(p)
    // setForm({ mapa: p,fraccion:1,manzana:1,lote:1 })
    dialogRef.current.openDialog();


  };
  const handleChange = (e) => {
    console.log( e.target.value)
    setSeleccion(e.target.value)


}
  const toggleImagenDeFondo = () => {
    setImagenDeFondoActivada((prev) => !prev);
  };
  const InformativeChip = ({ label, color }) => {
    return (
      <Chip
        icon={<DoneIcon />}
        label={label}
        style={{ backgroundColor: color, color: 'white' }}
      />
    );
  };
  return (
    <>


      <div  >

        <TransformWrapper>
          {({ zoomIn, zoomOut, resetTransform, ...rest }) => (
            <React.Fragment>
              <Button
                onClick={toggleImagenDeFondo}
                variant="contained"
                color="primary"
                style={{ position: 'fixed', zIndex: 2 }}

              >
                {imagenDeFondoActivada ? 'Desactivar' : 'Activar'} GPS
              </Button> <br /> <br /> <br />
              <NativeSelect
defaultValue={30}
onChange={handleChange}
style={{ position: 'fixed', zIndex: 2 }}
inputProps={{
    name: 'anio',
    id: 'uncontrolled-native',

}}

> <option value={''}>Elegir</option>
<option value={'Verde'}>Verde</option>
<option value={'Amarillo'}>Amarillo</option>
<option value={'Rojo'}>Rojo</option>




</NativeSelect>
              <br />  
              <TransformComponent>

                {lotes ? <>
                  <div style={{ position: 'relative' }}>
                    {imagenDeFondoActivada && (
                      <img
                        src={Gps}
                        alt="Imagen de fondo"
                        style={{ position: 'absolute', width: "296.926mm", height: "209.973mm", viewBox: "0 0 3507 2480", zIndex: -1 }}

                      />
                    )}


                    <svg position="absolute" width="296.926mm" height="209.973mm" version="1.2" baseProfile="tiny" viewBox="0 0 3507 2480"  >
                  
 <defs/>
 <g fill="none" fill-rule="evenodd" stroke-linejoin="bevel" stroke="black" stroke-width="1" stroke-linecap="square">
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(1,0,0,1,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(1,0,0,1,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g fill="#ffffff" font-weight="400" stroke="none" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="1" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[0].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(0)}  fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" } fill-rule="evenodd" d="M-2,-2 L3510,-2 L3510,2483 L-2,2483 L-2,-2" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g fill="#ffffff" font-weight="400" stroke="none" transform="matrix(11.8081,0,0,11.8081,0,0)" fill-opacity="1" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">


  <path onClick={() => handleOpenDialog(1)}  fillOpacity={imagenDeFondoActivada ?  0.2:1 } fill={"white"} fill-rule="evenodd" d="M0,0 L297,0 L297,210 L0,210 L0,0" vector-effect="none"/>

            
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g fill="#000000" font-weight="400" stroke="none" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="0" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">
   <rect width="3508" x="0" y="0" height="2480"/>
  </g>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="#ff0000" font-weight="400" stroke-linejoin="miter" stroke="#ff0000" stroke-width="6.25" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="0" stroke-linecap="square" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[2].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(2)}  fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" } fill-rule="evenodd" d="M281.891,1164.51 L257.289,1166.12 L261.222,1183.21 L314.202,1190.02 L318.162,1167.04 L281.891,1164.51" vector-effect="none"/>
            </Tooltip>)})}
  </g>
  <g stroke-opacity="1" fill="#00aa00" font-weight="400" stroke-linejoin="miter" stroke="#00aa00" stroke-width="6.25" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="0.501961" stroke-linecap="square" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[3].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(3)}  fillOpacity={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M194.922,1352.39 L187.277,1376.44 L244.656,1390.03 L254.646,1362.14 L194.922,1352.39" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#ff0000" stroke-width="15.625" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="butt" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[4].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(4)}  fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" } fill-rule="evenodd" d="M63.0132,1590.92 L312.887,1588.12 L312.887,1588.12 L313.958,1588.11 L315.028,1588.1 L316.099,1588.09 L317.169,1588.08 L318.24,1588.07 L319.311,1588.06 L320.381,1588.05 L321.452,1588.04 L322.523,1588.02 L323.593,1588.01 L324.664,1588.01 L325.735,1588 L326.805,1587.99 L327.876,1587.98 L328.947,1587.97 L330.017,1587.96 L331.088,1587.95 L332.159,1587.94 L333.229,1587.94 L334.3,1587.93 L335.371,1587.92 L336.441,1587.91 L337.512,1587.91 L338.583,1587.9 L339.653,1587.89 L340.724,1587.89 L341.795,1587.88 L342.865,1587.87 L343.936,1587.87 L345.007,1587.86 L346.077,1587.86 L347.148,1587.85 L348.219,1587.85 L349.289,1587.84 L350.36,1587.84 L351.431,1587.83 L352.502,1587.83 L353.572,1587.83 L354.643,1587.82 L355.714,1587.82 L356.784,1587.82 L357.855,1587.81 L358.926,1587.81 L359.996,1587.81 L361.067,1587.81 L362.138,1587.8 L363.209,1587.8 L364.279,1587.8 L365.35,1587.8 L366.421,1587.8 L367.491,1587.8 L368.562,1587.8 L369.633,1587.8 L370.703,1587.8 L371.774,1587.8 L372.845,1587.8 L373.916,1587.8 L374.986,1587.8 L376.057,1587.8 L377.128,1587.8 L378.198,1587.8 L379.269,1587.8 L380.34,1587.81 L381.411,1587.81 L382.481,1587.81 L383.552,1587.81 L384.623,1587.81 L385.693,1587.82 L386.764,1587.82 L387.835,1587.82 L388.905,1587.83 L389.976,1587.83 L391.047,1587.84 L392.117,1587.84 L393.188,1587.84 L394.259,1587.85 L395.33,1587.85 L396.4,1587.86 L397.471,1587.86 L398.542,1587.87 L399.612,1587.88 L400.683,1587.88 L401.754,1587.89 L402.824,1587.89 L403.895,1587.9 L404.966,1587.91 L406.036,1587.91 L407.107,1587.92 L408.178,1587.93 L409.248,1587.94 L410.319,1587.95 L411.39,1587.95 L412.46,1587.96 L413.531,1587.97 L414.602,1587.98 L415.672,1587.99 L416.743,1588 L417.814,1588.01 L418.884,1588.02 L419.955,1588.03 L421.026,1588.04 L422.096,1588.05 L423.167,1588.06 L424.238,1588.07 L425.308,1588.08 L426.379,1588.09 L427.449,1588.1 L428.52,1588.11 L429.591,1588.13 L430.661,1588.14 L431.732,1588.15 L432.802,1588.16 L433.873,1588.18 L434.944,1588.19 L436.014,1588.2 L437.085,1588.22 L438.155,1588.23 L439.226,1588.24 L440.297,1588.26 L441.367,1588.27 L442.438,1588.29 L443.508,1588.3 L444.579,1588.32 L445.65,1588.33 L446.72,1588.35 L447.791,1588.36 L448.861,1588.38 L449.932,1588.4 L451.002,1588.41 L452.073,1588.43 L453.143,1588.45 L454.214,1588.46 L455.284,1588.48 L456.355,1588.5 L457.426,1588.52 L458.496,1588.53 L459.567,1588.55 L460.637,1588.57 L461.708,1588.59 L462.778,1588.61 L463.849,1588.63 L464.919,1588.65 L465.989,1588.67 L467.06,1588.68 L468.13,1588.7 L469.201,1588.73 L470.271,1588.75 L471.342,1588.77 L472.412,1588.79 L473.483,1588.81 L474.553,1588.83 L475.624,1588.85 L476.694,1588.87 L477.764,1588.89 L478.835,1588.92 L479.905,1588.94 L480.976,1588.96 L482.046,1588.98 L483.116,1589.01 L484.187,1589.03 L485.257,1589.05 L486.328,1589.08 L487.398,1589.1 L488.468,1589.13 L489.539,1589.15 L490.609,1589.17 L491.679,1589.2 L492.75,1589.22 L493.82,1589.25 L494.89,1589.27 L495.961,1589.3 L497.031,1589.33 L498.101,1589.35 L499.172,1589.38 L500.242,1589.41 L501.312,1589.43 L502.382,1589.46 L503.453,1589.49 L504.523,1589.51 L505.593,1589.54 L505.593,1589.54 L1212.34,1607.83 L1213.58,1607.86 L1214.81,1607.89 L1216.05,1607.93 L1217.28,1607.96 L1218.5,1607.99 L1219.73,1608.02 L1220.96,1608.05 L1222.18,1608.08 L1223.4,1608.11 L1224.62,1608.13 L1225.84,1608.16 L1227.05,1608.18 L1228.27,1608.21 L1229.48,1608.23 L1230.69,1608.25 L1231.9,1608.27 L1233.11,1608.29 L1234.32,1608.31 L1235.52,1608.32 L1236.73,1608.34 L1237.93,1608.35 L1239.13,1608.36 L1240.33,1608.36 L1241.52,1608.37 L1242.72,1608.37 L1243.91,1608.37 L1245.1,1608.37 L1246.29,1608.37 L1247.48,1608.36 L1248.67,1608.35 L1249.87,1608.34 L1249.87,1608.34 L1250.75,1608.33 L1251.63,1608.32 L1252.51,1608.3 L1253.39,1608.29 L1254.27,1608.27 L1255.14,1608.25 L1256.02,1608.23 L1256.9,1608.21 L1257.78,1608.19 L1258.66,1608.16 L1259.54,1608.13 L1260.42,1608.11 L1261.3,1608.08 L1262.18,1608.05 L1263.06,1608.01 L1263.93,1607.98 L1264.81,1607.94 L1265.69,1607.91 L1266.57,1607.87 L1267.45,1607.83 L1268.33,1607.78 L1269.2,1607.74 L1270.08,1607.7 L1270.96,1607.65 L1271.84,1607.6 L1272.72,1607.55 L1273.59,1607.5 L1274.47,1607.45 L1275.35,1607.39 L1276.23,1607.34 L1277.1,1607.28 L1277.98,1607.22 L1278.86,1607.16 L1279.73,1607.1 L1280.61,1607.03 L1281.49,1606.97 L1282.36,1606.9 L1283.24,1606.83 L1284.11,1606.76 L1284.99,1606.69 L1285.87,1606.62 L1286.74,1606.54 L1287.62,1606.46 L1288.49,1606.39 L1289.37,1606.31 L1290.24,1606.23 L1291.12,1606.14 L1291.99,1606.06 L1292.86,1605.97 L1293.74,1605.89 L1294.61,1605.8 L1295.49,1605.71 L1296.36,1605.61 L1297.23,1605.52 L1298.11,1605.43 L1298.98,1605.33 L1299.85,1605.23 L1300.72,1605.13 L1301.6,1605.03 L1302.47,1604.93 L1303.34,1604.82 L1304.21,1604.72 L1305.08,1604.61 L1305.95,1604.5 L1306.82,1604.39 L1307.69,1604.28 L1308.56,1604.16 L1309.43,1604.05 L1310.3,1603.93 L1311.17,1603.81 L1312.04,1603.69 L1312.91,1603.57 L1313.78,1603.45 L1314.65,1603.33 L1315.52,1603.2 L1316.38,1603.07 L1317.25,1602.94 L1318.12,1602.81 L1318.99,1602.68 L1319.85,1602.55 L1320.72,1602.41 L1321.58,1602.27 L1322.45,1602.14 L1323.32,1602 L1324.18,1601.85 L1325.04,1601.71 L1325.91,1601.57 L1326.77,1601.42 L1327.64,1601.27 L1328.5,1601.12 L1329.36,1600.97 L1330.23,1600.82 L1331.09,1600.67 L1331.95,1600.51 L1332.81,1600.36 L1333.67,1600.2 L1334.54,1600.04 L1335.4,1599.88 L1336.26,1599.71 L1337.12,1599.55 L1337.98,1599.38 L1338.83,1599.22 L1339.69,1599.05 L1340.55,1598.88 L1341.41,1598.7 L1342.27,1598.53 L1343.12,1598.35 L1343.98,1598.18 L1344.84,1598 L1345.69,1597.82 L1346.55,1597.64 L1347.41,1597.46 L1348.26,1597.27 L1349.11,1597.09 L1349.97,1596.9 L1350.82,1596.71 L1351.68,1596.52 L1352.53,1596.33 L1353.38,1596.13 L1354.23,1595.94 L1355.08,1595.74 L1355.93,1595.54 L1356.78,1595.35 L1357.63,1595.14 L1358.48,1594.94 L1359.33,1594.74 L1360.18,1594.53 L1361.03,1594.33 L1361.88,1594.12 L1362.73,1593.91 L1363.57,1593.7 L1364.42,1593.48 L1365.27,1593.27 L1366.11,1593.05 L1366.96,1592.83 L1367.8,1592.62 L1368.64,1592.39 L1369.49,1592.17 L1370.33,1591.95 L1371.17,1591.72 L1372.01,1591.5 L1372.86,1591.27 L1373.7,1591.04 L1374.54,1590.81 L1375.38,1590.58 L1376.22,1590.34 L1377.06,1590.11 L1377.89,1589.87 L1378.73,1589.63 L1379.57,1589.39 L1380.41,1589.15 L1381.24,1588.91 L1382.08,1588.66 L1382.91,1588.42 L1383.75,1588.17 L1384.58,1587.92 L1385.41,1587.67 L1386.25,1587.42 L1387.08,1587.16 L1387.91,1586.91 L1388.74,1586.65 L1389.57,1586.39 L1390.4,1586.14 L1391.23,1585.87 L1392.06,1585.61 L1392.89,1585.35 L1393.72,1585.08 L1394.54,1584.82 L1395.37,1584.55 L1396.2,1584.28 L1397.02,1584.01 L1397.85,1583.74 L1398.67,1583.46 L1399.49,1583.19 L1400.32,1582.91 L1401.14,1582.63 L1401.96,1582.35 L1402.78,1582.07 L1403.6,1581.79 L1404.42,1581.5 L1404.42,1581.5 L1405.54,1581.11 L1406.64,1580.72 L1407.75,1580.33 L1408.85,1579.94 L1409.96,1579.54 L1411.06,1579.14 L1412.17,1578.74 L1413.28,1578.33 L1414.38,1577.92 L1415.49,1577.51 L1416.6,1577.1 L1417.71,1576.69 L1418.82,1576.27 L1419.93,1575.85 L1421.05,1575.43 L1422.16,1575 L1423.27,1574.58 L1424.39,1574.15 L1425.5,1573.72 L1426.63,1573.29 L1427.75,1572.86 L1428.86,1572.43 L1429.98,1571.99 L1431.11,1571.56 L1432.23,1571.12 L1433.35,1570.68 L1434.48,1570.24 L1435.6,1569.8 L1436.73,1569.36 L1437.86,1568.92 L1438.99,1568.48 L1653.57,1484.49 L1654.7,1484.04 L1655.83,1483.6 L1656.97,1483.16 L1658.1,1482.71 L1659.24,1482.27 L1660.38,1481.82 L1661.52,1481.38 L1662.67,1480.93 L1663.81,1480.49 L1664.96,1480.04 L1666.11,1479.6 L1667.27,1479.15 L1668.42,1478.71 L1669.58,1478.27 L1670.74,1477.82 L1671.9,1477.38 L1673.06,1476.94 L1674.23,1476.5 L1675.39,1476.06 L1676.56,1475.63 L1677.74,1475.19 L1678.91,1474.75 L1680.09,1474.32 L1681.27,1473.89 L1682.45,1473.46 L1683.63,1473.03 L1684.82,1472.6 L1686.01,1472.18 L1687.2,1471.76 L1688.4,1471.34 L1689.58,1470.92 L1689.58,1470.92 L1690.74,1470.52 L1691.9,1470.12 L1693.07,1469.72 L1694.23,1469.33 L1695.39,1468.94 L1696.56,1468.55 L1697.72,1468.16 L1698.89,1467.78 L1700.06,1467.4 L1701.23,1467.02 L1702.4,1466.65 L1703.57,1466.28 L1704.75,1465.91 L1705.92,1465.54 L1707.1,1465.18 L1708.27,1464.81 L1709.45,1464.46 L1710.63,1464.1 L1711.81,1463.75 L1712.99,1463.4 L1714.17,1463.05 L1715.35,1462.7 L1716.54,1462.36 L1717.72,1462.02 L1718.91,1461.68 L1720.09,1461.35 L1721.28,1461.02 L1722.47,1460.69 L1723.66,1460.37 L1724.85,1460.04 L1726.04,1459.72 L1727.23,1459.4 L1728.42,1459.09 L1729.62,1458.78 L1730.81,1458.47 L1732.01,1458.16 L1733.21,1457.86 L1734.4,1457.56 L1735.6,1457.26 L1736.8,1456.96 L1738,1456.67 L1739.2,1456.38 L1740.4,1456.09 L1741.61,1455.81 L1742.81,1455.53 L1744.01,1455.25 L1745.22,1454.97 L1746.43,1454.7 L1747.63,1454.43 L1748.84,1454.16 L1750.05,1453.9 L1751.26,1453.64 L1752.47,1453.38 L1753.68,1453.12 L1754.89,1452.87 L1756.1,1452.62 L1757.31,1452.37 L1758.53,1452.12 L1759.74,1451.88 L1760.96,1451.64 L1762.17,1451.41 L1763.39,1451.17 L1764.6,1450.94 L1765.82,1450.71 L1767.04,1450.49 L1768.26,1450.27 L1769.48,1450.05 L1770.7,1449.83 L1771.92,1449.61 L1773.14,1449.4 L1774.36,1449.19 L1775.59,1448.99 L1776.81,1448.79 L1778.03,1448.59 L1779.26,1448.39 L1780.48,1448.2 L1781.71,1448 L1782.93,1447.82 L1784.16,1447.63 L1785.39,1447.45 L1786.62,1447.27 L1787.84,1447.09 L1789.07,1446.92 L1790.3,1446.74 L1791.53,1446.58 L1792.76,1446.41 L1793.99,1446.25 L1795.22,1446.09 L1796.45,1445.93 L1797.69,1445.77 L1798.92,1445.62 L1800.15,1445.47 L1801.39,1445.33 L1802.62,1445.19 L1803.85,1445.05 L1805.09,1444.91 L1806.32,1444.77 L1807.56,1444.64 L1808.79,1444.51 L1810.03,1444.39 L1811.27,1444.26 L1812.5,1444.14 L1813.74,1444.03 L1814.98,1443.91 L1816.22,1443.8 L1817.46,1443.69 L1818.69,1443.59 L1819.93,1443.48 L1821.17,1443.38 L1822.41,1443.29 L1823.65,1443.19 L1824.89,1443.1 L1826.13,1443.01 L1827.37,1442.93 L1828.61,1442.84 L1829.85,1442.76 L1831.09,1442.69 L1832.34,1442.61 L1833.58,1442.54 L1834.82,1442.47 L1836.06,1442.41 L1837.3,1442.34 L1838.55,1442.28 L1839.79,1442.23 L1841.03,1442.17 L1842.27,1442.12 L1843.52,1442.07 L1844.76,1442.03 L1846,1441.99 L1847.25,1441.95 L1848.49,1441.91 L1849.73,1441.88 L1850.98,1441.84 L1852.22,1441.82 L1853.47,1441.79 L1854.71,1441.77 L1855.95,1441.75 L1857.2,1441.73 L1858.44,1441.72 L1859.69,1441.71 L1860.93,1441.7 L1862.17,1441.7 L1863.42,1441.69 L1864.66,1441.69 L1865.91,1441.7 L1867.15,1441.7 L1868.4,1441.71 L1869.64,1441.72 L1870.88,1441.74 L1872.13,1441.76 L1873.37,1441.78 L1874.62,1441.8 L1875.86,1441.83 L1877.1,1441.86 L1878.35,1441.89 L1879.59,1441.93 L1880.83,1441.96 L1882.08,1442.01 L1883.32,1442.05 L1884.56,1442.1 L1885.81,1442.15 L1887.05,1442.2 L1888.29,1442.25 L1889.53,1442.31 L1890.78,1442.37 L1892.02,1442.44 L1893.26,1442.5 L1894.5,1442.57 L1895.74,1442.65 L1896.99,1442.72 L1898.23,1442.8 L1899.47,1442.88 L1900.71,1442.96 L1901.95,1443.05 L1903.19,1443.14 L1904.43,1443.23 L1905.67,1443.33 L1906.91,1443.43 L1908.15,1443.53 L1909.38,1443.63 L1909.38,1443.63 L1910.65,1443.74 L1911.93,1443.86 L1913.21,1443.97 L1914.48,1444.09 L1915.76,1444.21 L1917.03,1444.34 L1918.29,1444.46 L1919.56,1444.59 L1920.83,1444.72 L1922.09,1444.85 L1923.35,1444.99 L1924.61,1445.12 L1925.87,1445.26 L1927.12,1445.4 L1928.38,1445.54 L1929.63,1445.68 L1930.88,1445.83 L1932.13,1445.97 L1933.37,1446.12 L1934.61,1446.26 L1935.85,1446.41 L1937.09,1446.56 L1938.33,1446.71 L1939.57,1446.86 L1940.81,1447.01 L1942.04,1447.16 L1943.27,1447.31 L1944.5,1447.46 L1945.73,1447.61 L1946.96,1447.76 L1948.19,1447.91 L1971.79,1450.81" vector-effect="none"/>
            </Tooltip>)})}

        {[5].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(5)}  fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" } fill-rule="evenodd" d="M63.3733,1625.08 L313.37,1622.28 L313.37,1622.28 L314.431,1622.26 L315.493,1622.25 L316.555,1622.24 L317.617,1622.23 L318.678,1622.22 L319.74,1622.21 L320.802,1622.2 L321.864,1622.19 L322.926,1622.18 L323.987,1622.17 L325.049,1622.16 L326.111,1622.15 L327.173,1622.14 L328.234,1622.13 L329.296,1622.12 L330.358,1622.11 L331.42,1622.1 L332.482,1622.1 L333.543,1622.09 L334.605,1622.08 L335.667,1622.07 L336.729,1622.07 L337.791,1622.06 L338.852,1622.05 L339.914,1622.05 L340.976,1622.04 L342.038,1622.03 L343.1,1622.03 L344.161,1622.02 L345.223,1622.02 L346.285,1622.01 L347.347,1622.01 L348.409,1622 L349.47,1622 L350.532,1621.99 L351.594,1621.99 L352.656,1621.98 L353.718,1621.98 L354.78,1621.98 L355.841,1621.97 L356.903,1621.97 L357.965,1621.97 L359.027,1621.97 L360.089,1621.96 L361.15,1621.96 L362.212,1621.96 L363.274,1621.96 L364.336,1621.96 L365.398,1621.95 L366.46,1621.95 L367.521,1621.95 L368.583,1621.95 L369.645,1621.95 L370.707,1621.95 L371.769,1621.95 L372.831,1621.95 L373.892,1621.95 L374.954,1621.95 L376.016,1621.95 L377.078,1621.95 L378.14,1621.96 L379.202,1621.96 L380.263,1621.96 L381.325,1621.96 L382.387,1621.96 L383.449,1621.97 L384.511,1621.97 L385.572,1621.97 L386.634,1621.97 L387.696,1621.98 L388.758,1621.98 L389.82,1621.99 L390.882,1621.99 L391.943,1621.99 L393.005,1622 L394.067,1622 L395.129,1622.01 L396.191,1622.01 L397.252,1622.02 L398.314,1622.02 L399.376,1622.03 L400.438,1622.03 L401.5,1622.04 L402.561,1622.05 L403.623,1622.05 L404.685,1622.06 L405.747,1622.07 L406.809,1622.08 L407.87,1622.08 L408.932,1622.09 L409.994,1622.1 L411.056,1622.11 L412.118,1622.11 L413.179,1622.12 L414.241,1622.13 L415.303,1622.14 L416.365,1622.15 L417.427,1622.16 L418.488,1622.17 L419.55,1622.18 L420.612,1622.19 L421.674,1622.2 L422.735,1622.21 L423.797,1622.22 L424.859,1622.23 L425.921,1622.24 L426.982,1622.25 L428.044,1622.27 L429.106,1622.28 L430.168,1622.29 L431.229,1622.3 L432.291,1622.32 L433.353,1622.33 L434.415,1622.34 L435.476,1622.35 L436.538,1622.37 L437.6,1622.38 L438.661,1622.39 L439.723,1622.41 L440.785,1622.42 L441.847,1622.44 L442.908,1622.45 L443.97,1622.47 L445.032,1622.48 L446.093,1622.5 L447.155,1622.51 L448.217,1622.53 L449.278,1622.55 L450.34,1622.56 L451.402,1622.58 L452.463,1622.59 L453.525,1622.61 L454.587,1622.63 L455.648,1622.65 L456.71,1622.66 L457.772,1622.68 L458.833,1622.7 L459.895,1622.72 L460.956,1622.74 L462.018,1622.75 L463.08,1622.77 L464.141,1622.79 L465.203,1622.81 L466.265,1622.83 L467.326,1622.85 L468.388,1622.87 L469.449,1622.89 L470.511,1622.91 L471.572,1622.93 L472.634,1622.95 L473.696,1622.97 L474.757,1623 L475.819,1623.02 L476.88,1623.04 L477.942,1623.06 L479.003,1623.08 L480.065,1623.11 L481.126,1623.13 L482.188,1623.15 L483.249,1623.17 L484.311,1623.2 L485.372,1623.22 L486.434,1623.24 L487.495,1623.27 L488.557,1623.29 L489.618,1623.32 L490.68,1623.34 L491.741,1623.37 L492.803,1623.39 L493.864,1623.42 L494.926,1623.44 L495.987,1623.47 L497.048,1623.49 L498.11,1623.52 L499.171,1623.55 L500.233,1623.57 L501.294,1623.6 L502.356,1623.63 L503.417,1623.65 L504.478,1623.68 L504.478,1623.68 L1211.23,1641.97 L1212.47,1642 L1213.71,1642.03 L1214.95,1642.07 L1216.19,1642.1 L1217.43,1642.13 L1218.67,1642.16 L1219.92,1642.19 L1221.17,1642.22 L1222.41,1642.25 L1223.67,1642.28 L1224.92,1642.3 L1226.18,1642.33 L1227.44,1642.35 L1228.7,1642.38 L1229.96,1642.4 L1231.22,1642.42 L1232.48,1642.44 L1233.75,1642.46 L1235.01,1642.47 L1236.28,1642.49 L1237.55,1642.5 L1238.82,1642.51 L1240.1,1642.52 L1241.37,1642.52 L1242.65,1642.53 L1243.93,1642.53 L1245.21,1642.53 L1246.49,1642.52 L1247.77,1642.51 L1249.06,1642.5 L1250.33,1642.49 L1250.33,1642.49 L1251.29,1642.48 L1252.24,1642.47 L1253.2,1642.45 L1254.15,1642.43 L1255.11,1642.42 L1256.07,1642.4 L1257.02,1642.37 L1257.98,1642.35 L1258.93,1642.32 L1259.89,1642.3 L1260.85,1642.27 L1261.8,1642.24 L1262.76,1642.21 L1263.71,1642.17 L1264.67,1642.14 L1265.62,1642.1 L1266.58,1642.06 L1267.53,1642.02 L1268.49,1641.98 L1269.44,1641.93 L1270.4,1641.89 L1271.35,1641.84 L1272.31,1641.79 L1273.26,1641.74 L1274.22,1641.69 L1275.17,1641.63 L1276.13,1641.58 L1277.08,1641.52 L1278.03,1641.46 L1278.99,1641.4 L1279.94,1641.34 L1280.9,1641.27 L1281.85,1641.21 L1282.8,1641.14 L1283.76,1641.07 L1284.71,1641 L1285.66,1640.93 L1286.61,1640.85 L1287.57,1640.78 L1288.52,1640.7 L1289.47,1640.62 L1290.42,1640.54 L1291.37,1640.45 L1292.33,1640.37 L1293.28,1640.28 L1294.23,1640.19 L1295.18,1640.1 L1296.13,1640.01 L1297.08,1639.92 L1298.03,1639.83 L1298.98,1639.73 L1299.93,1639.63 L1300.88,1639.53 L1301.83,1639.43 L1302.78,1639.33 L1303.73,1639.22 L1304.68,1639.11 L1305.63,1639.01 L1306.57,1638.9 L1307.52,1638.78 L1308.47,1638.67 L1309.42,1638.55 L1310.36,1638.44 L1311.31,1638.32 L1312.26,1638.2 L1313.2,1638.08 L1314.15,1637.95 L1315.1,1637.83 L1316.04,1637.7 L1316.99,1637.57 L1317.93,1637.44 L1318.88,1637.31 L1319.82,1637.18 L1320.77,1637.04 L1321.71,1636.9 L1322.65,1636.77 L1323.6,1636.63 L1324.54,1636.48 L1325.48,1636.34 L1326.42,1636.19 L1327.37,1636.05 L1328.31,1635.9 L1329.25,1635.75 L1330.19,1635.6 L1331.13,1635.44 L1332.07,1635.29 L1333.01,1635.13 L1333.95,1634.97 L1334.89,1634.81 L1335.83,1634.65 L1336.77,1634.48 L1337.7,1634.32 L1338.64,1634.15 L1339.58,1633.98 L1340.52,1633.81 L1341.45,1633.64 L1342.39,1633.47 L1343.32,1633.29 L1344.26,1633.11 L1345.19,1632.93 L1346.13,1632.75 L1347.06,1632.57 L1348,1632.39 L1348.93,1632.2 L1349.86,1632.02 L1350.8,1631.83 L1351.73,1631.64 L1352.66,1631.44 L1353.59,1631.25 L1354.52,1631.06 L1355.45,1630.86 L1356.38,1630.66 L1357.31,1630.46 L1358.24,1630.26 L1359.17,1630.05 L1360.1,1629.85 L1361.03,1629.64 L1361.95,1629.43 L1362.88,1629.22 L1363.81,1629.01 L1364.73,1628.8 L1365.66,1628.58 L1366.58,1628.36 L1367.51,1628.15 L1368.43,1627.93 L1369.35,1627.7 L1370.28,1627.48 L1371.2,1627.26 L1372.12,1627.03 L1373.04,1626.8 L1373.96,1626.57 L1374.88,1626.34 L1375.8,1626.11 L1376.72,1625.87 L1377.64,1625.63 L1378.56,1625.4 L1379.48,1625.16 L1380.39,1624.91 L1381.31,1624.67 L1382.22,1624.43 L1383.14,1624.18 L1384.06,1623.93 L1384.97,1623.68 L1385.88,1623.43 L1386.8,1623.18 L1387.71,1622.92 L1388.62,1622.67 L1389.53,1622.41 L1390.44,1622.15 L1391.35,1621.89 L1392.26,1621.63 L1393.17,1621.36 L1394.08,1621.1 L1394.99,1620.83 L1395.9,1620.56 L1396.8,1620.29 L1397.71,1620.02 L1398.62,1619.74 L1399.52,1619.47 L1400.42,1619.19 L1401.33,1618.91 L1402.23,1618.63 L1403.13,1618.35 L1404.04,1618.07 L1404.94,1617.78 L1405.84,1617.49 L1406.74,1617.21 L1407.64,1616.92 L1408.53,1616.62 L1409.43,1616.33 L1410.33,1616.04 L1411.23,1615.74 L1412.12,1615.44 L1413.02,1615.14 L1413.91,1614.84 L1414.81,1614.54 L1415.7,1614.23 L1416.59,1613.93 L1417.48,1613.62 L1418.37,1613.31 L1418.37,1613.31 L1419.56,1612.9 L1420.76,1612.48 L1421.95,1612.05 L1423.14,1611.63 L1424.33,1611.2 L1425.51,1610.77 L1426.69,1610.34 L1427.87,1609.91 L1429.05,1609.48 L1430.22,1609.04 L1431.4,1608.61 L1432.56,1608.17 L1433.73,1607.73 L1434.9,1607.29 L1436.06,1606.85 L1437.22,1606.41 L1438.38,1605.97 L1439.53,1605.52 L1440.69,1605.08 L1441.83,1604.64 L1442.98,1604.2 L1444.13,1603.75 L1445.28,1603.31 L1446.42,1602.86 L1447.57,1602.42 L1448.71,1601.97 L1449.85,1601.52 L1450.99,1601.08 L1452.12,1600.64 L1453.26,1600.19 L1454.39,1599.75 L1668.97,1515.76 L1670.11,1515.31 L1671.24,1514.87 L1672.36,1514.43 L1673.49,1513.99 L1674.62,1513.55 L1675.74,1513.11 L1676.87,1512.67 L1677.99,1512.24 L1679.11,1511.8 L1680.23,1511.37 L1681.35,1510.94 L1682.46,1510.51 L1683.57,1510.08 L1684.69,1509.65 L1685.8,1509.23 L1686.92,1508.8 L1688.03,1508.38 L1689.14,1507.96 L1690.25,1507.55 L1691.36,1507.13 L1692.47,1506.72 L1693.58,1506.31 L1694.68,1505.9 L1695.79,1505.49 L1696.9,1505.09 L1698,1504.69 L1699.11,1504.29 L1700.21,1503.9 L1701.32,1503.51 L1702.42,1503.12 L1703.54,1502.73 L1703.54,1502.73 L1704.61,1502.36 L1705.67,1501.99 L1706.74,1501.63 L1707.81,1501.27 L1708.88,1500.91 L1709.95,1500.55 L1711.03,1500.19 L1712.1,1499.84 L1713.18,1499.49 L1714.25,1499.14 L1715.33,1498.8 L1716.41,1498.46 L1717.49,1498.12 L1718.57,1497.78 L1719.65,1497.44 L1720.73,1497.11 L1721.81,1496.78 L1722.9,1496.46 L1723.98,1496.13 L1725.07,1495.81 L1726.15,1495.49 L1727.24,1495.17 L1728.33,1494.86 L1729.42,1494.54 L1730.51,1494.23 L1731.6,1493.93 L1732.69,1493.62 L1733.79,1493.32 L1734.88,1493.02 L1735.98,1492.72 L1737.07,1492.43 L1738.17,1492.14 L1739.27,1491.85 L1740.36,1491.56 L1741.46,1491.28 L1742.56,1490.99 L1743.66,1490.72 L1744.76,1490.44 L1745.87,1490.16 L1746.97,1489.89 L1748.07,1489.62 L1749.18,1489.36 L1750.28,1489.09 L1751.39,1488.83 L1752.5,1488.57 L1753.6,1488.32 L1754.71,1488.06 L1755.82,1487.81 L1756.93,1487.56 L1758.04,1487.32 L1759.15,1487.07 L1760.27,1486.83 L1761.38,1486.59 L1762.49,1486.36 L1763.61,1486.13 L1764.72,1485.9 L1765.84,1485.67 L1766.95,1485.44 L1768.07,1485.22 L1769.19,1485 L1770.31,1484.78 L1771.42,1484.57 L1772.54,1484.35 L1773.66,1484.14 L1774.78,1483.94 L1775.9,1483.73 L1777.03,1483.53 L1778.15,1483.33 L1779.27,1483.13 L1780.4,1482.94 L1781.52,1482.75 L1782.64,1482.56 L1783.77,1482.37 L1784.89,1482.19 L1786.02,1482.01 L1787.15,1481.83 L1788.27,1481.65 L1789.4,1481.48 L1790.53,1481.31 L1791.66,1481.14 L1792.79,1480.97 L1793.92,1480.81 L1795.05,1480.65 L1796.18,1480.49 L1797.31,1480.34 L1798.44,1480.19 L1799.57,1480.04 L1800.71,1479.89 L1801.84,1479.74 L1802.97,1479.6 L1804.11,1479.46 L1805.24,1479.33 L1806.37,1479.19 L1807.51,1479.06 L1808.64,1478.93 L1809.78,1478.8 L1810.92,1478.68 L1812.05,1478.56 L1813.19,1478.44 L1814.33,1478.33 L1815.46,1478.21 L1816.6,1478.1 L1817.74,1477.99 L1818.88,1477.89 L1820.02,1477.79 L1821.16,1477.69 L1822.29,1477.59 L1823.43,1477.49 L1824.57,1477.4 L1825.71,1477.31 L1826.85,1477.23 L1827.99,1477.14 L1829.13,1477.06 L1830.28,1476.98 L1831.42,1476.91 L1832.56,1476.83 L1833.7,1476.76 L1834.84,1476.69 L1835.98,1476.63 L1837.13,1476.56 L1838.27,1476.5 L1839.41,1476.45 L1840.55,1476.39 L1841.7,1476.34 L1842.84,1476.29 L1843.98,1476.24 L1845.13,1476.2 L1846.27,1476.16 L1847.41,1476.12 L1848.56,1476.08 L1849.7,1476.05 L1850.84,1476.02 L1851.99,1475.99 L1853.13,1475.96 L1854.28,1475.94 L1855.42,1475.92 L1856.57,1475.9 L1857.71,1475.88 L1858.85,1475.87 L1860,1475.86 L1861.14,1475.85 L1862.29,1475.85 L1863.43,1475.85 L1864.58,1475.85 L1865.72,1475.85 L1866.86,1475.86 L1868.01,1475.86 L1869.15,1475.88 L1870.3,1475.89 L1871.44,1475.91 L1872.59,1475.93 L1873.73,1475.95 L1874.87,1475.97 L1876.02,1476 L1877.16,1476.03 L1878.31,1476.06 L1879.45,1476.1 L1880.59,1476.13 L1881.74,1476.17 L1882.88,1476.22 L1884.02,1476.26 L1885.17,1476.31 L1886.31,1476.36 L1887.45,1476.41 L1888.6,1476.47 L1889.74,1476.53 L1890.88,1476.59 L1892.02,1476.66 L1893.16,1476.72 L1894.31,1476.79 L1895.45,1476.86 L1896.59,1476.94 L1897.73,1477.02 L1898.87,1477.1 L1900.01,1477.18 L1901.15,1477.26 L1902.29,1477.35 L1903.43,1477.44 L1904.57,1477.53 L1905.71,1477.63 L1905.71,1477.63 L1906.9,1477.73 L1908.08,1477.84 L1909.27,1477.95 L1910.45,1478.06 L1911.64,1478.17 L1912.82,1478.29 L1914.01,1478.4 L1915.2,1478.52 L1916.39,1478.65 L1917.58,1478.77 L1918.78,1478.9 L1919.97,1479.03 L1921.17,1479.16 L1922.37,1479.29 L1923.56,1479.43 L1924.76,1479.56 L1925.97,1479.7 L1927.17,1479.84 L1928.38,1479.98 L1929.59,1480.12 L1930.8,1480.27 L1932.01,1480.41 L1933.22,1480.56 L1934.43,1480.7 L1935.64,1480.85 L1936.86,1481 L1938.07,1481.14 L1939.29,1481.29 L1940.51,1481.44 L1941.73,1481.59 L1942.95,1481.74 L1972.17,1485.34" vector-effect="none"/>
            </Tooltip>)})}

        {[6].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(6)}  fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" } fill-rule="evenodd" d="M524.092,1379.15 L486.189,1589.4" vector-effect="none"/>
            </Tooltip>)})}
  </g>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#c43c39" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[7].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(7)}  fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" } fill-rule="evenodd" d="M685.103,1625.94 L698.952,1554.9 L718.918,1471.5 L693.504,1470.54 L701.788,1380.9 L708.541,1279.02 L677.039,1154.34 L706.841,1147.15 L735.508,1147.76 L751.828,1140.01 L762.722,1134.62 L768.79,1127.31 L809.025,1077.65 L832.974,1050.62 L845.325,1038.73 L854.408,1029.96 L862.051,1029.6 L864.635,1033.59 L874.214,1048.62 L885.761,1056.06 L896.078,1062.47 L900.248,1064.94 L919.083,1065.61 L937.646,1059.8 L947.951,1056.11 L960.044,1051.91 L965.163,1050.27 L975.898,1055.17" vector-effect="none"/>
            </Tooltip>)})}

        {[8].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(8)}  fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" } fill-rule="evenodd" d="M965.181,1050.26 L966.35,1038.14" vector-effect="none"/>
            </Tooltip>)})}

        {[9].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(9)}  fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" } fill-rule="evenodd" d="M966.35,1038.14 L963.006,1018.64" vector-effect="none"/>
            </Tooltip>)})}

        {[10].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(10)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M963.006,1018.64 L988.668,1016.76" vector-effect="none"/>
            </Tooltip>)})}

        {[11].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(11)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M988.668,1016.76 L1019.57,1011.68" vector-effect="none"/>
            </Tooltip>)})}

        {[12].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(12)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1019.57,1011.68 L1004.58,983.603" vector-effect="none"/>
            </Tooltip>)})}

        {[13].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(13)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1004.58,983.603 L1030.64,940.656" vector-effect="none"/>
            </Tooltip>)})}

        {[14].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(14)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1030.64,940.656 L1206.6,967.311" vector-effect="none"/>
            </Tooltip>)})}

        {[15].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(15)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1206.6,967.311 L1269.33,994.779" vector-effect="none"/>
            </Tooltip>)})}

        {[16].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(16)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1269.33,994.779 L1322.61,1069.32" vector-effect="none"/>
            </Tooltip>)})}

        {[17].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(17)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1322.61,1069.32 L1320.46,1078.78" vector-effect="none"/>
            </Tooltip>)})}

        {[18].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(18)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M684.972,1625.9 L749.534,1669.02" vector-effect="none"/>
            </Tooltip>)})}

        {[19].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(19)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M472.925,1477.96 L529.143,1489.79 L557.059,1499.48 L569.48,1503.84 L605.562,1516.43 L647.35,1533.49 L698.998,1554.94" vector-effect="none"/>
            </Tooltip>)})}

        {[20].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(20)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M698.949,1554.92 L844.449,1565.42 L853.891,1592.97 L857.595,1603.96 L867.198,1632.36" vector-effect="none"/>
            </Tooltip>)})}

        {[21].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(21)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1324.25,1069.42 L1322.5,1078.93" vector-effect="none"/>
            </Tooltip>)})}

        {[22].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(22)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1324.25,1069.42 L1326.54,1056.67 L1328.36,1045.36 L1328.78,1043.51" vector-effect="none"/>
            </Tooltip>)})}

        {[23].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(23)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1233.49,978.905 L1235.89,972.306 L1236.27,968.559" vector-effect="none"/>
            </Tooltip>)})}

        {[24].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(24)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1328.78,1043.51 L1330.82,1042.35 L1332.09,1041.27 L1333.13,1038.9 L1333.53,1036.17 L1334.01,1033.94 L1334.31,1031.03" vector-effect="none"/>
            </Tooltip>)})}

        {[25].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(25)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1306.28,1157.87 L1289.49,1153.79 L1282.91,1151.52 L1273.73,1148.91 L1267.78,1147.55" vector-effect="none"/>
            </Tooltip>)})}

        {[26].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(26)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1306.28,1157.87 L1301.37,1183.74 L1295.62,1213.4 L1294.69,1217.08 L1294.02,1222.02 L1292.51,1229.26 L1291.87,1233.19 L1290.38,1240.25 L1288.73,1249.36 L1286.83,1259.75 L1284.15,1273.51 L1244.28,1264.26 L1214.18,1257.18 L1175.85,1248.08 L1166.1,1245.89 L1152.96,1242.74 L1115.3,1211.5 L1116.15,1175.23 L1116.9,1149.74 L1116.6,1148.07 L1113.38,1144.26 L1090.63,1118.49 L1058.66,1081.89 L1056.33,1079.04 L1053.23,1074.72 L1047.93,1065.21 L1039.06,1048.64 L1032.57,1035.89 L1019.57,1011.68" vector-effect="none"/>
            </Tooltip>)})}

        {[27].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(27)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1152.96,1242.74 L1124.19,1256.19 L1093.9,1270.57 L1061.62,1285.9 L1054.89,1288.82 L1048.67,1290.9 L1028.51,1287.82 L1022.54,1286.55 L1019.58,1285.92 L1013.42,1285.34 L1008.75,1284.87 L996.498,1282.91" vector-effect="none"/>
            </Tooltip>)})}

        {[28].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(28)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1089.13,1369.77 L1101.62,1300.84 L1177.37,1304.03 L1239.3,1307.23 L1228.8,1362.86" vector-effect="none"/>
            </Tooltip>)})}

        {[29].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(29)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1228.8,1362.86 L1235.55,1362.99 L1241.18,1359.46 L1242.86,1348.51 L1270.32,1348.69 L1278.28,1306.33 L1284.15,1273.51" vector-effect="none"/>
            </Tooltip>)})}

        {[30].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(30)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1241.18,1359.46 L1238.08,1375.5 L1196.78,1373.86 L1178.02,1373.12 L1176.69,1371.87 L1173.65,1371.72 L1172.42,1372.48 L1128.34,1370.86 L1089.13,1369.77" vector-effect="none"/>
            </Tooltip>)})}

        {[31].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(31)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1089.13,1369.77 L1044.84,1355.02 L1033.13,1351 L1027.07,1348.24 L1011.84,1339.13 L988.628,1325.26 L984.609,1322.45 L997.033,1311.6 L1003.14,1305.72 L1003.84,1305.05 L1000.5,1295 L998.272,1288.3 L996.498,1282.91" vector-effect="none"/>
            </Tooltip>)})}

        {[32].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(32)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M984.609,1322.45 L976.904,1319.86 L957.685,1318.93 L930.603,1317.58 L929.199,1309.08 L927.148,1296.67 L926.337,1290.92" vector-effect="none"/>
            </Tooltip>)})}

        {[33].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(33)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M882.144,1259.24 L909.871,1246.38 L918.378,1223.26 L924.036,1209.26 L962.625,1204.09 L988.62,1203.17 L989.902,1202.39 L1001.63,1201.44 L1001.91,1208.75 L1006.49,1208.89 L1019.31,1218.58 L1034.96,1210.61 L1039.49,1208.63 L1040.69,1197.73 L1024.67,1192.23 L1017.06,1185.88 L1015.15,1185.46 L1012.32,1186 L1009.4,1179.14 L999.609,1178.57 L999.26,1179.55 L997.888,1180.09 L997.004,1188.44 L998.266,1188.98 L997.28,1195.12 L995.764,1201.92" vector-effect="none"/>
            </Tooltip>)})}

        {[34].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(34)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M882.144,1259.24 L849.67,1260.11 L815.839,1262.33 L762.002,1267.07 L745.143,1268.56 L710.682,1271.41 L707.483,1271.38 L706.608,1271.37" vector-effect="none"/>
            </Tooltip>)})}

        {[35].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(35)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M718.918,1471.5 L764.304,1472.17 L796.216,1472.49 L840.099,1472.93 L853.098,1473.11" vector-effect="none"/>
            </Tooltip>)})}

        {[36].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(36)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M830.333,1472.46 L829.794,1486.93 L834.784,1494.89 L835.318,1495.74 L841.919,1527.2 L844.403,1539.03 L846.003,1546.66 L847.769,1554.02 L849.762,1562.33 L850.277,1566.02 L852.243,1573.08 L855.015,1581.87 L857.257,1588.98 L857.339,1590.67 L859.344,1590.89 L859.838,1596.79 L861.696,1602.28 L862.914,1607.31 L864.919,1609.38 L868.113,1610.15 L882.015,1609.26 L891.583,1607.7 L902.862,1606.45 L916.097,1604.98 L927.913,1603.67 L940.59,1602.26 L948.903,1601.54 L959.659,1600.51 L964.802,1599.86 L964.976,1598.59 L999.737,1595.88 L1008.08,1595.19 L1008.26,1595.43 L1007.62,1626.43 L1007.05,1639.65" vector-effect="none"/>
            </Tooltip>)})}

        {[37].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(37)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1008.08,1595.19 L1014.07,1594.69 L1019.65,1594.43 L1023.71,1594.06 L1029.8,1593.65 L1036.24,1592.72 L1039.79,1592.2 L1043,1591.6 L1046.39,1590.68 L1051.03,1589.65 L1054.85,1588.81 L1060.54,1588.07 L1069.22,1587.3 L1082.12,1592.87 L1087.87,1595.34 L1091.67,1596.26 L1092.84,1596.77 L1097.26,1597.46 L1103.79,1598.9 L1111.71,1600.64 L1118.29,1602.11 L1120.29,1602.39 L1122.7,1602.97 L1124.35,1603.18 L1128.23,1603.27" vector-effect="none"/>
            </Tooltip>)})}

        {[38].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(38)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M875.175,1707.66 L801.032,1713.67 L799.853,1713.51 L799.278,1710.16 L799.918,1707.69 L800.496,1706.54" vector-effect="none"/>
            </Tooltip>)})}

        {[39].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(39)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M926.337,1290.92 L920.276,1276.45 L918.726,1274.7 L892.133,1280.41 L882.144,1259.24" vector-effect="none"/>
            </Tooltip>)})}

        {[40].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(40)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1147.1,1371.44 L1160.93,1303.37" vector-effect="none"/>
            </Tooltip>)})}

        {[41].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(41)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M975.898,1055.17 L976.895,1055.63 L978.578,1059.64 L988.988,1082.24 L995.951,1098.36 L996.398,1099.8 L993.964,1103.86 L990.573,1108.7 L980.892,1123.58 L972.774,1135.95 L999.642,1135.83" vector-effect="none"/>
            </Tooltip>)})}

        {[42].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(42)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1007.37,1159.9 L1007.93,1146.41" vector-effect="none"/>
            </Tooltip>)})}

        {[43].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(43)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1009.4,1179.14 L1009.26,1173.48" vector-effect="none"/>
            </Tooltip>)})}

        {[44].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(44)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1310.07,975.107 L1312.96,985.279" vector-effect="none"/>
            </Tooltip>)})}

        {[45].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(45)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1310.07,975.107 L1297.44,973.034 L1287.22,971.54 L1274.01,968.859 L1264.18,967.359 L1254.25,965.686 L1248.24,964.796 L1243.16,963.872 L1240.43,963.367" vector-effect="none"/>
            </Tooltip>)})}

        {[46].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(46)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M473.355,1478.05 L465.929,1531.15 L459.56,1585.47 L457.198,1595.79 L453.038,1612.93" vector-effect="none"/>
            </Tooltip>)})}

        {[47].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(47)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1375.26,1601.16 L1387.27,1637.57 L1397.92,1647.98 L1412.76,1661.79" vector-effect="none"/>
            </Tooltip>)})}

        {[48].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(48)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1375.41,1601.62 L1357.38,1603.66 L1361.26,1616.03 L1365.98,1630.71 L1367.7,1634.58 L1383.99,1627.44" vector-effect="none"/>
            </Tooltip>)})}

        {[49].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(49)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1375.26,1601.16 L1386.91,1598.67" vector-effect="none"/>
            </Tooltip>)})}

        {[50].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(50)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1418.35,1690.89 L1393.47,1672.08 L1383.93,1663.21 L1377.15,1655.32 L1373.18,1647.28 L1368.84,1639.28 L1385.66,1632.54" vector-effect="none"/>
            </Tooltip>)})}

        {[51].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(51)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1418.35,1690.89 L1421.8,1693.55 L1430.31,1699.75 L1434.2,1703.13" vector-effect="none"/>
            </Tooltip>)})}
  </g>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#ff00ff" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="butt" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[52].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(52)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1347.41,1599.78 L1352.59,1611.92 L1360.35,1634.64 L1363.71,1643.86 L1364.26,1644.69 L1364.72,1649.98 L1375.01,1664.36 L1376.54,1668.77 L1395.7,1687.93 L1414.01,1722 L1410.48,1727.09 L1396.74,1730.32 L1385.7,1734.35 L1333.48,1746.3 L1330.93,1748.15 L1312.4,1759.8 L1287.6,1770.55 L1287.21,1759.47 L1286.28,1748.92 L1274.98,1749.6 L1264.44,1749.91 L1264.19,1754.48 L1242.38,1750.88 L1222.13,1752.06 L1207.1,1752.99 L1196.17,1753.76 L1183.81,1754.8 L1115.71,1760.05 L1061.39,1763.46 L1060.26,1737.99 L1057.81,1684.2 L1056.39,1649.85 L1104.22,1653.52 L1109.36,1627.89 L1124.07,1621.12 L1128.61,1600.98 L1186.27,1605.04 L1212.05,1604.7 L1262.6,1605.11 L1347.41,1599.78" vector-effect="none"/>
            </Tooltip>)})}

        {[53].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(53)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1223.1,1581.26 L1221.3,1590.85 L1212,1588.52 L1207.6,1587.58 L1208.89,1583.21 L1209.83,1579.16 L1223.1,1581.26" vector-effect="none"/>
            </Tooltip>)})}
  </g>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#c43c39" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[54].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(54)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1007.05,1639.65 L1054.51,1651.39 L1056.39,1649.85" vector-effect="none"/>
            </Tooltip>)})}

        {[55].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(55)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1347.26,1599.9 L1363.43,1598.21 L1374.76,1596.96 L1381.16,1596.12 L1382.03,1589.64 L1384.62,1576.84 L1385.81,1571.1 L1388.09,1558.41 L1390.39,1546.19 L1392.49,1534.78 L1394.84,1522.03 L1396.78,1512.48 L1397.74,1506.61 L1404.94,1471.87 L1405.89,1465.9 L1323.58,1453.16 L1300.36,1449.4 L1300.13,1450.72 L1277.8,1447.32 L1277.7,1448.04 L1259.42,1445.3 L1259.64,1444.46 L1228.9,1439.9 L1173.91,1432.04 L1151.99,1428.82 L1146.12,1428.17 L1137.29,1416.89 L1099.28,1421.15 L1058.53,1426.16 L1050.59,1434.24" vector-effect="none"/>
            </Tooltip>)})}

        {[56].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(56)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1434.2,1703.13 L1436.67,1706.75 L1437.71,1708.62 L1442.06,1716.07 L1458.82,1739.18 L1463.31,1744.15 L1468.01,1752.37 L1470.55,1757.63 L1474.85,1766.74 L1478.43,1774.57 L1482.81,1783.62 L1486.06,1789.73 L1492.15,1799.31" vector-effect="none"/>
            </Tooltip>)})}

        {[57].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(57)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1287.6,1770.55 L1284.3,1771.3 L1274.19,1771.86 L1268.31,1772.43 L1262.79,1772.6 L1257.76,1773 L1249.34,1773.29 L1248.86,1776.66 L1248.71,1780.18 L1248.43,1782.46 L1248.19,1785.63 L1247.88,1787.65 L1247.43,1793.13 L1246.94,1799.23 L1246.09,1806.58 L1245.62,1812.12 L1245.17,1818.24 L1243.97,1830.2 L1242.91,1842.45 L1242.04,1852.1 L1241.45,1857.09 L1240.3,1868.83 L1239.35,1878.58 L1238.63,1890.84 L1238.13,1895.8 L1237.5,1902.1 L1236.63,1910.52 L1235.72,1919.24 L1235.13,1925.91" vector-effect="none"/>
            </Tooltip>)})}

        {[58].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(58)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1235.13,1925.91 L1219.09,1929.9 L1204.5,1933.5 L1184.25,1938.59 L1166.76,1942.98 L1154.1,1945.68 L1153.1,1945.9 L1136.88,1939.15" vector-effect="none"/>
            </Tooltip>)})}

        {[59].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(59)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1136.88,1939.15 L1127.07,1934.96 L1120.38,1932 L1113.76,1927.86" vector-effect="none"/>
            </Tooltip>)})}

        {[60].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(60)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1061.39,1763.46 L1051.34,1765.23 L1020.07,1767.58 L999.776,1769.3 L986.891,1770.48 L960.34,1772.77 L940.32,1774.8 L937.167,1774.9" vector-effect="none"/>
            </Tooltip>)})}

        {[61].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(61)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M765.688,1692.37 L763.541,1696.46 L712.961,1701.88 L684.509,1704.92 L671.763,1730.85 L668.766,1737.36 L668.565,1739.09 L660.543,1755.86 L655.032,1766.99 L648.028,1781.31 L643.63,1790.16 L650.414,1793.23 L671.616,1803.66 L686.511,1810.85 L694.17,1815 L695.37,1833.02 L759.53,1833.18" vector-effect="none"/>
            </Tooltip>)})}

        {[62].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(62)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M695.37,1833.02 L551.966,1833.03 L519.315,1832.82 L491.576,1832.89" vector-effect="none"/>
            </Tooltip>)})}

        {[63].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(63)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M437.5,1705.24 L439.258,1686.73 L442.577,1671.69 L444.758,1660.75 L445.321,1653.77 L446.903,1640.58 L447.387,1636.49 L449.389,1624.41 L450.892,1617.35 L453.038,1612.93" vector-effect="none"/>
            </Tooltip>)})}

        {[64].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(64)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M491.576,1832.89 L493.24,1829.5" vector-effect="none"/>
            </Tooltip>)})}

        {[65].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(65)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M493.24,1829.5 L499.495,1811.21" vector-effect="none"/>
            </Tooltip>)})}

        {[66].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(66)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M499.495,1811.21 L493.027,1807.88" vector-effect="none"/>
            </Tooltip>)})}

        {[67].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(67)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M493.027,1807.88 L484.466,1803.09" vector-effect="none"/>
            </Tooltip>)})}

        {[68].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(68)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M484.466,1803.09 L466.584,1792.46" vector-effect="none"/>
            </Tooltip>)})}

        {[69].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(69)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M466.584,1792.46 L461.986,1788.41" vector-effect="none"/>
            </Tooltip>)})}

        {[70].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(70)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M461.986,1788.41 L458.949,1774.34" vector-effect="none"/>
            </Tooltip>)})}

        {[71].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(71)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M458.949,1774.34 L450.553,1762.66" vector-effect="none"/>
            </Tooltip>)})}

        {[72].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(72)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M450.553,1762.66 L439.146,1726.44" vector-effect="none"/>
            </Tooltip>)})}

        {[73].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(73)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M439.146,1726.44 L437.5,1705.24" vector-effect="none"/>
            </Tooltip>)})}

        {[74].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(74)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M805.796,1826.77 L807.872,1829.45 L811.283,1830.2 L814.682,1830.55 L840.61,1833.62 L890.457,1839.19" vector-effect="none"/>
            </Tooltip>)})}

        {[75].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(75)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M803.142,1833.17 L803.037,1838.39 L801.699,1887.81 L803.494,1889.36 L832.135,1898.37 L844.051,1902.6 L862.268,1908.22 L864.035,1902 L878.213,1870.25 L885.824,1858.96 L897.748,1838.57 L898.544,1830.13 L899.952,1815.98 L903.445,1807.22 L904.391,1802.66 L905.18,1793.13 L906.251,1776.26" vector-effect="none"/>
            </Tooltip>)})}
  </g>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#000000" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="butt" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[76].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(76)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M906.251,1776.26 L901.426,1766.92 L918.746,1765.65 L934.052,1772.56 L939.802,1774.17 L959.708,1772.02 L963.295,1836.26 L1030.28,1856.29 L1104.26,1922.02 L1152.5,1945.22 L1234.87,1925.3 L1243.21,1932.41 L1248.03,1937.91 L1251.91,1951.53" vector-effect="none"/>
            </Tooltip>)})}
  </g>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#c43c39" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[77].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(77)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1235.13,1925.91 L1243.21,1932.41 L1248.03,1937.91 L1256.01,1964.89" vector-effect="none"/>
            </Tooltip>)})}

        {[78].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(78)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M862.803,1650.07 L847.678,1650.05 L840.318,1651.66 L830.547,1658.22" vector-effect="none"/>
            </Tooltip>)})}

        {[79].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(79)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M804.952,1666.42 L809.523,1687.53" vector-effect="none"/>
            </Tooltip>)})}

        {[80].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(80)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1229.3,1156.02 L1218.22,1154.43 L1215.76,1168.03 L1226.09,1172.21 L1254.89,1184.27 L1265.59,1189.42" vector-effect="none"/>
            </Tooltip>)})}

        {[81].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(81)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1265.59,1189.42 L1277.73,1190.35 L1283.12,1166.03 L1286.2,1152.66" vector-effect="none"/>
            </Tooltip>)})}

        {[82].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(82)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1288.78,1153.55 L1293.93,1131.48" vector-effect="none"/>
            </Tooltip>)})}

        {[83].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(83)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1322.5,1078.93 L1318.64,1096.76 L1315.58,1110.95 L1312.15,1126.79 L1305.87,1126.18 L1300.01,1132.36 L1293.93,1131.48" vector-effect="none"/>
            </Tooltip>)})}

        {[84].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(84)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1293.4,1449.69 L1301.02,1340.66 L1302.09,1325.1 L1316.21,1279.85 L1321.47,1252.99 L1325.79,1218.87 L1328.62,1192 L1331.28,1174.98 L1337.05,1133.36 L1343.95,1077.71 L1358.53,1004.51 L1363.09,981.364" vector-effect="none"/>
            </Tooltip>)})}

        {[85].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(85)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M253.464,1233.1 L248.429,1230.97 L257.823,1207.59 L261.548,1189.94 L324.023,1198.63 L322.585,1208.27 L321.67,1216.28 L319.271,1235.08 L316.382,1251.27 L298.982,1249.26 L286.824,1248.55 L281.538,1248.42 L262.754,1237.29 L253.464,1233.1" vector-effect="none"/>
            </Tooltip>)})}

        {[86].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(86)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M875.175,1707.66 L878.874,1705.72 L872.103,1659.86 L870.868,1653.7 L870.104,1649.88 L862.803,1650.07" vector-effect="none"/>
            </Tooltip>)})}

        {[87].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(87)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M803.076,1686.93 L799.87,1683.55 L794.63,1679.36 L793.973,1677.95 L796.161,1674.05 L802.235,1664.71 L804.968,1662.99 L804.952,1666.42" vector-effect="none"/>
            </Tooltip>)})}

        {[88].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(88)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M804.968,1662.99 L812.719,1662.44 L822.31,1661.72 L826.818,1660.62 L830.547,1658.22" vector-effect="none"/>
            </Tooltip>)})}

        {[89].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(89)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1412.76,1661.79 L1410.3,1663.09 L1406.73,1665 L1401.57,1668.52 L1394.56,1672.9" vector-effect="none"/>
            </Tooltip>)})}

        {[90].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(90)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1412.76,1661.79 L1423.58,1661.69 L1433.14,1661.01" vector-effect="none"/>
            </Tooltip>)})}

        {[91].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(91)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1387.07,1564.08 L1395.91,1564.03 L1400.84,1561.26 L1414.98,1561.67 L1436.73,1562.15 L1444.13,1562.21 L1461.23,1562.32 L1467.54,1591.63 L1483.59,1588.81" vector-effect="none"/>
            </Tooltip>)})}

        {[92].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(92)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M1147.72,1811.98 L1148.46,1808.29 L1150.38,1802.63 L1151.52,1799.29 L1153.04,1792.7 L1153.82,1789.29 L1157.86,1790.03 L1161.59,1791.23 L1163.13,1793.9 L1163.66,1794.83 L1163.32,1795.91" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#f3a6b2" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[93].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(93)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M2277.6,1577.62 L2309.64,1575.31 L2312.67,1575.29 L2309.4,1536.91 L2273.51,1532.5 L2277.6,1577.62" vector-effect="none"/>
            </Tooltip>)})}

        {[94].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(94)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M2287.13,1682.67 L2282.18,1628.09 L2345.57,1623.52 L2345.73,1646.29 L2342.02,1646.3 L2316.98,1663.71 L2310.46,1668.22 L2287.13,1682.67" vector-effect="none"/>
            </Tooltip>)})}

        {[95].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(95)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M2214.67,1672.36 L2217.24,1700.81 L2242.45,1709.28 L2276.94,1697.45 L2274.28,1668.06 L2214.67,1672.36" vector-effect="none"/>
            </Tooltip>)})}

        {[96].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(96)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M2140.97,1584.68 L2149.56,1585.38 L2157.02,1588.15 L2161.2,1592.08 L2167.25,1603.78 L2167.59,1604.29 L2167.94,1604.79 L2168.29,1605.29 L2168.63,1605.8 L2168.98,1606.3 L2169.33,1606.8 L2169.68,1607.3 L2170.03,1607.81 L2170.38,1608.31 L2170.73,1608.81 L2171.08,1609.31 L2171.43,1609.81 L2171.78,1610.3 L2172.14,1610.8 L2172.5,1611.3 L2172.86,1611.79 L2173.21,1612.29 L2173.58,1612.78 L2173.94,1613.27 L2174.31,1613.76 L2174.67,1614.25 L2175.04,1614.74 L2175.41,1615.22 L2175.79,1615.71 L2176.16,1616.19 L2176.54,1616.67 L2176.92,1617.15 L2177.31,1617.63 L2177.69,1618.1 L2178.08,1618.58 L2178.48,1619.05 L2178.87,1619.52 L2179.27,1619.99 L2179.67,1620.45 L2180.08,1620.91 L2180.49,1621.37 L2180.9,1621.83 L2181.31,1622.29 L2181.73,1622.74 L2182.16,1623.19 L2182.59,1623.64 L2183.02,1624.08 L2183.45,1624.52 L2183.89,1624.96 L2184.34,1625.4 L2184.79,1625.83 L2185.24,1626.26 L2185.69,1626.69 L2186.15,1627.11 L2186.61,1627.54 L2187.08,1627.96 L2187.54,1628.38 L2188.01,1628.79 L2188.49,1629.21 L2188.96,1629.62 L2189.44,1630.03 L2189.92,1630.44 L2190.4,1630.84 L2190.89,1631.25 L2191.38,1631.65 L2191.86,1632.05 L2192.35,1632.45 L2192.85,1632.85 L2193.34,1633.24 L2193.83,1633.64 L2194.33,1634.03 L2194.82,1634.42 L2195.32,1634.82 L2195.82,1635.21 L2196.32,1635.59 L2196.82,1635.98 L2197.32,1636.37 L2197.82,1636.75 L2198.32,1637.14 L2198.82,1637.52 L2199.31,1637.91 L2199.81,1638.29 L2200.31,1638.67 L2200.81,1639.05 L2201.31,1639.43 L2201.8,1639.81 L2202.3,1640.19 L2202.79,1640.57 L2203.29,1640.95 L2203.78,1641.33 L2204.27,1641.71 L2204.76,1642.09 L2205.24,1642.47 L2205.73,1642.85 L2206.21,1643.23 L2206.69,1643.61 L2207.17,1643.99 L2207.65,1644.37 L2208.13,1644.75 L2208.6,1645.13 L2209.08,1645.52 L2209.55,1645.9 L2210.02,1646.28 L2210.5,1646.66 L2210.97,1647.04 L2211.44,1647.42 L2211.91,1647.81 L2212.38,1648.19 L2212.85,1648.57 L2213.31,1648.96 L2213.78,1649.34 L2214.25,1649.72 L2214.72,1650.11 L2215.19,1650.49 L2215.65,1650.88 L2216.12,1651.26 L2216.59,1651.65 L2217.06,1652.03 L2217.53,1652.42 L2218,1652.81 L2218.47,1653.2 L2218.94,1653.58 L2219.41,1653.97 L2219.88,1654.36 L2220.35,1654.75 L2220.83,1655.14 L2221.3,1655.53 L2221.78,1655.92 L2222.26,1656.31 L2222.74,1656.71 L2223.22,1657.1 L2223.7,1657.49 L2224.19,1657.89 L2224.67,1658.28 L2225.16,1658.68 L2225.65,1659.07 L2226.14,1659.47 L2226.63,1659.87 L2227.13,1660.26 L2227.63,1660.66 L2228.13,1661.06 L2228.63,1661.46 L2229.13,1661.86 L2229.64,1662.27 L2230.15,1662.67 L2230.67,1663.07 L2231.18,1663.48 L2231.7,1663.88 L2232.22,1664.29 L2232.75,1664.69 L2233.28,1665.1 L2233.81,1665.51 L2234.34,1665.92 L2234.88,1666.33 L2235.42,1666.74 L2235.97,1667.15 L2236.52,1667.56 L2237.07,1667.98 L2237.63,1668.39 L2238.19,1668.81 L2238.74,1669.23 L2239.28,1669.65 L2239.78,1670.09 L2240.24,1670.53 L2240.64,1671 L2240.97,1671.48 L2241.21,1671.98 L2241.36,1672.51 L2241.41,1673.06 L2241.37,1673.64 L2241.27,1674.23 L2241.13,1674.82 L2240.98,1675.42 L2240.82,1676.02 L2240.68,1676.61 L2240.56,1677.19 L2240.45,1677.77 L2240.35,1678.35 L2240.26,1678.92 L2240.18,1679.5 L2240.11,1680.07 L2240.06,1680.65 L2240.01,1681.23 L2239.97,1681.81 L2239.94,1682.4 L2239.91,1682.99 L2239.89,1683.6 L2239.88,1684.2 L2239.86,1684.81 L2239.79,1685.41 L2239.64,1685.97 L2239.38,1686.48 L2239.01,1686.95 L2238.56,1687.38 L2238.06,1687.79 L2237.56,1688.19 L2237.09,1688.62 L2236.68,1689.07 L2236.34,1689.55 L2236.05,1690.07 L2235.82,1690.6 L2235.63,1691.16 L2235.49,1691.73 L2235.37,1692.32 L2235.28,1692.92 L2235.21,1693.54 L2235.15,1694.15 L2235.09,1694.77 L2235.04,1695.39 L2234.97,1696.01 L2234.9,1696.62 L2234.8,1697.22 L2234.7,1697.82 L2234.6,1698.41 L2234.5,1699 L2234.4,1699.58 L2234.32,1700.15 L2234.26,1700.73 L2234.22,1701.3 L2234.21,1701.87 L2234.23,1702.44 L2234.29,1703.02 L2234.38,1703.59 L2234.5,1704.16 L2234.64,1704.73 L2234.8,1705.3 L2234.97,1705.87 L2235.15,1706.45 L2235.33,1707.02 L2235.51,1707.6 L2235.68,1708.17 L2235.84,1708.75 L2235.98,1709.33 L2236.1,1709.91 L2236.2,1710.49 L2236.26,1711.08 L2236.3,1711.66 L2236.31,1712.25 L2236.29,1712.84 L2236.25,1713.43 L2236.18,1714.01 L2236.09,1714.6 L2235.97,1715.18 L2235.84,1715.77 L2235.68,1716.35 L2235.5,1716.93 L2235.3,1717.5 L2235.09,1718.07 L2234.86,1718.64 L2234.61,1719.2 L2234.35,1719.76 L2234.07,1720.31 L2233.78,1720.86 L2233.48,1721.4 L2233.17,1721.94 L2232.85,1722.47 L2232.52,1722.99 L2232.18,1723.5 L2231.84,1724.02 L2231.49,1724.52 L2231.14,1725.03 L2230.78,1725.53 L2230.43,1726.03 L2230.06,1726.52 L2229.7,1727.02 L2229.34,1727.51 L2228.98,1728 L2228.63,1728.5 L2228.28,1728.99 L2227.93,1729.49 L2227.59,1729.98 L2227.25,1730.48 L2226.92,1730.98 L2226.6,1731.49 L2226.3,1731.99 L2226,1732.51 L2225.71,1733.02 L2225.44,1733.55 L2225.18,1734.07 L2224.93,1734.61 L2224.69,1735.14 L2224.46,1735.69 L2224.25,1736.23 L2224.04,1736.78 L2223.85,1737.34 L2223.66,1737.9 L2223.48,1738.46 L2223.32,1739.03 L2223.15,1739.6 L2223,1740.17 L2222.85,1740.75 L2222.71,1741.33 L2222.58,1741.91 L2222.45,1742.49 L2222.32,1743.08 L2222.2,1743.66 L2222.09,1744.25 L2221.98,1744.84 L2221.87,1745.43 L2221.76,1746.03 L2221.65,1746.62 L2221.55,1747.21 L2221.45,1747.81 L2221.34,1748.4" vector-effect="none"/>
            </Tooltip>)})}

        {[97].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(97)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M2162.74,1585.9 L2163.89,1586.8 L2167.28,1591.39 L2170.03,1596.77 L2172.39,1601.51 L2175,1605.24 L2178.06,1609.53 L2181.19,1613.65 L2184.46,1617.59 L2187.93,1621.3 L2191.63,1624.78 L2195.58,1628.14 L2199.73,1631.45 L2204,1634.74 L2208.35,1638.09 L2212.71,1641.53 L2217.01,1645.02 L2221.26,1648.52 L2225.49,1652 L2229.71,1655.44 L2233.95,1658.82 L2238.22,1662.13 L2242.55,1665.39 L2245.32,1668.17 L2246.55,1670.19 L2246.41,1676.63 L2245.72,1681.72 L2245.54,1685.56 L2244.8,1687.87 L2242.14,1691.24 L2240.65,1694.82 L2240.38,1698.46 L2240.07,1703.19 L2241.22,1706.83 L2241.89,1709.94 L2241.51,1716.29 L2239.26,1722.42 L2236.01,1727.74 L2232.7,1732.35 L2230.24,1736.51 L2228.81,1740.52 L2228.06,1744.26 L2226.99,1749.35" vector-effect="none"/>
            </Tooltip>)})}

        {[98].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(98)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M2142.21,1597.66 L2145.56,1632.82 L2181.58,1630.21 L2179.09,1627.85 L2177.15,1625.77 L2175.21,1623.68 L2174.52,1622.85 L2173.44,1621.53 L2171.66,1619.39 L2170.01,1617.2 L2168.35,1615.02 L2166.78,1612.8 L2165.2,1610.59 L2163.54,1608.12 L2161.87,1605.65 L2160.71,1603.3 L2159.54,1600.95 L2158.47,1598.78 L2157.4,1596.61 L2142.21,1597.66" vector-effect="none"/>
            </Tooltip>)})}

        {[99].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(99)} fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }  fill-rule="evenodd" d="M2141.45,1589.78 L2143.5,1589.7 L2148.37,1590.29 L2151.82,1591.85 L2155.84,1593.99 L2157.4,1596.61 L2159.54,1600.95 L2161.87,1605.65 L2165.2,1610.59 L2168.35,1615.02 L2171.66,1619.39 L2175.21,1623.68 L2179.09,1627.85 L2183.28,1631.82 L2187.63,1635.54 L2192.06,1639.08 L2196.48,1642.49 L2200.83,1645.84 L2205.08,1649.2 L2209.27,1652.6 L2213.47,1656.05 L2217.83,1659.64 L2221.95,1663 L2226.28,1666.45 L2230.68,1669.86 L2235.13,1673.22 L2234.93,1676.39 L2234.27,1681.13 L2232.05,1686.53 L2229.95,1691.09 L2228.96,1697.42 L2228.59,1702.94 L2229.01,1705.19 L2230.09,1709.37 L2230.28,1714.49 L2228.4,1719.07 L2226.01,1722.68 L2223.02,1726.82 L2220.09,1731.7 L2217.9,1737.29 L2216.77,1742.37 L2215.69,1747.46" vector-effect="none"/>
            </Tooltip>)})}

        {[100].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(100)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2130.75,1598.48 L2096.71,1600.93 L2099.89,1636.09 L2134.1,1633.62 L2130.75,1598.48" vector-effect="none"/>
            </Tooltip>)})}

        {[101].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(101)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2091.02,1538.23 L2095.78,1590.72 L2129.5,1588.29 L2124.74,1535.8 L2091.02,1538.23" vector-effect="none"/>
            </Tooltip>)})}

        {[102].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(102)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2088.44,1509.76 L2090.56,1533.13 L2124.28,1530.7 L2122.76,1513.98 L2088.44,1509.76" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#ff0000" stroke-width="6.25" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="butt" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[103].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(103)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2424.7,1032.62 L2622.02,1205.3 L2972.73,1510.46 L3113.68,1638.47 L3163.33,1695.46 L3200.69,1761.49 L3225.62,1836.69 L3240.48,1943.77 L3242.2,1958.1" vector-effect="none"/>
            </Tooltip>)})}

        {[104].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(104)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2492.19,1531.78 L2739.44,1562.13 L2739.44,1562.13 L2740.27,1562.21 L2741.09,1562.3 L2741.92,1562.38 L2742.74,1562.47 L2743.57,1562.55 L2744.39,1562.64 L2745.22,1562.73 L2746.04,1562.82 L2746.87,1562.91 L2747.69,1563.01 L2748.51,1563.1 L2749.34,1563.2 L2750.16,1563.29 L2750.98,1563.39 L2751.81,1563.49 L2752.63,1563.59 L2753.45,1563.69 L2754.27,1563.79 L2755.1,1563.9 L2755.92,1564 L2756.74,1564.11 L2757.56,1564.22 L2758.38,1564.33 L2759.21,1564.44 L2760.03,1564.55 L2760.85,1564.66 L2761.67,1564.77 L2762.49,1564.89 L2763.31,1565 L2764.13,1565.12 L2764.95,1565.24 L2765.77,1565.36 L2766.59,1565.48 L2767.41,1565.6 L2768.23,1565.73 L2769.04,1565.85 L2769.86,1565.98 L2770.68,1566.1 L2771.5,1566.23 L2772.32,1566.36 L2773.13,1566.49 L2773.95,1566.62 L2774.77,1566.76 L2775.58,1566.89 L2776.4,1567.03 L2777.22,1567.16 L2778.03,1567.3 L2778.85,1567.44 L2779.66,1567.58 L2780.48,1567.72 L2781.29,1567.87 L2782.11,1568.01 L2782.92,1568.15 L2783.74,1568.3 L2784.55,1568.45 L2785.36,1568.6 L2786.18,1568.75 L2786.99,1568.9 L2787.8,1569.05 L2788.62,1569.21 L2789.43,1569.36 L2790.24,1569.52 L2791.05,1569.67 L2791.86,1569.83 L2792.67,1569.99 L2793.48,1570.15 L2794.29,1570.32 L2795.1,1570.48 L2795.91,1570.64 L2796.72,1570.81 L2797.53,1570.98 L2798.34,1571.14 L2799.15,1571.31 L2799.96,1571.48 L2800.77,1571.66 L2801.57,1571.83 L2802.38,1572 L2803.19,1572.18 L2803.99,1572.35 L2804.8,1572.53 L2805.61,1572.71 L2806.41,1572.89 L2807.22,1573.07 L2808.02,1573.26 L2808.83,1573.44 L2809.63,1573.62 L2810.43,1573.81 L2811.24,1574 L2812.04,1574.19 L2812.84,1574.38 L2813.64,1574.57 L2814.45,1574.76 L2815.25,1574.95 L2816.05,1575.15 L2816.85,1575.34 L2817.65,1575.54 L2818.45,1575.74 L2819.25,1575.94 L2820.05,1576.14 L2820.85,1576.34 L2821.65,1576.54 L2822.45,1576.75 L2823.24,1576.95 L2824.04,1577.16 L2824.84,1577.36 L2825.64,1577.57 L2826.43,1577.78 L2827.23,1577.99 L2828.02,1578.21 L2828.82,1578.42 L2829.61,1578.63 L2830.41,1578.85 L2831.2,1579.07 L2832,1579.29 L2832.79,1579.5 L2833.58,1579.73 L2834.37,1579.95 L2835.17,1580.17 L2835.96,1580.39 L2836.75,1580.62 L2837.54,1580.85 L2838.33,1581.07 L2839.12,1581.3 L2839.91,1581.53 L2840.7,1581.76 L2841.49,1582 L2842.27,1582.23 L2843.06,1582.46 L2843.85,1582.7 L2844.64,1582.94 L2845.42,1583.17 L2846.21,1583.41 L2846.99,1583.65 L2847.78,1583.9 L2848.56,1584.14 L2849.35,1584.38 L2850.13,1584.63 L2850.91,1584.87 L2851.7,1585.12 L2852.48,1585.37 L2853.26,1585.62 L2854.04,1585.87 L2854.82,1586.12 L2855.6,1586.38 L2856.38,1586.63 L2857.16,1586.89 L2857.94,1587.14 L2858.72,1587.4 L2859.5,1587.66 L2860.28,1587.92 L2861.05,1588.18 L2861.83,1588.44 L2862.61,1588.71 L2863.38,1588.97 L2864.16,1589.24 L2864.93,1589.51 L2865.7,1589.77 L2866.48,1590.04 L2867.25,1590.31 L2868.02,1590.59 L2868.8,1590.86 L2869.57,1591.13 L2870.34,1591.41 L2871.11,1591.68 L2871.88,1591.96 L2872.65,1592.24 L2873.42,1592.52 L2874.19,1592.8 L2874.95,1593.08 L2875.72,1593.37 L2876.49,1593.65 L2877.25,1593.94 L2878.02,1594.22 L2878.78,1594.51 L2879.55,1594.8 L2880.31,1595.09 L2881.08,1595.38 L2881.84,1595.67 L2882.6,1595.97 L2883.36,1596.26 L2883.36,1596.26 L3071.14,1667.14 L3071.14,1667.14 L3071.96,1667.42 L3072.78,1667.7 L3073.61,1667.97 L3074.43,1668.25 L3075.25,1668.52 L3076.08,1668.8 L3076.9,1669.07 L3077.73,1669.34 L3078.55,1669.61 L3079.38,1669.88 L3080.21,1670.14 L3081.04,1670.41 L3081.86,1670.67 L3082.69,1670.93 L3083.52,1671.19 L3084.35,1671.45 L3085.18,1671.71 L3086.01,1671.97 L3086.85,1672.22 L3087.68,1672.47 L3088.51,1672.73 L3089.34,1672.98 L3090.18,1673.23 L3091.01,1673.47 L3091.85,1673.72 L3092.68,1673.96 L3093.52,1674.21 L3094.35,1674.45 L3095.19,1674.69 L3096.03,1674.93 L3096.87,1675.17 L3097.7,1675.4 L3098.54,1675.64 L3099.38,1675.87 L3100.22,1676.1 L3101.06,1676.33 L3101.9,1676.56 L3102.75,1676.79 L3103.59,1677.02 L3104.43,1677.24 L3105.27,1677.47 L3106.12,1677.69 L3106.96,1677.91 L3107.8,1678.13 L3108.65,1678.34 L3109.49,1678.56 L3110.34,1678.78 L3111.19,1678.99 L3112.03,1679.2 L3112.88,1679.41 L3113.73,1679.62 L3114.58,1679.83 L3115.42,1680.03 L3116.27,1680.24 L3117.12,1680.44 L3117.97,1680.64 L3118.82,1680.84 L3119.67,1681.04 L3120.52,1681.24 L3121.37,1681.44 L3122.23,1681.63 L3123.08,1681.82 L3123.93,1682.01 L3124.78,1682.2 L3125.64,1682.39 L3126.49,1682.58 L3127.35,1682.77 L3128.2,1682.95 L3129.06,1683.13 L3129.91,1683.31 L3130.77,1683.49 L3131.62,1683.67 L3132.48,1683.85 L3133.34,1684.03 L3134.19,1684.2 L3135.05,1684.37 L3135.91,1684.54 L3136.77,1684.71 L3137.63,1684.88 L3138.49,1685.05 L3139.35,1685.21 L3140.21,1685.38 L3141.07,1685.54 L3141.93,1685.7 L3142.79,1685.86 L3143.65,1686.02 L3144.51,1686.17 L3145.37,1686.33 L3146.24,1686.48 L3147.1,1686.64 L3147.96,1686.79 L3148.82,1686.94 L3149.69,1687.08 L3150.55,1687.23 L3151.42,1687.37 L3152.28,1687.52 L3153.15,1687.66 L3154.01,1687.8 L3154.88,1687.94 L3155.74,1688.08 L3156.61,1688.21 L3157.47,1688.35 L3158.34,1688.48 L3159.21,1688.61 L3160.08,1688.74 L3160.94,1688.87 L3161.81,1689 L3162.68,1689.12 L3163.55,1689.24 L3164.42,1689.37 L3165.28,1689.49 L3166.15,1689.61 L3167.02,1689.73 L3167.89,1689.84 L3168.76,1689.96 L3169.63,1690.07 L3170.5,1690.18 L3171.37,1690.29 L3172.24,1690.4 L3173.11,1690.51 L3173.99,1690.62 L3174.86,1690.72 L3175.73,1690.83 L3176.6,1690.93 L3177.47,1691.03 L3178.35,1691.13 L3179.22,1691.22 L3180.09,1691.32 L3180.96,1691.41 L3181.84,1691.51 L3182.71,1691.6 L3183.58,1691.69 L3184.46,1691.78 L3185.33,1691.86 L3186.21,1691.95 L3187.08,1692.03 L3187.95,1692.12 L3188.83,1692.2 L3189.7,1692.28 L3190.58,1692.35 L3191.45,1692.43 L3192.33,1692.51 L3193.2,1692.58 L3194.08,1692.65 L3194.96,1692.72 L3195.83,1692.79 L3196.71,1692.86 L3197.58,1692.92 L3198.46,1692.99 L3199.34,1693.05 L3200.21,1693.11 L3201.09,1693.17 L3201.97,1693.23 L3202.84,1693.29 L3203.72,1693.35 L3204.6,1693.4 L3205.48,1693.45 L3206.35,1693.5 L3207.23,1693.55 L3208.11,1693.6 L3208.99,1693.65 L3209.86,1693.69 L3210.74,1693.74 L3211.62,1693.78 L3212.5,1693.82 L3213.38,1693.86 L3214.26,1693.9 L3215.13,1693.93 L3216.01,1693.97 L3216.89,1694 L3217.77,1694.03 L3218.65,1694.06 L3219.53,1694.09 L3220.41,1694.12 L3221.29,1694.14 L3222.16,1694.17 L3223.04,1694.19 L3223.92,1694.21 L3224.8,1694.23 L3225.68,1694.25 L3225.68,1694.25 L3412.34,1686.65" vector-effect="none"/>
            </Tooltip>)})}

        {[105].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(105)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2493.46,1549.17 L2737.09,1579.08 L2737.09,1579.08 L2737.88,1579.16 L2738.68,1579.24 L2739.47,1579.32 L2740.27,1579.4 L2741.06,1579.49 L2741.86,1579.57 L2742.65,1579.66 L2743.45,1579.74 L2744.24,1579.83 L2745.04,1579.92 L2745.83,1580.01 L2746.62,1580.1 L2747.42,1580.19 L2748.21,1580.29 L2749,1580.38 L2749.8,1580.48 L2750.59,1580.58 L2751.38,1580.68 L2752.18,1580.78 L2752.97,1580.88 L2753.76,1580.98 L2754.55,1581.08 L2755.34,1581.19 L2756.14,1581.29 L2756.93,1581.4 L2757.72,1581.51 L2758.51,1581.62 L2759.3,1581.73 L2760.09,1581.84 L2760.88,1581.95 L2761.67,1582.07 L2762.46,1582.18 L2763.25,1582.3 L2764.04,1582.41 L2764.83,1582.53 L2765.62,1582.65 L2766.41,1582.77 L2767.2,1582.9 L2767.99,1583.02 L2768.77,1583.14 L2769.56,1583.27 L2770.35,1583.4 L2771.14,1583.52 L2771.92,1583.65 L2772.71,1583.78 L2773.5,1583.92 L2774.28,1584.05 L2775.07,1584.18 L2775.86,1584.32 L2776.64,1584.45 L2777.43,1584.59 L2778.21,1584.73 L2779,1584.87 L2779.78,1585.01 L2780.57,1585.15 L2781.35,1585.3 L2782.13,1585.44 L2782.92,1585.59 L2783.7,1585.73 L2784.48,1585.88 L2785.27,1586.03 L2786.05,1586.18 L2786.83,1586.33 L2787.61,1586.48 L2788.4,1586.64 L2789.18,1586.79 L2789.96,1586.95 L2790.74,1587.11 L2791.52,1587.27 L2792.3,1587.42 L2793.08,1587.59 L2793.86,1587.75 L2794.64,1587.91 L2795.42,1588.07 L2796.2,1588.24 L2796.97,1588.41 L2797.75,1588.57 L2798.53,1588.74 L2799.31,1588.91 L2800.08,1589.08 L2800.86,1589.26 L2801.64,1589.43 L2802.41,1589.6 L2803.19,1589.78 L2803.96,1589.96 L2804.74,1590.14 L2805.51,1590.32 L2806.29,1590.5 L2807.06,1590.68 L2807.84,1590.86 L2808.61,1591.04 L2809.38,1591.23 L2810.16,1591.41 L2810.93,1591.6 L2811.7,1591.79 L2812.47,1591.98 L2813.24,1592.17 L2814.01,1592.36 L2814.79,1592.56 L2815.56,1592.75 L2816.33,1592.95 L2817.09,1593.14 L2817.86,1593.34 L2818.63,1593.54 L2819.4,1593.74 L2820.17,1593.94 L2820.94,1594.14 L2821.7,1594.35 L2822.47,1594.55 L2823.24,1594.76 L2824,1594.96 L2824.77,1595.17 L2825.53,1595.38 L2826.3,1595.59 L2827.06,1595.8 L2827.83,1596.01 L2828.59,1596.23 L2829.35,1596.44 L2830.12,1596.66 L2830.88,1596.88 L2831.64,1597.09 L2832.4,1597.31 L2833.17,1597.53 L2833.93,1597.75 L2834.69,1597.98 L2835.45,1598.2 L2836.21,1598.43 L2836.97,1598.65 L2837.72,1598.88 L2838.48,1599.11 L2839.24,1599.34 L2840,1599.57 L2840.76,1599.8 L2841.51,1600.03 L2842.27,1600.27 L2843.02,1600.5 L2843.78,1600.74 L2844.53,1600.98 L2845.29,1601.21 L2846.04,1601.45 L2846.8,1601.69 L2847.55,1601.94 L2848.3,1602.18 L2849.05,1602.42 L2849.81,1602.67 L2850.56,1602.92 L2851.31,1603.16 L2852.06,1603.41 L2852.81,1603.66 L2853.56,1603.91 L2854.31,1604.16 L2855.05,1604.42 L2855.8,1604.67 L2856.55,1604.93 L2857.3,1605.18 L2858.04,1605.44 L2858.79,1605.7 L2859.53,1605.96 L2860.28,1606.22 L2861.02,1606.48 L2861.77,1606.74 L2862.51,1607.01 L2863.25,1607.27 L2864,1607.54 L2864.74,1607.81 L2865.48,1608.08 L2866.22,1608.35 L2866.96,1608.62 L2867.7,1608.89 L2868.44,1609.16 L2869.18,1609.44 L2869.92,1609.71 L2870.66,1609.99 L2871.39,1610.27 L2872.13,1610.54 L2872.87,1610.82 L2873.6,1611.1 L2874.34,1611.39 L2875.07,1611.67 L2875.81,1611.95 L2875.81,1611.95 L3063.97,1682.98 L3063.97,1682.98 L3064.83,1683.27 L3065.69,1683.56 L3066.55,1683.85 L3067.41,1684.14 L3068.28,1684.43 L3069.14,1684.72 L3070,1685 L3070.87,1685.29 L3071.73,1685.57 L3072.6,1685.85 L3073.47,1686.13 L3074.33,1686.41 L3075.2,1686.68 L3076.07,1686.96 L3076.94,1687.23 L3077.81,1687.5 L3078.68,1687.77 L3079.55,1688.04 L3080.42,1688.31 L3081.29,1688.58 L3082.17,1688.84 L3083.04,1689.1 L3083.91,1689.36 L3084.79,1689.62 L3085.66,1689.88 L3086.54,1690.14 L3087.41,1690.39 L3088.29,1690.65 L3089.16,1690.9 L3090.04,1691.15 L3090.92,1691.4 L3091.8,1691.65 L3092.68,1691.9 L3093.56,1692.14 L3094.44,1692.38 L3095.32,1692.63 L3096.2,1692.87 L3097.08,1693.1 L3097.96,1693.34 L3098.85,1693.58 L3099.73,1693.81 L3100.61,1694.04 L3101.5,1694.28 L3102.38,1694.51 L3103.27,1694.73 L3104.15,1694.96 L3105.04,1695.19 L3105.93,1695.41 L3106.81,1695.63 L3107.7,1695.85 L3108.59,1696.07 L3109.48,1696.29 L3110.37,1696.5 L3111.26,1696.72 L3112.15,1696.93 L3113.04,1697.14 L3113.93,1697.35 L3114.82,1697.56 L3115.71,1697.77 L3116.6,1697.97 L3117.49,1698.18 L3118.39,1698.38 L3119.28,1698.58 L3120.18,1698.78 L3121.07,1698.98 L3121.96,1699.17 L3122.86,1699.37 L3123.76,1699.56 L3124.65,1699.75 L3125.55,1699.94 L3126.44,1700.13 L3127.34,1700.32 L3128.24,1700.5 L3129.14,1700.69 L3130.04,1700.87 L3130.94,1701.05 L3131.83,1701.23 L3132.73,1701.41 L3133.63,1701.58 L3134.53,1701.76 L3135.44,1701.93 L3136.34,1702.1 L3137.24,1702.27 L3138.14,1702.44 L3139.04,1702.61 L3139.95,1702.77 L3140.85,1702.94 L3141.75,1703.1 L3142.66,1703.26 L3143.56,1703.42 L3144.46,1703.58 L3145.37,1703.73 L3146.27,1703.89 L3147.18,1704.04 L3148.08,1704.19 L3148.99,1704.34 L3149.9,1704.49 L3150.8,1704.64 L3151.71,1704.78 L3152.62,1704.92 L3153.53,1705.07 L3154.43,1705.21 L3155.34,1705.35 L3156.25,1705.48 L3157.16,1705.62 L3158.07,1705.75 L3158.98,1705.89 L3159.89,1706.02 L3160.8,1706.15 L3161.71,1706.27 L3162.62,1706.4 L3163.53,1706.53 L3164.44,1706.65 L3165.35,1706.77 L3166.26,1706.89 L3167.17,1707.01 L3168.09,1707.13 L3169,1707.24 L3169.91,1707.36 L3170.82,1707.47 L3171.74,1707.58 L3172.65,1707.69 L3173.56,1707.8 L3174.48,1707.9 L3175.39,1708.01 L3176.31,1708.11 L3177.22,1708.21 L3178.13,1708.31 L3179.05,1708.41 L3179.96,1708.51 L3180.88,1708.6 L3181.8,1708.69 L3182.71,1708.79 L3183.63,1708.88 L3184.54,1708.97 L3185.46,1709.05 L3186.38,1709.14 L3187.29,1709.22 L3188.21,1709.31 L3189.13,1709.39 L3190.04,1709.47 L3190.96,1709.54 L3191.88,1709.62 L3192.8,1709.69 L3193.71,1709.77 L3194.63,1709.84 L3195.55,1709.91 L3196.47,1709.98 L3197.39,1710.04 L3198.31,1710.11 L3199.22,1710.17 L3200.14,1710.24 L3201.06,1710.3 L3201.98,1710.35 L3202.9,1710.41 L3203.82,1710.47 L3204.74,1710.52 L3205.66,1710.57 L3206.58,1710.63 L3207.5,1710.68 L3208.42,1710.72 L3209.34,1710.77 L3210.26,1710.81 L3211.18,1710.86 L3212.1,1710.9 L3213.02,1710.94 L3213.94,1710.98 L3214.86,1711.01 L3215.78,1711.05 L3216.7,1711.08 L3217.62,1711.12 L3218.54,1711.15 L3219.46,1711.17 L3220.38,1711.2 L3221.31,1711.23 L3222.23,1711.25 L3223.15,1711.27 L3224.07,1711.3 L3224.99,1711.32 L3225.91,1711.33 L3225.91,1711.33 L3413.21,1703.71" vector-effect="none"/>
            </Tooltip>)})}

        {[106].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(106)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2490.92,1514.38 L2741.8,1545.18 L2741.8,1545.18 L2742.66,1545.27 L2743.51,1545.36 L2744.37,1545.44 L2745.22,1545.53 L2746.08,1545.62 L2746.93,1545.71 L2747.79,1545.81 L2748.64,1545.9 L2749.49,1546 L2750.35,1546.09 L2751.2,1546.19 L2752.06,1546.29 L2752.91,1546.39 L2753.76,1546.49 L2754.61,1546.6 L2755.47,1546.7 L2756.32,1546.81 L2757.17,1546.91 L2758.02,1547.02 L2758.87,1547.13 L2759.73,1547.24 L2760.58,1547.35 L2761.43,1547.46 L2762.28,1547.58 L2763.13,1547.69 L2763.98,1547.81 L2764.83,1547.93 L2765.68,1548.05 L2766.53,1548.17 L2767.38,1548.29 L2768.23,1548.41 L2769.08,1548.54 L2769.93,1548.66 L2770.78,1548.79 L2771.62,1548.92 L2772.47,1549.05 L2773.32,1549.18 L2774.17,1549.31 L2775.01,1549.44 L2775.86,1549.58 L2776.71,1549.71 L2777.56,1549.85 L2778.4,1549.99 L2779.25,1550.13 L2780.09,1550.27 L2780.94,1550.41 L2781.78,1550.55 L2782.63,1550.7 L2783.47,1550.85 L2784.32,1550.99 L2785.16,1551.14 L2786.01,1551.29 L2786.85,1551.44 L2787.69,1551.59 L2788.54,1551.75 L2789.38,1551.9 L2790.22,1552.06 L2791.07,1552.21 L2791.91,1552.37 L2792.75,1552.53 L2793.59,1552.69 L2794.43,1552.85 L2795.27,1553.02 L2796.11,1553.18 L2796.95,1553.35 L2797.79,1553.51 L2798.63,1553.68 L2799.47,1553.85 L2800.31,1554.02 L2801.15,1554.19 L2801.99,1554.37 L2802.82,1554.54 L2803.66,1554.72 L2804.5,1554.89 L2805.34,1555.07 L2806.17,1555.25 L2807.01,1555.43 L2807.85,1555.61 L2808.68,1555.8 L2809.52,1555.98 L2810.35,1556.17 L2811.19,1556.35 L2812.02,1556.54 L2812.85,1556.73 L2813.69,1556.92 L2814.52,1557.11 L2815.35,1557.31 L2816.19,1557.5 L2817.02,1557.7 L2817.85,1557.89 L2818.68,1558.09 L2819.51,1558.29 L2820.34,1558.49 L2821.17,1558.69 L2822,1558.89 L2822.83,1559.1 L2823.66,1559.3 L2824.49,1559.51 L2825.32,1559.72 L2826.15,1559.93 L2826.97,1560.14 L2827.8,1560.35 L2828.63,1560.56 L2829.45,1560.78 L2830.28,1560.99 L2831.1,1561.21 L2831.93,1561.42 L2832.75,1561.64 L2833.58,1561.86 L2834.4,1562.08 L2835.23,1562.31 L2836.05,1562.53 L2836.87,1562.76 L2837.69,1562.98 L2838.52,1563.21 L2839.34,1563.44 L2840.16,1563.67 L2840.98,1563.9 L2841.8,1564.13 L2842.62,1564.36 L2843.44,1564.6 L2844.26,1564.83 L2845.07,1565.07 L2845.89,1565.31 L2846.71,1565.55 L2847.53,1565.79 L2848.34,1566.03 L2849.16,1566.27 L2849.98,1566.52 L2850.79,1566.76 L2851.61,1567.01 L2852.42,1567.26 L2853.23,1567.51 L2854.05,1567.76 L2854.86,1568.01 L2855.67,1568.26 L2856.48,1568.52 L2857.3,1568.77 L2858.11,1569.03 L2858.92,1569.29 L2859.73,1569.54 L2860.54,1569.8 L2861.35,1570.07 L2862.15,1570.33 L2862.96,1570.59 L2863.77,1570.86 L2864.58,1571.12 L2865.38,1571.39 L2866.19,1571.66 L2866.99,1571.93 L2867.8,1572.2 L2868.6,1572.47 L2869.41,1572.74 L2870.21,1573.02 L2871.02,1573.29 L2871.82,1573.57 L2872.62,1573.85 L2873.42,1574.13 L2874.22,1574.41 L2875.02,1574.69 L2875.82,1574.97 L2876.62,1575.26 L2877.42,1575.54 L2878.22,1575.83 L2879.02,1576.11 L2879.81,1576.4 L2880.61,1576.69 L2881.41,1576.98 L2882.2,1577.28 L2883,1577.57 L2883.79,1577.86 L2884.59,1578.16 L2885.38,1578.46 L2886.17,1578.75 L2886.96,1579.05 L2887.76,1579.35 L2888.55,1579.65 L2889.34,1579.96 L2890.13,1580.26 L2890.92,1580.57 L2890.92,1580.57 L3078.31,1651.3 L3078.31,1651.3 L3079.09,1651.56 L3079.87,1651.83 L3080.66,1652.09 L3081.44,1652.36 L3082.22,1652.62 L3083.01,1652.88 L3083.8,1653.13 L3084.58,1653.39 L3085.37,1653.65 L3086.16,1653.9 L3086.94,1654.15 L3087.73,1654.41 L3088.52,1654.66 L3089.31,1654.9 L3090.1,1655.15 L3090.89,1655.4 L3091.68,1655.64 L3092.47,1655.89 L3093.26,1656.13 L3094.06,1656.37 L3094.85,1656.61 L3095.64,1656.85 L3096.44,1657.09 L3097.23,1657.32 L3098.03,1657.55 L3098.82,1657.79 L3099.62,1658.02 L3100.42,1658.25 L3101.21,1658.48 L3102.01,1658.71 L3102.81,1658.93 L3103.61,1659.16 L3104.41,1659.38 L3105.21,1659.6 L3106,1659.82 L3106.81,1660.04 L3107.61,1660.26 L3108.41,1660.48 L3109.21,1660.69 L3110.01,1660.91 L3110.81,1661.12 L3111.62,1661.33 L3112.42,1661.54 L3113.22,1661.75 L3114.03,1661.95 L3114.83,1662.16 L3115.64,1662.36 L3116.45,1662.57 L3117.25,1662.77 L3118.06,1662.97 L3118.87,1663.17 L3119.67,1663.37 L3120.48,1663.56 L3121.29,1663.76 L3122.1,1663.95 L3122.91,1664.14 L3123.72,1664.33 L3124.53,1664.52 L3125.34,1664.71 L3126.15,1664.9 L3126.96,1665.08 L3127.77,1665.27 L3128.58,1665.45 L3129.39,1665.63 L3130.21,1665.81 L3131.02,1665.99 L3131.83,1666.16 L3132.65,1666.34 L3133.46,1666.51 L3134.28,1666.69 L3135.09,1666.86 L3135.91,1667.03 L3136.72,1667.2 L3137.54,1667.36 L3138.35,1667.53 L3139.17,1667.69 L3139.99,1667.86 L3140.81,1668.02 L3141.62,1668.18 L3142.44,1668.34 L3143.26,1668.5 L3144.08,1668.65 L3144.9,1668.81 L3145.72,1668.96 L3146.54,1669.11 L3147.36,1669.26 L3148.18,1669.41 L3149,1669.56 L3149.82,1669.71 L3150.64,1669.85 L3151.46,1670 L3152.29,1670.14 L3153.11,1670.28 L3153.93,1670.42 L3154.75,1670.56 L3155.58,1670.69 L3156.4,1670.83 L3157.22,1670.96 L3158.05,1671.1 L3158.87,1671.23 L3159.7,1671.36 L3160.52,1671.48 L3161.35,1671.61 L3162.17,1671.74 L3163,1671.86 L3163.82,1671.98 L3164.65,1672.11 L3165.48,1672.23 L3166.3,1672.34 L3167.13,1672.46 L3167.96,1672.58 L3168.78,1672.69 L3169.61,1672.8 L3170.44,1672.92 L3171.27,1673.03 L3172.1,1673.13 L3172.93,1673.24 L3173.75,1673.35 L3174.58,1673.45 L3175.41,1673.56 L3176.24,1673.66 L3177.07,1673.76 L3177.9,1673.86 L3178.73,1673.95 L3179.56,1674.05 L3180.39,1674.15 L3181.22,1674.24 L3182.05,1674.33 L3182.89,1674.42 L3183.72,1674.51 L3184.55,1674.6 L3185.38,1674.68 L3186.21,1674.77 L3187.04,1674.85 L3187.88,1674.93 L3188.71,1675.01 L3189.54,1675.09 L3190.37,1675.17 L3191.21,1675.25 L3192.04,1675.32 L3192.87,1675.4 L3193.71,1675.47 L3194.54,1675.54 L3195.37,1675.61 L3196.21,1675.68 L3197.04,1675.74 L3197.88,1675.81 L3198.71,1675.87 L3199.55,1675.93 L3200.38,1676 L3201.21,1676.05 L3202.05,1676.11 L3202.88,1676.17 L3203.72,1676.22 L3204.55,1676.28 L3205.39,1676.33 L3206.23,1676.38 L3207.06,1676.43 L3207.9,1676.48 L3208.73,1676.53 L3209.57,1676.57 L3210.4,1676.62 L3211.24,1676.66 L3212.08,1676.7 L3212.91,1676.74 L3213.75,1676.78 L3214.58,1676.81 L3215.42,1676.85 L3216.26,1676.88 L3217.09,1676.92 L3217.93,1676.95 L3218.77,1676.98 L3219.6,1677 L3220.44,1677.03 L3221.28,1677.06 L3222.11,1677.08 L3222.95,1677.1 L3223.79,1677.12 L3224.63,1677.14 L3225.46,1677.16 L3225.46,1677.16 L3411.46,1669.59" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#000000" stroke-width="6.25" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="butt" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[107].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(107)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1356.07,1630.73 L1356.07,1630.73 L1356.42,1630.65 L1356.77,1630.58 L1357.13,1630.5 L1357.48,1630.42 L1357.83,1630.35 L1358.19,1630.27 L1358.54,1630.19 L1358.89,1630.11 L1359.24,1630.04 L1359.6,1629.96 L1359.95,1629.88 L1360.3,1629.8 L1360.65,1629.72 L1361,1629.65 L1361.36,1629.57 L1361.71,1629.49 L1362.06,1629.41 L1362.41,1629.33 L1362.76,1629.25 L1363.12,1629.17 L1363.47,1629.09 L1363.82,1629.01 L1364.17,1628.93 L1364.52,1628.84 L1364.87,1628.76 L1365.23,1628.68 L1365.58,1628.6 L1365.93,1628.52 L1366.28,1628.44 L1366.63,1628.35 L1366.98,1628.27 L1367.33,1628.19 L1367.68,1628.1 L1368.03,1628.02 L1368.38,1627.94 L1368.73,1627.85 L1369.08,1627.77 L1369.44,1627.68 L1369.79,1627.6 L1370.14,1627.51 L1370.49,1627.43 L1370.84,1627.34 L1371.19,1627.26 L1371.54,1627.17 L1371.89,1627.09 L1372.24,1627 L1372.59,1626.91 L1372.94,1626.83 L1373.29,1626.74 L1373.64,1626.65 L1373.98,1626.56 L1374.33,1626.48 L1374.68,1626.39 L1375.03,1626.3 L1375.38,1626.21 L1375.73,1626.12 L1376.08,1626.03 L1376.43,1625.94 L1376.78,1625.86 L1377.13,1625.77 L1377.48,1625.68 L1377.82,1625.59 L1378.17,1625.5 L1378.52,1625.4 L1378.87,1625.31 L1379.22,1625.22 L1379.57,1625.13 L1379.91,1625.04 L1380.26,1624.95 L1380.61,1624.86 L1380.96,1624.76 L1381.31,1624.67 L1381.65,1624.58 L1382,1624.49 L1382.35,1624.39 L1382.7,1624.3 L1383.05,1624.21 L1383.39,1624.11 L1383.74,1624.02 L1384.09,1623.92 L1384.43,1623.83 L1384.78,1623.73 L1385.13,1623.64 L1385.48,1623.54 L1385.82,1623.45 L1386.17,1623.35 L1386.52,1623.26 L1386.86,1623.16 L1387.21,1623.06 L1387.56,1622.97 L1387.9,1622.87 L1388.25,1622.77 L1388.59,1622.67 L1388.94,1622.58 L1389.29,1622.48 L1389.63,1622.38 L1389.98,1622.28 L1390.32,1622.18 L1390.67,1622.09 L1391.02,1621.99 L1391.36,1621.89 L1391.71,1621.79 L1392.05,1621.69 L1392.4,1621.59 L1392.74,1621.49 L1393.09,1621.39 L1393.43,1621.29 L1393.78,1621.19 L1394.12,1621.08 L1394.47,1620.98 L1394.81,1620.88 L1395.16,1620.78 L1395.5,1620.68 L1395.85,1620.58 L1396.19,1620.47 L1396.53,1620.37 L1396.88,1620.27 L1397.22,1620.16 L1397.57,1620.06 L1397.91,1619.96 L1398.25,1619.85 L1398.6,1619.75 L1398.94,1619.64 L1399.28,1619.54 L1399.63,1619.43 L1399.97,1619.33 L1400.31,1619.22 L1400.66,1619.12 L1401,1619.01 L1401.34,1618.91 L1401.69,1618.8 L1402.03,1618.69 L1402.37,1618.59 L1402.72,1618.48 L1403.06,1618.37 L1403.4,1618.27 L1403.74,1618.16 L1404.08,1618.05 L1404.43,1617.94 L1404.77,1617.83 L1405.11,1617.73 L1405.45,1617.62 L1405.79,1617.51 L1406.14,1617.4 L1406.48,1617.29 L1406.82,1617.18 L1407.16,1617.07 L1407.5,1616.96 L1407.84,1616.85 L1408.18,1616.74 L1408.53,1616.63 L1408.87,1616.52 L1409.21,1616.4 L1409.55,1616.29 L1409.89,1616.18 L1410.23,1616.07 L1410.57,1615.96 L1410.91,1615.84 L1411.25,1615.73 L1411.59,1615.62 L1411.93,1615.51 L1412.27,1615.39 L1412.61,1615.28 L1412.95,1615.16 L1413.29,1615.05 L1413.63,1614.94 L1413.97,1614.82 L1414.31,1614.71 L1414.65,1614.59 L1414.99,1614.48 L1415.33,1614.36 L1415.67,1614.24 L1416.01,1614.13 L1416.34,1614.01 L1416.68,1613.9 L1417.02,1613.78 L1417.36,1613.66 L1417.7,1613.55 L1418.04,1613.43 L1418.37,1613.31 L1418.37,1613.31 L1419.56,1612.9 L1420.76,1612.48 L1421.95,1612.05 L1423.14,1611.63 L1424.33,1611.2 L1425.51,1610.77 L1426.69,1610.34 L1427.87,1609.91 L1429.05,1609.48 L1430.22,1609.04 L1431.4,1608.61 L1432.56,1608.17 L1433.73,1607.73 L1434.9,1607.29 L1436.06,1606.85 L1437.22,1606.41 L1438.38,1605.97 L1439.53,1605.52 L1440.69,1605.08 L1441.83,1604.64 L1442.98,1604.2 L1444.13,1603.75 L1445.28,1603.31 L1446.42,1602.86 L1447.57,1602.42 L1448.71,1601.97 L1449.85,1601.52 L1450.99,1601.08 L1452.12,1600.64 L1453.26,1600.19 L1454.39,1599.75 L1668.97,1515.76 L1670.11,1515.31 L1671.24,1514.87 L1672.36,1514.43 L1673.49,1513.99 L1674.62,1513.55 L1675.74,1513.11 L1676.87,1512.67 L1677.99,1512.24 L1679.11,1511.8 L1680.23,1511.37 L1681.35,1510.94 L1682.46,1510.51 L1683.57,1510.08 L1684.69,1509.65 L1685.8,1509.23 L1686.92,1508.8 L1688.03,1508.38 L1689.14,1507.96 L1690.25,1507.55 L1691.36,1507.13 L1692.47,1506.72 L1693.58,1506.31 L1694.68,1505.9 L1695.79,1505.49 L1696.9,1505.09 L1698,1504.69 L1699.11,1504.29 L1700.21,1503.9 L1701.32,1503.51 L1702.42,1503.12 L1703.54,1502.73 L1703.54,1502.73 L1704.61,1502.36 L1705.67,1501.99 L1706.74,1501.63 L1707.81,1501.27 L1708.88,1500.91 L1709.95,1500.55 L1711.03,1500.19 L1712.1,1499.84 L1713.18,1499.49 L1714.25,1499.14 L1715.33,1498.8 L1716.41,1498.46 L1717.49,1498.12 L1718.57,1497.78 L1719.65,1497.44 L1720.73,1497.11 L1721.81,1496.78 L1722.9,1496.46 L1723.98,1496.13 L1725.07,1495.81 L1726.15,1495.49 L1727.24,1495.17 L1728.33,1494.86 L1729.42,1494.54 L1730.51,1494.23 L1731.6,1493.93 L1732.69,1493.62 L1733.79,1493.32 L1734.88,1493.02 L1735.98,1492.72 L1737.07,1492.43 L1738.17,1492.14 L1739.27,1491.85 L1740.36,1491.56 L1741.46,1491.28 L1742.56,1490.99 L1743.66,1490.72 L1744.76,1490.44 L1745.87,1490.16 L1746.97,1489.89 L1748.07,1489.62 L1749.18,1489.36 L1750.28,1489.09 L1751.39,1488.83 L1752.5,1488.57 L1753.6,1488.32 L1754.71,1488.06 L1755.82,1487.81 L1756.93,1487.56 L1758.04,1487.32 L1759.15,1487.07 L1760.27,1486.83 L1761.38,1486.59 L1762.49,1486.36 L1763.61,1486.13 L1764.72,1485.9 L1765.84,1485.67 L1766.95,1485.44 L1768.07,1485.22 L1769.19,1485 L1770.31,1484.78 L1771.42,1484.57 L1772.54,1484.35 L1773.66,1484.14 L1774.78,1483.94 L1775.9,1483.73 L1777.03,1483.53 L1778.15,1483.33 L1779.27,1483.13 L1780.4,1482.94 L1781.52,1482.75 L1782.64,1482.56 L1783.77,1482.37 L1784.89,1482.19 L1786.02,1482.01 L1787.15,1481.83 L1788.27,1481.65 L1789.4,1481.48 L1790.53,1481.31 L1791.66,1481.14 L1792.79,1480.97 L1793.92,1480.81 L1795.05,1480.65 L1796.18,1480.49 L1797.31,1480.34 L1798.44,1480.19 L1799.57,1480.04 L1800.71,1479.89 L1801.84,1479.74 L1802.97,1479.6 L1804.11,1479.46 L1805.24,1479.33 L1806.37,1479.19 L1807.51,1479.06 L1808.64,1478.93 L1809.78,1478.8 L1810.92,1478.68 L1812.05,1478.56 L1813.19,1478.44 L1814.33,1478.33 L1815.46,1478.21 L1816.6,1478.1 L1817.74,1477.99 L1818.88,1477.89 L1820.02,1477.79 L1821.16,1477.69 L1822.29,1477.59 L1823.43,1477.49 L1824.57,1477.4 L1825.71,1477.31 L1826.85,1477.23 L1827.99,1477.14 L1829.13,1477.06 L1830.28,1476.98 L1831.42,1476.91 L1832.56,1476.83 L1833.7,1476.76 L1834.84,1476.69 L1835.98,1476.63 L1837.13,1476.56 L1838.27,1476.5 L1839.41,1476.45 L1840.55,1476.39 L1841.7,1476.34 L1842.84,1476.29 L1843.98,1476.24 L1845.13,1476.2 L1846.27,1476.16 L1847.41,1476.12 L1848.56,1476.08 L1849.7,1476.05 L1850.84,1476.02 L1851.99,1475.99 L1853.13,1475.96 L1854.28,1475.94 L1855.42,1475.92 L1856.57,1475.9 L1857.71,1475.88 L1858.85,1475.87 L1860,1475.86 L1861.14,1475.85 L1862.29,1475.85 L1863.43,1475.85 L1864.58,1475.85 L1865.72,1475.85 L1866.86,1475.86 L1868.01,1475.86 L1869.15,1475.88 L1870.3,1475.89 L1871.44,1475.91 L1872.59,1475.93 L1873.73,1475.95 L1874.87,1475.97 L1876.02,1476 L1877.16,1476.03 L1878.31,1476.06 L1879.45,1476.1 L1880.59,1476.13 L1881.74,1476.17 L1882.88,1476.22 L1884.02,1476.26 L1885.17,1476.31 L1886.31,1476.36 L1887.45,1476.41 L1888.6,1476.47 L1889.74,1476.53 L1890.88,1476.59 L1892.02,1476.66 L1893.16,1476.72 L1894.31,1476.79 L1895.45,1476.86 L1896.59,1476.94 L1897.73,1477.02 L1898.87,1477.1 L1900.01,1477.18 L1901.15,1477.26 L1902.29,1477.35 L1903.43,1477.44 L1904.57,1477.53 L1905.71,1477.63 L1905.71,1477.63 L1906.9,1477.73 L1908.08,1477.84 L1909.27,1477.95 L1910.45,1478.06 L1911.64,1478.17 L1912.82,1478.29 L1914.01,1478.4 L1915.2,1478.52 L1916.39,1478.65 L1917.58,1478.77 L1918.78,1478.9 L1919.97,1479.03 L1921.17,1479.16 L1922.37,1479.29 L1923.56,1479.43 L1924.76,1479.56 L1925.97,1479.7 L1927.17,1479.84 L1928.38,1479.98 L1929.59,1480.12 L1930.8,1480.27 L1932.01,1480.41 L1933.22,1480.56 L1934.43,1480.7 L1935.64,1480.85 L1936.86,1481 L1938.07,1481.14 L1939.29,1481.29 L1940.51,1481.44 L1941.73,1481.59 L1942.95,1481.74 L2736.79,1579.25 L2738.01,1579.4 L2739.23,1579.55 L2740.45,1579.7 L2741.67,1579.85 L2742.89,1580 L2744.11,1580.15 L2745.32,1580.3 L2746.53,1580.46 L2747.75,1580.61 L2748.95,1580.76 L2750.16,1580.91 L2751.36,1581.07 L2752.56,1581.22 L2753.76,1581.38 L2754.96,1581.54 L2756.16,1581.69 L2757.35,1581.85 L2758.55,1582.01 L2759.74,1582.18 L2760.93,1582.34 L2762.11,1582.51 L2763.3,1582.67 L2764.48,1582.84 L2765.67,1583.01 L2766.84,1583.19 L2768.02,1583.36 L2769.2,1583.54 L2770.37,1583.72 L2771.54,1583.9 L2772.71,1584.08 L2773.89,1584.27 L2773.89,1584.27 L2774.33,1584.34 L2774.77,1584.41 L2775.21,1584.48 L2775.65,1584.56 L2776.09,1584.63 L2776.53,1584.7 L2776.97,1584.78 L2777.41,1584.85 L2777.85,1584.92 L2778.28,1585 L2778.72,1585.07 L2779.16,1585.15 L2779.6,1585.22 L2780.04,1585.3 L2780.48,1585.38 L2780.92,1585.45 L2781.36,1585.53 L2781.79,1585.61 L2782.23,1585.69 L2782.67,1585.76 L2783.11,1585.84 L2783.55,1585.92 L2783.98,1586 L2784.42,1586.08 L2784.86,1586.16 L2785.3,1586.24 L2785.74,1586.33 L2786.17,1586.41 L2786.61,1586.49 L2787.05,1586.57 L2787.49,1586.65 L2787.92,1586.74 L2788.36,1586.82 L2788.8,1586.91 L2789.23,1586.99 L2789.67,1587.07 L2790.11,1587.16 L2790.54,1587.25 L2790.98,1587.33 L2791.42,1587.42 L2791.85,1587.5 L2792.29,1587.59 L2792.72,1587.68 L2793.16,1587.77 L2793.6,1587.86 L2794.03,1587.94 L2794.47,1588.03 L2794.9,1588.12 L2795.34,1588.21 L2795.77,1588.3 L2796.21,1588.39 L2796.64,1588.49 L2797.08,1588.58 L2797.51,1588.67 L2797.95,1588.76 L2798.38,1588.85 L2798.82,1588.95 L2799.25,1589.04 L2799.69,1589.13 L2800.12,1589.23 L2800.56,1589.32 L2800.99,1589.42 L2801.42,1589.51 L2801.86,1589.61 L2802.29,1589.71 L2802.72,1589.8 L2803.16,1589.9 L2803.59,1590 L2804.02,1590.09 L2804.46,1590.19 L2804.89,1590.29 L2805.32,1590.39 L2805.76,1590.49 L2806.19,1590.59 L2806.62,1590.69 L2807.05,1590.79 L2807.49,1590.89 L2807.92,1590.99 L2808.35,1591.09 L2808.78,1591.2 L2809.22,1591.3 L2809.65,1591.4 L2810.08,1591.5 L2810.51,1591.61 L2810.94,1591.71 L2811.37,1591.82 L2811.8,1591.92 L2812.24,1592.03 L2812.67,1592.13 L2813.1,1592.24 L2813.53,1592.34 L2813.96,1592.45 L2814.39,1592.56 L2814.82,1592.67 L2815.25,1592.77 L2815.68,1592.88 L2816.11,1592.99 L2816.54,1593.1 L2816.97,1593.21 L2817.4,1593.32 L2817.83,1593.43 L2818.26,1593.54 L2818.69,1593.65 L2819.12,1593.76 L2819.55,1593.88 L2819.97,1593.99 L2820.4,1594.1 L2820.83,1594.21 L2821.26,1594.33 L2821.69,1594.44 L2822.12,1594.55 L2822.54,1594.67 L2822.97,1594.78 L2823.4,1594.9 L2823.83,1595.02 L2824.26,1595.13 L2824.68,1595.25 L2825.11,1595.36 L2825.54,1595.48 L2825.96,1595.6 L2826.39,1595.72 L2826.82,1595.84 L2827.25,1595.95 L2827.67,1596.07 L2828.1,1596.19 L2828.52,1596.31 L2828.95,1596.43 L2829.38,1596.55 L2829.8,1596.68 L2830.23,1596.8 L2830.65,1596.92 L2831.08,1597.04 L2831.5,1597.16 L2831.93,1597.29 L2832.35,1597.41 L2832.78,1597.53 L2833.2,1597.66 L2833.63,1597.78 L2834.05,1597.91 L2834.48,1598.03 L2834.9,1598.16 L2835.33,1598.28 L2835.75,1598.41 L2836.17,1598.54 L2836.6,1598.67 L2837.02,1598.79 L2837.44,1598.92 L2837.87,1599.05 L2838.29,1599.18 L2838.71,1599.31 L2839.13,1599.44 L2839.56,1599.57 L2839.98,1599.7 L2840.4,1599.83 L2840.82,1599.96 L2841.25,1600.09 L2841.67,1600.22 L2842.09,1600.35 L2842.51,1600.49 L2842.93,1600.62 L2843.35,1600.75 L2843.77,1600.89 L2844.2,1601.02 L2844.62,1601.16 L2845.04,1601.29 L2845.46,1601.43 L2845.88,1601.56 L2846.3,1601.7 L2846.72,1601.83 L2847.14,1601.97 L2847.56,1602.11 L2847.98,1602.25 L2848.4,1602.38 L2848.81,1602.52 L2849.23,1602.66 L2849.65,1602.8 L2850.07,1602.94 L2850.49,1603.08 L2850.91,1603.22 L2851.33,1603.36 L2851.33,1603.36 L2852.45,1603.74 L2853.56,1604.12 L2854.66,1604.5 L2855.77,1604.88 L2856.88,1605.27 L2858,1605.66 L2859.11,1606.05 L2860.22,1606.44 L2861.33,1606.84 L2862.45,1607.24 L2863.56,1607.64 L2864.67,1608.05 L2865.79,1608.45 L2866.91,1608.86 L2868.02,1609.27 L2869.14,1609.68 L2870.26,1610.1 L2871.38,1610.51 L2872.5,1610.93 L2873.63,1611.35 L2874.76,1611.78 L2875.88,1612.2 L2877.01,1612.62 L2878.13,1613.05 L2879.26,1613.47 L2880.39,1613.9 L2881.52,1614.33 L2882.65,1614.76 L2883.78,1615.19 L2884.91,1615.62 L2886.05,1616.05 L3030.45,1670.89 L3031.58,1671.32 L3032.72,1671.75 L3033.86,1672.18 L3035,1672.62 L3036.15,1673.05 L3037.29,1673.48 L3038.44,1673.92 L3039.59,1674.35 L3040.74,1674.78 L3041.89,1675.22 L3043.05,1675.65 L3044.21,1676.08 L3045.37,1676.52 L3046.53,1676.95 L3047.7,1677.38 L3048.86,1677.81 L3050.03,1678.24 L3051.2,1678.67 L3052.38,1679.09 L3053.55,1679.52 L3054.73,1679.94 L3055.91,1680.37 L3057.09,1680.79 L3058.27,1681.21 L3059.46,1681.63 L3060.65,1682.04 L3061.84,1682.46 L3063.04,1682.87 L3064.24,1683.28 L3065.44,1683.69 L3066.63,1684.09 L3066.63,1684.09 L3067.56,1684.41 L3068.49,1684.72 L3069.42,1685.02 L3070.35,1685.33 L3071.28,1685.64 L3072.21,1685.94 L3073.14,1686.24 L3074.08,1686.54 L3075.01,1686.84 L3075.94,1687.13 L3076.88,1687.43 L3077.82,1687.72 L3078.75,1688.01 L3079.69,1688.3 L3080.63,1688.59 L3081.57,1688.87 L3082.51,1689.16 L3083.45,1689.44 L3084.39,1689.72 L3085.33,1690 L3086.27,1690.28 L3087.21,1690.55 L3088.16,1690.82 L3089.1,1691.1 L3090.05,1691.37 L3090.99,1691.63 L3091.94,1691.9 L3092.88,1692.17 L3093.83,1692.43 L3094.78,1692.69 L3095.73,1692.95 L3096.67,1693.21 L3097.62,1693.46 L3098.57,1693.72 L3099.52,1693.97 L3100.48,1694.22 L3101.43,1694.47 L3102.38,1694.72 L3103.33,1694.96 L3104.29,1695.21 L3105.24,1695.45 L3106.2,1695.69 L3107.15,1695.93 L3108.11,1696.16 L3109.06,1696.4 L3110.02,1696.63 L3110.98,1696.86 L3111.94,1697.09 L3112.89,1697.32 L3113.85,1697.55 L3114.81,1697.77 L3115.77,1697.99 L3116.73,1698.22 L3117.69,1698.43 L3118.66,1698.65 L3119.62,1698.87 L3120.58,1699.08 L3121.54,1699.29 L3122.51,1699.5 L3123.47,1699.71 L3124.44,1699.92 L3125.4,1700.12 L3126.37,1700.33 L3127.33,1700.53 L3128.3,1700.73 L3129.27,1700.92 L3130.23,1701.12 L3131.2,1701.31 L3132.17,1701.51 L3133.14,1701.7 L3134.11,1701.89 L3135.08,1702.07 L3136.05,1702.26 L3137.02,1702.44 L3137.99,1702.62 L3138.96,1702.8 L3139.93,1702.98 L3140.9,1703.16 L3141.88,1703.33 L3142.85,1703.5 L3143.82,1703.67 L3144.8,1703.84 L3145.77,1704.01 L3146.74,1704.18 L3147.72,1704.34 L3148.69,1704.5 L3149.67,1704.66 L3150.65,1704.82 L3151.62,1704.98 L3152.6,1705.13 L3153.58,1705.28 L3154.55,1705.43 L3155.53,1705.58 L3156.51,1705.73 L3157.49,1705.88 L3158.47,1706.02 L3159.45,1706.16 L3160.43,1706.3 L3161.41,1706.44 L3162.39,1706.58 L3163.37,1706.71 L3164.35,1706.84 L3165.33,1706.98 L3166.31,1707.1 L3167.29,1707.23 L3168.27,1707.36 L3169.25,1707.48 L3170.24,1707.6 L3171.22,1707.72 L3172.2,1707.84 L3173.19,1707.96 L3174.17,1708.07 L3175.15,1708.19 L3176.14,1708.3 L3177.12,1708.41 L3178.11,1708.51 L3179.09,1708.62 L3180.08,1708.72 L3181.06,1708.83 L3182.05,1708.93 L3183.03,1709.02 L3184.02,1709.12 L3185.01,1709.22 L3185.99,1709.31 L3186.98,1709.4 L3187.97,1709.49 L3188.95,1709.58 L3189.94,1709.66 L3190.93,1709.75 L3191.92,1709.83 L3192.9,1709.91 L3193.89,1709.99 L3194.88,1710.06 L3195.87,1710.14 L3196.86,1710.21 L3197.85,1710.28 L3198.84,1710.35 L3199.82,1710.42 L3200.81,1710.48 L3201.8,1710.55 L3202.79,1710.61 L3203.78,1710.67 L3204.77,1710.73 L3205.76,1710.78 L3206.75,1710.84 L3207.74,1710.89 L3208.73,1710.94 L3209.72,1710.99 L3210.71,1711.04 L3211.7,1711.08 L3212.7,1711.13 L3213.69,1711.17 L3214.68,1711.21 L3215.67,1711.25 L3216.66,1711.28 L3217.65,1711.32 L3218.64,1711.35 L3219.63,1711.38 L3220.63,1711.41 L3221.62,1711.44 L3222.61,1711.46 L3223.6,1711.49 L3224.59,1711.51 L3225.58,1711.53 L3226.58,1711.55 L3227.57,1711.56 L3228.56,1711.58 L3229.55,1711.59 L3230.54,1711.6 L3231.53,1711.61 L3232.53,1711.62 L3233.52,1711.62 L3234.51,1711.63 L3235.5,1711.63 L3236.49,1711.63 L3237.49,1711.62 L3238.48,1711.62 L3239.47,1711.62 L3240.46,1711.61 L3241.45,1711.6 L3241.45,1711.6 L3242.73,1711.58 L3244.01,1711.57 L3245.3,1711.54 L3246.58,1711.52 L3247.86,1711.5 L3249.14,1711.47 L3250.41,1711.44 L3251.69,1711.4 L3252.96,1711.37 L3254.23,1711.33 L3255.5,1711.29 L3256.77,1711.25 L3258.03,1711.2 L3259.3,1711.16 L3260.56,1711.11 L3261.82,1711.06 L3263.08,1711.01 L3264.34,1710.96 L3265.59,1710.91 L3266.84,1710.86 L3268.09,1710.8 L3269.34,1710.75 L3270.59,1710.69 L3271.84,1710.64 L3273.08,1710.58 L3274.33,1710.52 L3275.57,1710.46 L3276.81,1710.4 L3278.05,1710.35 L3279.29,1710.29 L3280.52,1710.23 L3435.96,1702.82" vector-effect="none"/>
            </Tooltip>)})}

        {[108].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(108)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1354.52,1595.87 L1354.52,1595.87 L1354.8,1595.81 L1355.08,1595.74 L1355.36,1595.68 L1355.64,1595.61 L1355.93,1595.55 L1356.21,1595.48 L1356.49,1595.41 L1356.77,1595.35 L1357.05,1595.28 L1357.34,1595.22 L1357.62,1595.15 L1357.9,1595.08 L1358.18,1595.01 L1358.46,1594.95 L1358.74,1594.88 L1359.03,1594.81 L1359.31,1594.74 L1359.59,1594.68 L1359.87,1594.61 L1360.15,1594.54 L1360.43,1594.47 L1360.71,1594.4 L1360.99,1594.33 L1361.28,1594.27 L1361.56,1594.2 L1361.84,1594.13 L1362.12,1594.06 L1362.4,1593.99 L1362.68,1593.92 L1362.96,1593.85 L1363.24,1593.78 L1363.52,1593.71 L1363.8,1593.64 L1364.08,1593.57 L1364.36,1593.5 L1364.64,1593.43 L1364.92,1593.35 L1365.21,1593.28 L1365.49,1593.21 L1365.77,1593.14 L1366.05,1593.07 L1366.33,1593 L1366.61,1592.92 L1366.89,1592.85 L1367.17,1592.78 L1367.45,1592.71 L1367.73,1592.63 L1368.01,1592.56 L1368.29,1592.49 L1368.57,1592.42 L1368.85,1592.34 L1369.12,1592.27 L1369.4,1592.19 L1369.68,1592.12 L1369.96,1592.05 L1370.24,1591.97 L1370.52,1591.9 L1370.8,1591.82 L1371.08,1591.75 L1371.36,1591.67 L1371.64,1591.6 L1371.92,1591.52 L1372.2,1591.45 L1372.48,1591.37 L1372.75,1591.3 L1373.03,1591.22 L1373.31,1591.14 L1373.59,1591.07 L1373.87,1590.99 L1374.15,1590.92 L1374.43,1590.84 L1374.71,1590.76 L1374.98,1590.69 L1375.26,1590.61 L1375.54,1590.53 L1375.82,1590.45 L1376.1,1590.38 L1376.38,1590.3 L1376.65,1590.22 L1376.93,1590.14 L1377.21,1590.06 L1377.49,1589.98 L1377.76,1589.91 L1378.04,1589.83 L1378.32,1589.75 L1378.6,1589.67 L1378.88,1589.59 L1379.15,1589.51 L1379.43,1589.43 L1379.71,1589.35 L1379.99,1589.27 L1380.26,1589.19 L1380.54,1589.11 L1380.82,1589.03 L1381.09,1588.95 L1381.37,1588.87 L1381.65,1588.79 L1381.93,1588.71 L1382.2,1588.63 L1382.48,1588.54 L1382.76,1588.46 L1383.03,1588.38 L1383.31,1588.3 L1383.59,1588.22 L1383.86,1588.13 L1384.14,1588.05 L1384.42,1587.97 L1384.69,1587.89 L1384.97,1587.8 L1385.24,1587.72 L1385.52,1587.64 L1385.8,1587.55 L1386.07,1587.47 L1386.35,1587.39 L1386.62,1587.3 L1386.9,1587.22 L1387.18,1587.13 L1387.45,1587.05 L1387.73,1586.97 L1388,1586.88 L1388.28,1586.8 L1388.55,1586.71 L1388.83,1586.63 L1389.11,1586.54 L1389.38,1586.45 L1389.66,1586.37 L1389.93,1586.28 L1390.21,1586.2 L1390.48,1586.11 L1390.76,1586.02 L1391.03,1585.94 L1391.31,1585.85 L1391.58,1585.76 L1391.86,1585.68 L1392.13,1585.59 L1392.4,1585.5 L1392.68,1585.42 L1392.95,1585.33 L1393.23,1585.24 L1393.5,1585.15 L1393.78,1585.06 L1394.05,1584.98 L1394.33,1584.89 L1394.6,1584.8 L1394.87,1584.71 L1395.15,1584.62 L1395.42,1584.53 L1395.69,1584.44 L1395.97,1584.35 L1396.24,1584.26 L1396.52,1584.17 L1396.79,1584.08 L1397.06,1583.99 L1397.34,1583.9 L1397.61,1583.81 L1397.88,1583.72 L1398.16,1583.63 L1398.43,1583.54 L1398.7,1583.45 L1398.98,1583.36 L1399.25,1583.27 L1399.52,1583.18 L1399.79,1583.09 L1400.07,1582.99 L1400.34,1582.9 L1400.61,1582.81 L1400.88,1582.72 L1401.16,1582.62 L1401.43,1582.53 L1401.7,1582.44 L1401.97,1582.35 L1402.25,1582.25 L1402.52,1582.16 L1402.79,1582.07 L1403.06,1581.97 L1403.33,1581.88 L1403.61,1581.79 L1403.88,1581.69 L1404.15,1581.6 L1404.42,1581.5 L1404.42,1581.5 L1405.54,1581.11 L1406.64,1580.72 L1407.75,1580.33 L1408.85,1579.94 L1409.96,1579.54 L1411.06,1579.14 L1412.17,1578.74 L1413.28,1578.33 L1414.38,1577.92 L1415.49,1577.51 L1416.6,1577.1 L1417.71,1576.69 L1418.82,1576.27 L1419.93,1575.85 L1421.05,1575.43 L1422.16,1575 L1423.27,1574.58 L1424.39,1574.15 L1425.5,1573.72 L1426.63,1573.29 L1427.75,1572.86 L1428.86,1572.43 L1429.98,1571.99 L1431.11,1571.56 L1432.23,1571.12 L1433.35,1570.68 L1434.48,1570.24 L1435.6,1569.8 L1436.73,1569.36 L1437.86,1568.92 L1438.99,1568.48 L1653.57,1484.49 L1654.7,1484.04 L1655.83,1483.6 L1656.97,1483.16 L1658.1,1482.71 L1659.24,1482.27 L1660.38,1481.82 L1661.52,1481.38 L1662.67,1480.93 L1663.81,1480.49 L1664.96,1480.04 L1666.11,1479.6 L1667.27,1479.15 L1668.42,1478.71 L1669.58,1478.27 L1670.74,1477.82 L1671.9,1477.38 L1673.06,1476.94 L1674.23,1476.5 L1675.39,1476.06 L1676.56,1475.63 L1677.74,1475.19 L1678.91,1474.75 L1680.09,1474.32 L1681.27,1473.89 L1682.45,1473.46 L1683.63,1473.03 L1684.82,1472.6 L1686.01,1472.18 L1687.2,1471.76 L1688.4,1471.34 L1689.58,1470.92 L1689.58,1470.92 L1690.74,1470.52 L1691.9,1470.12 L1693.07,1469.72 L1694.23,1469.33 L1695.39,1468.94 L1696.56,1468.55 L1697.72,1468.16 L1698.89,1467.78 L1700.06,1467.4 L1701.23,1467.02 L1702.4,1466.65 L1703.57,1466.28 L1704.75,1465.91 L1705.92,1465.54 L1707.1,1465.18 L1708.27,1464.81 L1709.45,1464.46 L1710.63,1464.1 L1711.81,1463.75 L1712.99,1463.4 L1714.17,1463.05 L1715.35,1462.7 L1716.54,1462.36 L1717.72,1462.02 L1718.91,1461.68 L1720.09,1461.35 L1721.28,1461.02 L1722.47,1460.69 L1723.66,1460.37 L1724.85,1460.04 L1726.04,1459.72 L1727.23,1459.4 L1728.42,1459.09 L1729.62,1458.78 L1730.81,1458.47 L1732.01,1458.16 L1733.21,1457.86 L1734.4,1457.56 L1735.6,1457.26 L1736.8,1456.96 L1738,1456.67 L1739.2,1456.38 L1740.4,1456.09 L1741.61,1455.81 L1742.81,1455.53 L1744.01,1455.25 L1745.22,1454.97 L1746.43,1454.7 L1747.63,1454.43 L1748.84,1454.16 L1750.05,1453.9 L1751.26,1453.64 L1752.47,1453.38 L1753.68,1453.12 L1754.89,1452.87 L1756.1,1452.62 L1757.31,1452.37 L1758.53,1452.12 L1759.74,1451.88 L1760.96,1451.64 L1762.17,1451.41 L1763.39,1451.17 L1764.6,1450.94 L1765.82,1450.71 L1767.04,1450.49 L1768.26,1450.27 L1769.48,1450.05 L1770.7,1449.83 L1771.92,1449.61 L1773.14,1449.4 L1774.36,1449.19 L1775.59,1448.99 L1776.81,1448.79 L1778.03,1448.59 L1779.26,1448.39 L1780.48,1448.2 L1781.71,1448 L1782.93,1447.82 L1784.16,1447.63 L1785.39,1447.45 L1786.62,1447.27 L1787.84,1447.09 L1789.07,1446.92 L1790.3,1446.74 L1791.53,1446.58 L1792.76,1446.41 L1793.99,1446.25 L1795.22,1446.09 L1796.45,1445.93 L1797.69,1445.77 L1798.92,1445.62 L1800.15,1445.47 L1801.39,1445.33 L1802.62,1445.19 L1803.85,1445.05 L1805.09,1444.91 L1806.32,1444.77 L1807.56,1444.64 L1808.79,1444.51 L1810.03,1444.39 L1811.27,1444.26 L1812.5,1444.14 L1813.74,1444.03 L1814.98,1443.91 L1816.22,1443.8 L1817.46,1443.69 L1818.69,1443.59 L1819.93,1443.48 L1821.17,1443.38 L1822.41,1443.29 L1823.65,1443.19 L1824.89,1443.1 L1826.13,1443.01 L1827.37,1442.93 L1828.61,1442.84 L1829.85,1442.76 L1831.09,1442.69 L1832.34,1442.61 L1833.58,1442.54 L1834.82,1442.47 L1836.06,1442.41 L1837.3,1442.34 L1838.55,1442.28 L1839.79,1442.23 L1841.03,1442.17 L1842.27,1442.12 L1843.52,1442.07 L1844.76,1442.03 L1846,1441.99 L1847.25,1441.95 L1848.49,1441.91 L1849.73,1441.88 L1850.98,1441.84 L1852.22,1441.82 L1853.47,1441.79 L1854.71,1441.77 L1855.95,1441.75 L1857.2,1441.73 L1858.44,1441.72 L1859.69,1441.71 L1860.93,1441.7 L1862.17,1441.7 L1863.42,1441.69 L1864.66,1441.69 L1865.91,1441.7 L1867.15,1441.7 L1868.4,1441.71 L1869.64,1441.72 L1870.88,1441.74 L1872.13,1441.76 L1873.37,1441.78 L1874.62,1441.8 L1875.86,1441.83 L1877.1,1441.86 L1878.35,1441.89 L1879.59,1441.93 L1880.83,1441.96 L1882.08,1442.01 L1883.32,1442.05 L1884.56,1442.1 L1885.81,1442.15 L1887.05,1442.2 L1888.29,1442.25 L1889.53,1442.31 L1890.78,1442.37 L1892.02,1442.44 L1893.26,1442.5 L1894.5,1442.57 L1895.74,1442.65 L1896.99,1442.72 L1898.23,1442.8 L1899.47,1442.88 L1900.71,1442.96 L1901.95,1443.05 L1903.19,1443.14 L1904.43,1443.23 L1905.67,1443.33 L1906.91,1443.43 L1908.15,1443.53 L1909.38,1443.63 L1909.38,1443.63 L1910.65,1443.74 L1911.93,1443.86 L1913.21,1443.97 L1914.48,1444.09 L1915.76,1444.21 L1917.03,1444.34 L1918.29,1444.46 L1919.56,1444.59 L1920.83,1444.72 L1922.09,1444.85 L1923.35,1444.99 L1924.61,1445.12 L1925.87,1445.26 L1927.12,1445.4 L1928.38,1445.54 L1929.63,1445.68 L1930.88,1445.83 L1932.13,1445.97 L1933.37,1446.12 L1934.61,1446.26 L1935.85,1446.41 L1937.09,1446.56 L1938.33,1446.71 L1939.57,1446.86 L1940.81,1447.01 L1942.04,1447.16 L1943.27,1447.31 L1944.5,1447.46 L1945.73,1447.61 L1946.96,1447.76 L1948.19,1447.91 L2742.01,1545.42 L2743.24,1545.57 L2744.47,1545.72 L2745.69,1545.87 L2746.92,1546.02 L2748.15,1546.17 L2749.39,1546.33 L2750.62,1546.48 L2751.86,1546.63 L2753.09,1546.79 L2754.33,1546.95 L2755.57,1547.1 L2756.82,1547.26 L2758.07,1547.42 L2759.31,1547.59 L2760.56,1547.75 L2761.81,1547.91 L2763.06,1548.08 L2764.31,1548.25 L2765.56,1548.42 L2766.81,1548.59 L2768.07,1548.77 L2769.32,1548.94 L2770.58,1549.12 L2771.84,1549.31 L2773.1,1549.49 L2774.36,1549.68 L2775.62,1549.87 L2776.89,1550.06 L2778.15,1550.26 L2779.42,1550.46 L2780.67,1550.66 L2780.67,1550.66 L2781.15,1550.73 L2781.63,1550.81 L2782.1,1550.89 L2782.58,1550.97 L2783.06,1551.05 L2783.54,1551.12 L2784.02,1551.2 L2784.49,1551.28 L2784.97,1551.37 L2785.45,1551.45 L2785.93,1551.53 L2786.4,1551.61 L2786.88,1551.69 L2787.36,1551.77 L2787.83,1551.86 L2788.31,1551.94 L2788.79,1552.03 L2789.27,1552.11 L2789.74,1552.2 L2790.22,1552.28 L2790.7,1552.37 L2791.17,1552.45 L2791.65,1552.54 L2792.12,1552.63 L2792.6,1552.71 L2793.08,1552.8 L2793.55,1552.89 L2794.03,1552.98 L2794.5,1553.07 L2794.98,1553.16 L2795.46,1553.25 L2795.93,1553.34 L2796.41,1553.43 L2796.88,1553.52 L2797.36,1553.61 L2797.83,1553.7 L2798.31,1553.8 L2798.78,1553.89 L2799.26,1553.98 L2799.73,1554.08 L2800.2,1554.17 L2800.68,1554.27 L2801.15,1554.36 L2801.63,1554.46 L2802.1,1554.55 L2802.57,1554.65 L2803.05,1554.75 L2803.52,1554.84 L2804,1554.94 L2804.47,1555.04 L2804.94,1555.14 L2805.42,1555.24 L2805.89,1555.34 L2806.36,1555.44 L2806.84,1555.54 L2807.31,1555.64 L2807.78,1555.74 L2808.25,1555.84 L2808.73,1555.94 L2809.2,1556.05 L2809.67,1556.15 L2810.14,1556.25 L2810.61,1556.36 L2811.09,1556.46 L2811.56,1556.57 L2812.03,1556.67 L2812.5,1556.78 L2812.97,1556.88 L2813.44,1556.99 L2813.91,1557.1 L2814.39,1557.2 L2814.86,1557.31 L2815.33,1557.42 L2815.8,1557.53 L2816.27,1557.64 L2816.74,1557.75 L2817.21,1557.86 L2817.68,1557.97 L2818.15,1558.08 L2818.62,1558.19 L2819.09,1558.3 L2819.56,1558.41 L2820.03,1558.52 L2820.5,1558.64 L2820.97,1558.75 L2821.44,1558.86 L2821.9,1558.98 L2822.37,1559.09 L2822.84,1559.21 L2823.31,1559.32 L2823.78,1559.44 L2824.25,1559.55 L2824.72,1559.67 L2825.18,1559.79 L2825.65,1559.9 L2826.12,1560.02 L2826.59,1560.14 L2827.06,1560.26 L2827.52,1560.38 L2827.99,1560.5 L2828.46,1560.62 L2828.92,1560.74 L2829.39,1560.86 L2829.86,1560.98 L2830.32,1561.1 L2830.79,1561.22 L2831.26,1561.35 L2831.72,1561.47 L2832.19,1561.59 L2832.65,1561.72 L2833.12,1561.84 L2833.59,1561.96 L2834.05,1562.09 L2834.52,1562.21 L2834.98,1562.34 L2835.45,1562.47 L2835.91,1562.59 L2836.38,1562.72 L2836.84,1562.85 L2837.31,1562.98 L2837.77,1563.1 L2838.23,1563.23 L2838.7,1563.36 L2839.16,1563.49 L2839.63,1563.62 L2840.09,1563.75 L2840.55,1563.88 L2841.02,1564.01 L2841.48,1564.15 L2841.94,1564.28 L2842.41,1564.41 L2842.87,1564.54 L2843.33,1564.68 L2843.79,1564.81 L2844.25,1564.95 L2844.72,1565.08 L2845.18,1565.22 L2845.64,1565.35 L2846.1,1565.49 L2846.56,1565.62 L2847.03,1565.76 L2847.49,1565.9 L2847.95,1566.03 L2848.41,1566.17 L2848.87,1566.31 L2849.33,1566.45 L2849.79,1566.59 L2850.25,1566.73 L2850.71,1566.87 L2851.17,1567.01 L2851.63,1567.15 L2852.09,1567.29 L2852.55,1567.43 L2853.01,1567.58 L2853.47,1567.72 L2853.93,1567.86 L2854.38,1568 L2854.84,1568.15 L2855.3,1568.29 L2855.76,1568.44 L2856.22,1568.58 L2856.68,1568.73 L2857.13,1568.87 L2857.59,1569.02 L2858.05,1569.17 L2858.51,1569.31 L2858.96,1569.46 L2859.42,1569.61 L2859.88,1569.76 L2860.33,1569.91 L2860.79,1570.06 L2861.25,1570.21 L2861.7,1570.36 L2862.16,1570.51 L2862.61,1570.66 L2863.07,1570.81 L2863.52,1570.96 L2863.98,1571.11 L2864.43,1571.26 L2864.89,1571.42 L2864.89,1571.42 L2866.08,1571.82 L2867.28,1572.23 L2868.48,1572.64 L2869.67,1573.05 L2870.86,1573.47 L2872.05,1573.88 L2873.24,1574.3 L2874.43,1574.72 L2875.61,1575.15 L2876.79,1575.57 L2877.97,1575.99 L2879.14,1576.42 L2880.31,1576.85 L2881.48,1577.28 L2882.65,1577.7 L2883.82,1578.13 L2884.98,1578.57 L2886.14,1579 L2887.3,1579.43 L2888.45,1579.86 L2889.61,1580.29 L2890.76,1580.73 L2891.91,1581.16 L2893.06,1581.59 L2894.21,1582.03 L2895.36,1582.46 L2896.51,1582.9 L2897.65,1583.33 L2898.79,1583.76 L2899.93,1584.2 L2901.07,1584.63 L3045.46,1639.47 L3046.6,1639.9 L3047.74,1640.33 L3048.87,1640.76 L3050,1641.19 L3051.14,1641.62 L3052.27,1642.04 L3053.39,1642.47 L3054.52,1642.9 L3055.65,1643.32 L3056.77,1643.74 L3057.9,1644.16 L3059.01,1644.58 L3060.13,1645 L3061.25,1645.41 L3062.37,1645.83 L3063.49,1646.24 L3064.61,1646.65 L3065.72,1647.06 L3066.84,1647.47 L3067.96,1647.87 L3069.07,1648.27 L3070.18,1648.67 L3071.3,1649.07 L3072.41,1649.46 L3073.52,1649.86 L3074.63,1650.24 L3075.74,1650.63 L3076.85,1651.01 L3077.96,1651.4 L3079.07,1651.77 L3080.19,1652.15 L3080.19,1652.15 L3081.04,1652.44 L3081.9,1652.72 L3082.75,1653.01 L3083.61,1653.29 L3084.47,1653.57 L3085.32,1653.85 L3086.18,1654.12 L3087.04,1654.4 L3087.9,1654.67 L3088.76,1654.95 L3089.62,1655.22 L3090.48,1655.49 L3091.34,1655.75 L3092.2,1656.02 L3093.07,1656.28 L3093.93,1656.55 L3094.79,1656.81 L3095.66,1657.07 L3096.52,1657.32 L3097.39,1657.58 L3098.26,1657.84 L3099.12,1658.09 L3099.99,1658.34 L3100.86,1658.59 L3101.73,1658.84 L3102.6,1659.09 L3103.47,1659.33 L3104.34,1659.57 L3105.21,1659.82 L3106.08,1660.06 L3106.95,1660.29 L3107.82,1660.53 L3108.7,1660.77 L3109.57,1661 L3110.45,1661.23 L3111.32,1661.46 L3112.2,1661.69 L3113.07,1661.92 L3113.95,1662.15 L3114.83,1662.37 L3115.7,1662.59 L3116.58,1662.81 L3117.46,1663.03 L3118.34,1663.25 L3119.22,1663.47 L3120.1,1663.68 L3120.98,1663.89 L3121.86,1664.11 L3122.74,1664.32 L3123.62,1664.52 L3124.51,1664.73 L3125.39,1664.93 L3126.27,1665.14 L3127.16,1665.34 L3128.04,1665.54 L3128.93,1665.74 L3129.81,1665.93 L3130.7,1666.13 L3131.58,1666.32 L3132.47,1666.51 L3133.36,1666.7 L3134.24,1666.89 L3135.13,1667.08 L3136.02,1667.26 L3136.91,1667.45 L3137.8,1667.63 L3138.69,1667.81 L3139.58,1667.99 L3140.47,1668.16 L3141.36,1668.34 L3142.25,1668.51 L3143.14,1668.68 L3144.04,1668.85 L3144.93,1669.02 L3145.82,1669.19 L3146.71,1669.36 L3147.61,1669.52 L3148.5,1669.68 L3149.4,1669.84 L3150.29,1670 L3151.19,1670.16 L3152.08,1670.31 L3152.98,1670.47 L3153.87,1670.62 L3154.77,1670.77 L3155.67,1670.92 L3156.57,1671.06 L3157.46,1671.21 L3158.36,1671.35 L3159.26,1671.5 L3160.16,1671.64 L3161.06,1671.78 L3161.96,1671.91 L3162.86,1672.05 L3163.76,1672.18 L3164.66,1672.31 L3165.56,1672.45 L3166.46,1672.57 L3167.36,1672.7 L3168.26,1672.83 L3169.16,1672.95 L3170.06,1673.07 L3170.97,1673.19 L3171.87,1673.31 L3172.77,1673.43 L3173.67,1673.55 L3174.58,1673.66 L3175.48,1673.77 L3176.39,1673.88 L3177.29,1673.99 L3178.19,1674.1 L3179.1,1674.2 L3180,1674.31 L3180.91,1674.41 L3181.81,1674.51 L3182.72,1674.61 L3183.63,1674.71 L3184.53,1674.8 L3185.44,1674.9 L3186.34,1674.99 L3187.25,1675.08 L3188.16,1675.17 L3189.06,1675.25 L3189.97,1675.34 L3190.88,1675.42 L3191.79,1675.51 L3192.69,1675.59 L3193.6,1675.67 L3194.51,1675.74 L3195.42,1675.82 L3196.33,1675.89 L3197.24,1675.96 L3198.15,1676.03 L3199.06,1676.1 L3199.96,1676.17 L3200.87,1676.24 L3201.78,1676.3 L3202.69,1676.36 L3203.6,1676.42 L3204.51,1676.48 L3205.42,1676.54 L3206.33,1676.59 L3207.24,1676.65 L3208.15,1676.7 L3209.06,1676.75 L3209.98,1676.8 L3210.89,1676.84 L3211.8,1676.89 L3212.71,1676.93 L3213.62,1676.97 L3214.53,1677.01 L3215.44,1677.05 L3216.35,1677.09 L3217.27,1677.12 L3218.18,1677.16 L3219.09,1677.19 L3220,1677.22 L3220.91,1677.25 L3221.82,1677.28 L3222.74,1677.3 L3223.65,1677.32 L3224.56,1677.35 L3225.47,1677.37 L3226.38,1677.38 L3227.3,1677.4 L3228.21,1677.42 L3229.12,1677.43 L3230.03,1677.44 L3230.95,1677.45 L3231.86,1677.46 L3232.77,1677.46 L3233.68,1677.47 L3234.59,1677.47 L3235.51,1677.47 L3236.42,1677.47 L3237.33,1677.47 L3238.24,1677.47 L3239.16,1677.46 L3240.07,1677.46 L3240.98,1677.45 L3240.98,1677.45 L3242.18,1677.43 L3243.37,1677.42 L3244.55,1677.4 L3245.74,1677.38 L3246.94,1677.35 L3248.13,1677.32 L3249.32,1677.3 L3250.52,1677.26 L3251.72,1677.23 L3252.92,1677.2 L3254.12,1677.16 L3255.32,1677.12 L3256.53,1677.08 L3257.73,1677.03 L3258.94,1676.99 L3260.15,1676.94 L3261.36,1676.89 L3262.57,1676.85 L3263.79,1676.8 L3265.01,1676.74 L3266.23,1676.69 L3267.45,1676.64 L3268.67,1676.58 L3269.89,1676.53 L3271.11,1676.47 L3272.33,1676.41 L3273.56,1676.36 L3274.79,1676.3 L3276.02,1676.24 L3277.25,1676.18 L3278.48,1676.12 L3433.91,1668.72" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="#000000" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="4.16667" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="0" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[109].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(109)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1902.55,1385.12 L1926.17,1385.12 L1926.17,1408.74 L1902.55,1408.74 L1902.55,1385.12" vector-effect="none"/>
            </Tooltip>)})}
  </g>
  <g stroke-opacity="1" fill="#000000" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="4.16667" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="0" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[110].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(110)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2125.08,1629.69 L2148.71,1629.69 L2148.71,1653.32 L2125.08,1653.32 L2125.08,1629.69" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="#c43c39" font-weight="400" stroke-linejoin="bevel" stroke="#232323" stroke-width="1" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="1" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[111].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(111)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M201.235,1623.5 C201.235,1630.03 195.947,1635.32 189.424,1635.32 C182.901,1635.32 177.613,1630.03 177.613,1623.5 C177.613,1616.98 182.901,1611.69 189.424,1611.69 C195.947,1611.69 201.235,1616.98 201.235,1623.5 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[112].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(112)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M227.259,1623.17 C227.259,1629.7 221.972,1634.99 215.448,1634.99 C208.925,1634.99 203.637,1629.7 203.637,1623.17 C203.637,1616.65 208.925,1611.36 215.448,1611.36 C221.972,1611.36 227.259,1616.65 227.259,1623.17 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[113].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(113)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M268.015,1622.72 C268.015,1629.24 262.727,1634.53 256.204,1634.53 C249.681,1634.53 244.393,1629.24 244.393,1622.72 C244.393,1616.2 249.681,1610.91 256.204,1610.91 C262.727,1610.91 268.015,1616.2 268.015,1622.72 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[114].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(114)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M308.89,1622.29 C308.89,1628.82 303.602,1634.1 297.079,1634.1 C290.556,1634.1 285.268,1628.82 285.268,1622.29 C285.268,1615.77 290.556,1610.48 297.079,1610.48 C303.602,1610.48 308.89,1615.77 308.89,1622.29 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[115].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(115)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M325.219,1622.06 C325.219,1628.58 319.931,1633.87 313.408,1633.87 C306.885,1633.87 301.597,1628.58 301.597,1622.06 C301.597,1615.53 306.885,1610.25 313.408,1610.25 C319.931,1610.25 325.219,1615.53 325.219,1622.06 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[116].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(116)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M395.986,1622.6 C395.986,1629.12 390.698,1634.41 384.175,1634.41 C377.652,1634.41 372.364,1629.12 372.364,1622.6 C372.364,1616.07 377.652,1610.79 384.175,1610.79 C390.698,1610.79 395.986,1616.07 395.986,1622.6 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[117].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(117)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M452.757,1623.01 C452.757,1629.54 447.469,1634.82 440.946,1634.82 C434.423,1634.82 429.135,1629.54 429.135,1623.01 C429.135,1616.49 434.423,1611.2 440.946,1611.2 C447.469,1611.2 452.757,1616.49 452.757,1623.01 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[118].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(118)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M440.247,1702.4 C440.247,1708.92 434.959,1714.21 428.436,1714.21 C421.913,1714.21 416.625,1708.92 416.625,1702.4 C416.625,1695.88 421.913,1690.59 428.436,1690.59 C434.959,1690.59 440.247,1695.88 440.247,1702.4 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[119].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(119)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M448.64,1741.66 C448.64,1748.19 443.352,1753.47 436.829,1753.47 C430.306,1753.47 425.018,1748.19 425.018,1741.66 C425.018,1735.14 430.306,1729.85 436.829,1729.85 C443.352,1729.85 448.64,1735.14 448.64,1741.66 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[120].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(120)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M344.505,1746.23 C344.505,1752.75 339.217,1758.04 332.694,1758.04 C326.171,1758.04 320.883,1752.75 320.883,1746.23 C320.883,1739.71 326.171,1734.42 332.694,1734.42 C339.217,1734.42 344.505,1739.71 344.505,1746.23 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[121].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(121)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M274.55,1751.22 C274.55,1757.75 269.262,1763.03 262.739,1763.03 C256.215,1763.03 250.927,1757.75 250.927,1751.22 C250.927,1744.7 256.215,1739.41 262.739,1739.41 C269.262,1739.41 274.55,1744.7 274.55,1751.22 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[122].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(122)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M225.517,1755.46 C225.517,1761.99 220.229,1767.27 213.706,1767.27 C207.183,1767.27 201.895,1761.99 201.895,1755.46 C201.895,1748.94 207.183,1743.65 213.706,1743.65 C220.229,1743.65 225.517,1748.94 225.517,1755.46 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[123].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(123)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M212.046,1760.35 C212.046,1766.88 206.758,1772.16 200.235,1772.16 C193.712,1772.16 188.424,1766.88 188.424,1760.35 C188.424,1753.83 193.712,1748.54 200.235,1748.54 C206.758,1748.54 212.046,1753.83 212.046,1760.35 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[124].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(124)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M208.986,1718.04 C208.986,1724.57 203.698,1729.86 197.175,1729.86 C190.652,1729.86 185.364,1724.57 185.364,1718.04 C185.364,1711.52 190.652,1706.23 197.175,1706.23 C203.698,1706.23 208.986,1711.52 208.986,1718.04 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#ffff00" stroke-width="9.375" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[125].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(125)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M409.936,2041.73 L410.127,2041.9 L417.825,2047.77 L427.209,2054.25 L432.839,2056.36 L437.038,2059.07 L441.809,2058.65 L444.195,2056.7 L442.859,2045.7 L440.95,2035.72 L437.515,2025.31 L433.411,2021.25 L426.541,2021.59 L407.186,2023.1 L409.936,2041.73" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#232323" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[126].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(126)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M372.875,2007.65 L386.977,2003.35 L393.672,1998 L401.589,1998.25 L420.594,1991.26 L421.491,1973.26 L425.741,1951.7 L428.94,1936.92 L432.516,1926.31 L447.271,1890.43 L456.669,1859.71 L458.479,1854.12 L447.41,1820.26 L442.05,1782.4 L437.763,1761.94 L435.519,1745.63 L433.816,1739.08 L212.6,1755.14 L192.114,1761.98 L194.146,1771.75 L204.957,1830.68 L217.61,1851.56 L222.852,1861.21 L239.375,1889.94 L270.999,1928.59 L286.56,1947.92 L303.465,1968.31 L350.945,1998.49 L360.88,2002.6 L372.875,2007.65" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="#7d8b8f" font-weight="400" stroke-linejoin="bevel" stroke="#232323" stroke-width="1" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="1" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[127].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(127)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M783.625,1886.79 C783.625,1893.32 778.337,1898.61 771.814,1898.61 C765.291,1898.61 760.003,1893.32 760.003,1886.79 C760.003,1880.27 765.291,1874.98 771.814,1874.98 C778.337,1874.98 783.625,1880.27 783.625,1886.79 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}

        {[128].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(128)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M331.03,1796.94 C331.03,1803.46 325.742,1808.75 319.219,1808.75 C312.696,1808.75 307.408,1803.46 307.408,1796.94 C307.408,1790.42 312.696,1785.13 319.219,1785.13 C325.742,1785.13 331.03,1790.42 331.03,1796.94 " vector-effect="non-scaling-stroke"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#232323" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[129].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(129)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M159.309,1623.8 L163.021,1628.85 L163.269,1678.01 L181.315,1689.51 L188.541,1725.4 L192.027,1767.19 L209.937,1832.04 L253.536,1895.17 L306.199,1965.47 L352.309,1994.57 L404.189,2040.16 L427.626,2056.77 L450.613,2065.72 L500.329,2127.52 L549.581,2041.14 L591.513,2013.35 L688.026,2020.15 L820.217,2054.59 L899.293,2101.08 L1129.78,2042.71 L1155.85,2026.23 L1256.57,1998.21 L1342.88,1982.12 L1377.37,1984.76 L1412.71,1979.44 L1435.54,1969.21 L1471.03,1924.06 L1532.67,1897.52 L1548.67,1895.47 L1623.23,1859.18 L1641.78,1856.33 L1668.17,1865.52 L1692.15,1869.14 L1696.56,1862.09 L1695.07,1845.97 L1697.44,1833.42 L1697.64,1807.56 L1702.71,1761.74 L1675.32,1736.09 L1663.04,1719.15 L1653.51,1701.71 L1652.06,1683.08 L1657.26,1669.78 L1662.69,1662.81 L1676.68,1651.69 L1716.32,1635.72 L1714.64,1620.4 L1706.47,1608.89 L1698.69,1604.01 L1673.88,1598.53 L1646.31,1580.89 L1630.42,1561.08 L1632.48,1545.01 L1640.51,1537.91 L1644.9,1525 L1614.23,1536.98 L1610.54,1565.67 L1632.57,1593.12 L1663.79,1613.05 L1665.62,1632.59 L1643.66,1657.06 L1627.24,1681.48 L1597.07,1735.08 L1501.73,1851.19 L1438.61,1878.1 L1382.28,1907.14 L1338.85,1914.98 L1274.32,1914.27 L1113.17,1928.34 L1030.33,1856.09 L963.338,1836.06 L959.751,1771.82 L901.468,1766.55 L897.584,1835.81 L762.672,1832.32 L766.696,1708.86 L755.655,1702.98 L756.712,1670.56 L746.635,1656.92 L669.904,1629.84 L656.753,1627.43 L504.521,1623.48 L313.413,1622.07 L159.309,1623.8" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="#000000" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="4.16667" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="0" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[130].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(130)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1672.36,1239.56 L1695.98,1239.56 L1695.98,1263.19 L1672.36,1263.19 L1672.36,1239.56" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#ff0000" stroke-width="6.25" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[131].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(131)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2292.28,1649.37 L2289.15,1648.41 L2267.51,1668.04 L2261.35,1675.9 L2257.69,1684.39 L2242.49,1680.88 L2229.38,1675.2 L2211.73,1670.83 L2177.04,1670.69 L2180.08,1688.91 L2168.37,1691.08 L2203.29,1742.86 L2216.34,1747.1 L2264.27,1731.87 L2295.79,1718.5 L2311.03,1686.28 L2292.28,1649.37" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#000000" stroke-width="9.375" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[132].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(132)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2316.9,1698.21 L2329.42,1686.46 L2344.58,1675.61 L2359.91,1669.15 L2380.11,1665.09 L2425.59,1653.88 L2423.07,1580.84 L2347.59,1591.94 L2338.28,1600.81 L2329.71,1609.11 L2307.75,1628.43 L2289.87,1644.19 L2311.38,1686.26 L2296.45,1718.54 L2316.9,1698.21" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#00ff00" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="butt" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[133].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(133)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2280.93,1194.76 L2280.89,1194.18 L2280.79,1193.61 L2280.63,1193.05 L2280.4,1192.51 L2280.12,1191.99 L2279.78,1191.5 L2279.39,1191.03 L2278.95,1190.61 L2278.46,1190.23 L2277.94,1189.89 L2277.38,1189.59 L2276.79,1189.35 L2276.18,1189.16 L2275.54,1189.03 L2274.9,1188.95 L2274.25,1188.92 L2273.61,1188.96 L2272.96,1189.05 L2272.34,1189.2 L2271.73,1189.4 L2271.14,1189.65 L2270.59,1189.95 L2270.07,1190.3 L2269.6,1190.69 L2269.17,1191.12 L2268.78,1191.59 L2268.46,1192.09 L2268.18,1192.62 L2267.97,1193.16 L2267.82,1193.73 L2267.73,1194.3 L2267.71,1194.88 L2267.74,1195.45 L2267.85,1196.03 L2268.01,1196.59 L2268.23,1197.13 L2268.52,1197.65 L2268.86,1198.14 L2269.25,1198.6 L2269.69,1199.03 L2270.17,1199.41 L2270.7,1199.75 L2271.26,1200.04 L2271.85,1200.29 L2272.46,1200.48 L2273.09,1200.61 L2273.74,1200.69 L2274.38,1200.71 L2275.03,1200.68 L2275.67,1200.59 L2276.3,1200.44 L2276.91,1200.24 L2277.49,1199.99 L2278.05,1199.69 L2278.56,1199.34 L2279.04,1198.95 L2279.47,1198.51 L2279.85,1198.05 L2280.18,1197.55 L2280.45,1197.02 L2280.67,1196.47 L2280.82,1195.91 L2280.91,1195.34 L2280.93,1194.76" vector-effect="none"/>
            </Tooltip>)})}

        {[134].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(134)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2495.57,1290.86 L2495.52,1290.13 L2495.4,1289.41 L2495.19,1288.71 L2494.91,1288.03 L2494.55,1287.38 L2494.13,1286.76 L2493.63,1286.18 L2493.08,1285.64 L2492.47,1285.16 L2491.81,1284.73 L2491.11,1284.36 L2490.37,1284.06 L2489.6,1283.82 L2488.8,1283.65 L2488,1283.55 L2487.18,1283.53 L2486.37,1283.57 L2485.56,1283.68 L2484.77,1283.87 L2484.01,1284.12 L2483.27,1284.43 L2482.58,1284.81 L2481.93,1285.25 L2481.33,1285.75 L2480.79,1286.29 L2480.31,1286.88 L2479.9,1287.5 L2479.56,1288.17 L2479.29,1288.85 L2479.1,1289.56 L2478.99,1290.28 L2478.95,1291 L2479,1291.73 L2479.13,1292.45 L2479.34,1293.15 L2479.62,1293.83 L2479.97,1294.49 L2480.4,1295.11 L2480.89,1295.69 L2481.45,1296.22 L2482.06,1296.7 L2482.72,1297.13 L2483.42,1297.5 L2484.16,1297.8 L2484.93,1298.04 L2485.72,1298.21 L2486.53,1298.31 L2487.35,1298.34 L2488.16,1298.3 L2488.96,1298.18 L2489.75,1298 L2490.52,1297.75 L2491.25,1297.43 L2491.95,1297.05 L2492.6,1296.61 L2493.2,1296.12 L2493.74,1295.57 L2494.22,1294.99 L2494.63,1294.36 L2494.97,1293.7 L2495.24,1293.01 L2495.43,1292.3 L2495.54,1291.58 L2495.57,1290.86" vector-effect="none"/>
            </Tooltip>)})}

        {[135].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(135)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2351.96,1206.01 L2351.92,1205.42 L2351.82,1204.84 L2351.65,1204.26 L2351.42,1203.71 L2351.13,1203.18 L2350.79,1202.68 L2350.39,1202.21 L2349.94,1201.77 L2349.44,1201.38 L2348.91,1201.03 L2348.33,1200.73 L2347.73,1200.49 L2347.11,1200.29 L2346.46,1200.16 L2345.81,1200.07 L2345.15,1200.05 L2344.48,1200.09 L2343.83,1200.18 L2343.19,1200.33 L2342.57,1200.53 L2341.97,1200.79 L2341.41,1201.1 L2340.88,1201.45 L2340.39,1201.86 L2339.95,1202.3 L2339.56,1202.77 L2339.23,1203.28 L2338.95,1203.82 L2338.73,1204.38 L2338.58,1204.95 L2338.49,1205.54 L2338.46,1206.13 L2338.5,1206.72 L2338.61,1207.3 L2338.77,1207.87 L2339,1208.42 L2339.29,1208.96 L2339.64,1209.46 L2340.04,1209.93 L2340.49,1210.36 L2340.98,1210.75 L2341.52,1211.1 L2342.09,1211.4 L2342.69,1211.65 L2343.32,1211.84 L2343.96,1211.98 L2344.62,1212.06 L2345.28,1212.08 L2345.94,1212.05 L2346.59,1211.96 L2347.23,1211.81 L2347.86,1211.6 L2348.45,1211.34 L2349.02,1211.04 L2349.54,1210.68 L2350.03,1210.28 L2350.47,1209.84 L2350.86,1209.36 L2351.19,1208.85 L2351.47,1208.31 L2351.69,1207.76 L2351.84,1207.18 L2351.93,1206.6 L2351.96,1206.01" vector-effect="none"/>
            </Tooltip>)})}

        {[136].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(136)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2381.94,1180.71 L2381.9,1180.11 L2381.79,1179.51 L2381.62,1178.93 L2381.39,1178.36 L2381.09,1177.82 L2380.74,1177.31 L2380.33,1176.82 L2379.87,1176.38 L2379.36,1175.98 L2378.82,1175.63 L2378.23,1175.32 L2377.62,1175.07 L2376.98,1174.87 L2376.32,1174.73 L2375.65,1174.65 L2374.98,1174.63 L2374.3,1174.66 L2373.63,1174.76 L2372.98,1174.91 L2372.34,1175.12 L2371.74,1175.38 L2371.16,1175.69 L2370.62,1176.06 L2370.12,1176.47 L2369.67,1176.92 L2369.28,1177.41 L2368.93,1177.93 L2368.65,1178.47 L2368.43,1179.04 L2368.27,1179.63 L2368.18,1180.23 L2368.15,1180.83 L2368.19,1181.43 L2368.3,1182.03 L2368.47,1182.61 L2368.7,1183.18 L2369,1183.72 L2369.35,1184.23 L2369.76,1184.71 L2370.22,1185.16 L2370.73,1185.56 L2371.27,1185.91 L2371.86,1186.22 L2372.47,1186.47 L2373.11,1186.67 L2373.77,1186.81 L2374.44,1186.89 L2375.11,1186.91 L2375.79,1186.88 L2376.46,1186.78 L2377.11,1186.63 L2377.74,1186.42 L2378.35,1186.16 L2378.93,1185.84 L2379.47,1185.48 L2379.97,1185.07 L2380.42,1184.62 L2380.81,1184.13 L2381.15,1183.61 L2381.44,1183.06 L2381.66,1182.49 L2381.82,1181.91 L2381.91,1181.31 L2381.94,1180.71" vector-effect="none"/>
            </Tooltip>)})}

        {[137].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(137)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2142.79,1197.53 L2142.79,1197.03 L2142.69,1196.43 L2142.59,1195.93 L2142.29,1195.43 L2142.09,1194.93 L2141.79,1194.43 L2141.39,1194.03 L2140.99,1193.63 L2140.49,1193.33 L2139.99,1192.93 L2139.49,1192.73 L2138.99,1192.43 L2138.39,1192.33 L2137.79,1192.13 L2137.19,1192.13 L2136.59,1192.03 L2135.99,1192.13 L2135.39,1192.13 L2134.79,1192.33 L2134.19,1192.53 L2133.69,1192.73 L2133.09,1193.03 L2132.69,1193.33 L2132.19,1193.73 L2131.79,1194.13 L2131.39,1194.53 L2131.09,1195.03 L2130.89,1195.53 L2130.69,1196.03 L2130.49,1196.53 L2130.49,1197.13 L2130.39,1197.63 L2130.49,1198.23 L2130.59,1198.73 L2130.69,1199.23 L2130.89,1199.73 L2131.19,1200.23 L2131.49,1200.73 L2131.89,1201.13 L2132.29,1201.53 L2132.69,1201.93 L2133.19,1202.23 L2133.79,1202.53 L2134.29,1202.73 L2134.89,1202.93 L2135.49,1203.03 L2136.09,1203.13 L2136.69,1203.13 L2137.29,1203.13 L2137.89,1203.03 L2138.49,1202.83 L2139.09,1202.63 L2139.59,1202.43 L2140.09,1202.13 L2140.59,1201.83 L2141.09,1201.43 L2141.49,1201.03 L2141.79,1200.63 L2142.09,1200.13 L2142.39,1199.63 L2142.59,1199.13 L2142.69,1198.63 L2142.79,1198.03 L2142.79,1197.53" vector-effect="none"/>
            </Tooltip>)})}

        {[138].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(138)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2203.35,1199.87 L2203.31,1199.3 L2203.21,1198.73 L2203.05,1198.17 L2202.83,1197.64 L2202.54,1197.12 L2202.21,1196.63 L2201.82,1196.17 L2201.38,1195.75 L2200.9,1195.37 L2200.38,1195.03 L2199.82,1194.74 L2199.23,1194.5 L2198.63,1194.31 L2198,1194.17 L2197.36,1194.1 L2196.71,1194.07 L2196.07,1194.11 L2195.43,1194.2 L2194.81,1194.34 L2194.21,1194.54 L2193.63,1194.79 L2193.08,1195.09 L2192.56,1195.44 L2192.09,1195.83 L2191.66,1196.26 L2191.28,1196.72 L2190.95,1197.22 L2190.68,1197.74 L2190.47,1198.29 L2190.32,1198.84 L2190.23,1199.41 L2190.21,1199.99 L2190.25,1200.56 L2190.35,1201.13 L2190.51,1201.69 L2190.73,1202.22 L2191.02,1202.74 L2191.35,1203.23 L2191.74,1203.69 L2192.18,1204.11 L2192.66,1204.49 L2193.18,1204.83 L2193.74,1205.12 L2194.33,1205.36 L2194.93,1205.55 L2195.56,1205.69 L2196.2,1205.76 L2196.84,1205.79 L2197.49,1205.75 L2198.12,1205.66 L2198.75,1205.52 L2199.35,1205.32 L2199.93,1205.07 L2200.48,1204.77 L2201,1204.42 L2201.47,1204.03 L2201.9,1203.6 L2202.28,1203.14 L2202.6,1202.64 L2202.87,1202.12 L2203.09,1201.58 L2203.24,1201.02 L2203.32,1200.45 L2203.35,1199.87" vector-effect="none"/>
            </Tooltip>)})}

        {[139].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(139)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1704.66,1217.69 L1704.61,1216.97 L1704.49,1216.25 L1704.28,1215.55 L1704,1214.87 L1703.64,1214.21 L1703.22,1213.59 L1702.73,1213.01 L1702.17,1212.48 L1701.56,1212 L1700.9,1211.57 L1700.2,1211.2 L1699.46,1210.9 L1698.69,1210.66 L1697.9,1210.49 L1697.09,1210.39 L1696.27,1210.36 L1695.46,1210.4 L1694.65,1210.52 L1693.86,1210.7 L1693.1,1210.95 L1692.37,1211.27 L1691.67,1211.65 L1691.02,1212.09 L1690.42,1212.58 L1689.88,1213.12 L1689.4,1213.71 L1688.99,1214.34 L1688.65,1215 L1688.38,1215.69 L1688.19,1216.39 L1688.08,1217.11 L1688.05,1217.84 L1688.09,1218.56 L1688.22,1219.28 L1688.43,1219.99 L1688.71,1220.67 L1689.06,1221.32 L1689.49,1221.94 L1689.98,1222.52 L1690.54,1223.06 L1691.15,1223.54 L1691.81,1223.97 L1692.51,1224.33 L1693.25,1224.64 L1694.02,1224.88 L1694.81,1225.05 L1695.62,1225.14 L1696.44,1225.17 L1697.25,1225.13 L1698.05,1225.02 L1698.84,1224.83 L1699.61,1224.58 L1700.34,1224.27 L1701.04,1223.89 L1701.69,1223.45 L1702.29,1222.95 L1702.83,1222.41 L1703.31,1221.82 L1703.72,1221.19 L1704.06,1220.53 L1704.33,1219.85 L1704.52,1219.14 L1704.63,1218.42 L1704.66,1217.69" vector-effect="none"/>
            </Tooltip>)})}

        {[140].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(140)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1924.76,1222.54 L1924.71,1221.82 L1924.58,1221.1 L1924.38,1220.39 L1924.1,1219.71 L1923.74,1219.06 L1923.31,1218.44 L1922.82,1217.86 L1922.27,1217.33 L1921.66,1216.84 L1921,1216.42 L1920.3,1216.05 L1919.55,1215.74 L1918.78,1215.51 L1917.99,1215.34 L1917.18,1215.24 L1916.37,1215.21 L1915.55,1215.25 L1914.75,1215.36 L1913.96,1215.55 L1913.2,1215.8 L1912.46,1216.12 L1911.77,1216.5 L1911.12,1216.93 L1910.52,1217.43 L1909.98,1217.97 L1909.5,1218.56 L1909.08,1219.19 L1908.74,1219.85 L1908.48,1220.53 L1908.29,1221.24 L1908.17,1221.96 L1908.14,1222.69 L1908.19,1223.41 L1908.32,1224.13 L1908.52,1224.83 L1908.81,1225.52 L1909.16,1226.17 L1909.59,1226.79 L1910.08,1227.37 L1910.63,1227.9 L1911.24,1228.39 L1911.9,1228.81 L1912.61,1229.18 L1913.35,1229.48 L1914.12,1229.72 L1914.91,1229.89 L1915.72,1229.99 L1916.53,1230.02 L1917.35,1229.98 L1918.15,1229.86 L1918.94,1229.68 L1919.7,1229.43 L1920.44,1229.11 L1921.13,1228.73 L1921.78,1228.29 L1922.38,1227.8 L1922.92,1227.26 L1923.4,1226.67 L1923.82,1226.04 L1924.16,1225.38 L1924.42,1224.69 L1924.62,1223.99 L1924.73,1223.27 L1924.76,1222.54" vector-effect="none"/>
            </Tooltip>)})}

        {[141].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(141)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1876.99,1388.34 L1876.94,1387.61 L1876.81,1386.9 L1876.61,1386.19 L1876.32,1385.51 L1875.97,1384.86 L1875.54,1384.24 L1875.05,1383.66 L1874.5,1383.12 L1873.89,1382.64 L1873.23,1382.21 L1872.52,1381.85 L1871.78,1381.54 L1871.01,1381.3 L1870.22,1381.13 L1869.41,1381.03 L1868.6,1381.01 L1867.78,1381.05 L1866.98,1381.16 L1866.19,1381.35 L1865.42,1381.6 L1864.69,1381.91 L1864,1382.29 L1863.34,1382.73 L1862.75,1383.23 L1862.2,1383.77 L1861.73,1384.36 L1861.31,1384.98 L1860.97,1385.64 L1860.7,1386.33 L1860.51,1387.04 L1860.4,1387.76 L1860.37,1388.48 L1860.42,1389.21 L1860.55,1389.93 L1860.75,1390.63 L1861.03,1391.31 L1861.39,1391.97 L1861.82,1392.59 L1862.31,1393.17 L1862.86,1393.7 L1863.47,1394.18 L1864.13,1394.61 L1864.83,1394.98 L1865.57,1395.28 L1866.34,1395.52 L1867.14,1395.69 L1867.95,1395.79 L1868.76,1395.82 L1869.57,1395.78 L1870.38,1395.66 L1871.17,1395.48 L1871.93,1395.23 L1872.67,1394.91 L1873.36,1394.53 L1874.01,1394.09 L1874.61,1393.6 L1875.15,1393.05 L1875.63,1392.47 L1876.05,1391.84 L1876.39,1391.18 L1876.65,1390.49 L1876.84,1389.79 L1876.96,1389.07 L1876.99,1388.34" vector-effect="none"/>
            </Tooltip>)})}
  </g>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#ff00ff" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="butt" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[142].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(142)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2112.86,1236.35 L2231.73,1231.81 L2400.18,1239.35 L2442.27,1233.34 L2406.84,1490.26 L2135.15,1456.89 L2112.86,1236.35" vector-effect="none"/>
            </Tooltip>)})}
  </g>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="miter" stroke="#00ff00" stroke-width="3.07087" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="butt" font-family="MS Shell Dlg 2" stroke-miterlimit="2" font-size="32.5" font-style="normal">

        {[143].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(143)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2311.99,1368.3 L2311.92,1367.21 L2311.72,1366.13 L2311.42,1365.08 L2310.99,1364.06 L2310.46,1363.07 L2309.82,1362.15 L2309.08,1361.28 L2308.25,1360.48 L2307.34,1359.75 L2306.35,1359.11 L2305.29,1358.56 L2304.18,1358.1 L2303.02,1357.75 L2301.84,1357.49 L2300.62,1357.34 L2299.4,1357.3 L2298.18,1357.36 L2296.97,1357.53 L2295.79,1357.81 L2294.64,1358.19 L2293.54,1358.66 L2292.5,1359.23 L2291.52,1359.89 L2290.62,1360.63 L2289.81,1361.45 L2289.09,1362.33 L2288.47,1363.27 L2287.96,1364.26 L2287.56,1365.29 L2287.28,1366.35 L2287.11,1367.43 L2287.06,1368.52 L2287.13,1369.61 L2287.32,1370.68 L2287.63,1371.74 L2288.06,1372.76 L2288.59,1373.74 L2289.23,1374.67 L2289.97,1375.54 L2290.8,1376.34 L2291.71,1377.07 L2292.7,1377.71 L2293.76,1378.26 L2294.87,1378.71 L2296.02,1379.07 L2297.21,1379.33 L2298.43,1379.48 L2299.65,1379.52 L2300.87,1379.45 L2302.08,1379.28 L2303.26,1379.01 L2304.41,1378.63 L2305.51,1378.15 L2306.55,1377.59 L2307.53,1376.93 L2308.42,1376.19 L2309.24,1375.37 L2309.96,1374.49 L2310.57,1373.55 L2311.09,1372.56 L2311.49,1371.53 L2311.77,1370.47 L2311.94,1369.39 L2311.99,1368.3" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(0.999751,0,0,0.999751,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="0.194003" fill="#959696" font-weight="400" stroke-linejoin="bevel" stroke="#f7f7f7" stroke-width="0.0996338" transform="matrix(0.999751,0,0,0.999751,0,0)" fill-opacity="0.194003" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal">

        {[144].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(144)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1654.01,1456.83 L1674.36,1413.95 L1657.25,1396.61 L1659.53,1386.09 L1657.73,1370.66 L1612.05,1306.56 L1624.25,1286.22 L1611.33,1259.08 L1622.81,1191.39 L1625.56,1145.34 L1611.45,1126.92 L1576.17,1105.99 L1555.72,1087.34 L1540.17,1059.35 L1534.07,977.788 L1552.85,968.34 L1559.43,1055.64 L1571.5,1077.05 L1588.73,1093.08 L1625.08,1115.08 L1645.06,1140.32 L1641.95,1192.34 L1630.94,1257.22 L1645.71,1287 L1634.23,1305.9 L1676.57,1365.69 L1679.08,1386.92 L1677.82,1391.59 L1696.72,1410.3 L1673.58,1459.37 L1654.06,1458.14 L1654.01,1456.83" vector-effect="none"/>
            </Tooltip>)})}

        {[145].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(145)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1751.97,1064.16 L2088.99,1152.52 L2109.35,1354.53 L2002.67,1365.62 L2003.71,1351.66 L1913.94,1340.77 L1879.2,1346.21 L1879.08,1352.05 L1787.04,1366.9 L1751.97,1064.16" vector-effect="none"/>
            </Tooltip>)})}

        {[146].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(146)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1787.1,1366.93 L1879.13,1352.05 L1879.29,1346.31 L1913.73,1340.81 L2003.71,1351.66 L2002.64,1365.62 L2000.93,1431.35 L2012.02,1433.26 L2006.67,1454.79 L1962.42,1449.53 L1930.53,1445.7 L1908.77,1443.39 L1886.44,1441.87 L1855.59,1441.63 L1827.52,1442.75 L1809.18,1444.43 L1796.19,1446.34 L1787.1,1366.93" vector-effect="none"/>
            </Tooltip>)})}

        {[147].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(147)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2119.55,1454.9 L2010.07,1441.55 L2012,1433.27 L2000.93,1431.35 L2002.64,1365.64 L2109.41,1354.52 L2119.55,1454.9" vector-effect="none"/>
            </Tooltip>)})}

        {[148].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(148)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2104.83,1156.89 L2128.67,1163.48 L2128.96,1163.54 L2132.6,1164.31 L2165.38,1171.25 L2161.49,1220.82 L2111.48,1222.73 L2104.83,1156.89" vector-effect="none"/>
            </Tooltip>)})}

        {[149].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(149)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2165.4,1171.26 L2168.2,1171.85 L2168.64,1171.95 L2227.28,1178.24 L2231.33,1218.15 L2161.49,1220.82 L2165.4,1171.26" vector-effect="none"/>
            </Tooltip>)})}

        {[150].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(150)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2238.99,1179.46 L2243.08,1179.87 L2297.65,1172.53 L2306.54,1193.61 L2305.03,1221.42 L2242.89,1218.62 L2238.99,1179.46" vector-effect="none"/>
            </Tooltip>)})}

        {[151].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(151)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2297.65,1172.53 L2318.12,1169.1 L2350.5,1161.41 L2376.46,1153.92 L2390.54,1148.62 L2421.74,1136.11 L2434.65,1209.73 L2377.87,1199.75 L2306.58,1193.64 L2297.65,1172.53" vector-effect="none"/>
            </Tooltip>)})}

        {[152].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(152)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2306.56,1193.66 L2377.87,1199.75 L2434.64,1209.73 L2436.5,1220.33 L2399.34,1225.64 L2305.03,1221.42 L2306.56,1193.66" vector-effect="none"/>
            </Tooltip>)})}

        {[153].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(153)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2428.9,1132.65 L2438.58,1127.95 L2508.57,1210.03 L2444.07,1219.25 L2428.9,1132.65" vector-effect="none"/>
            </Tooltip>)})}

        {[154].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(154)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2442.27,1233.34 L2464.9,1230.11 L2448.3,1350.5 L2426.33,1348.93 L2442.27,1233.34" vector-effect="none"/>
            </Tooltip>)})}

        {[155].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(155)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2426.33,1348.93 L2541.19,1357.11 L2557.99,1496.13 L2557.05,1508.72 L2406.84,1490.26 L2426.33,1348.93" vector-effect="none"/>
            </Tooltip>)})}

        {[156].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(156)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2464.9,1230.11 L2525.86,1221.4 L2541.19,1357.11 L2448.29,1350.5 L2464.9,1230.11" vector-effect="none"/>
            </Tooltip>)})}

        {[157].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(157)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2441.43,1105.44 L2442.6,1106.46 L2397.77,1127.42 L2358.81,1141.35 L2338.25,1146.33 L2334.19,1066.69 L2198.65,1071.07 L2193.07,1157.13 L2152.28,1151.25 L2135.99,1147.21 L2155.94,1019.86 L2105.43,1018.54 L2097.7,927.995 L2226.29,917.227 L2441.28,1105.26 L2441.43,1105.44" vector-effect="none"/>
            </Tooltip>)})}

        {[158].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(158)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2134.33,1515.4 L2195.41,1522.93 L2196.21,1532.87 L2163.65,1529.89 L2138.12,1556.09 L2134.33,1515.4" vector-effect="none"/>
            </Tooltip>)})}

        {[159].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(159)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2201.27,1523.68 L2262.21,1531.12 L2266.22,1578.35 L2247.19,1579.81 L2246.16,1562.62 L2204.99,1565.28 L2201.27,1523.68" vector-effect="none"/>
            </Tooltip>)})}

        {[160].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(160)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2204.99,1565.28 L2246.12,1562.65 L2247.08,1579.81 L2206.52,1582.72 L2204.99,1565.28" vector-effect="none"/>
            </Tooltip>)})}

        {[161].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(161)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2169.46,1595.68 L2201.76,1593.36 L2204.94,1628.52 L2196.81,1629.11 L2191.62,1624.77 L2184.44,1617.61 L2181.94,1614.39 L2180.05,1612.09 L2178.28,1609.77 L2172.38,1601.51 L2169.46,1595.68" vector-effect="none"/>
            </Tooltip>)})}

        {[162].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(162)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2207.49,1592.95 L2267.06,1588.79 L2270.05,1623.8 L2210.67,1628.1 L2207.49,1592.95" vector-effect="none"/>
            </Tooltip>)})}

        {[163].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(163)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2273.79,1532.53 L2309.27,1536.85 L2312.63,1575.32 L2312.16,1575.33 L2277.63,1577.62 L2273.79,1532.53" vector-effect="none"/>
            </Tooltip>)})}

        {[164].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(164)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2278.49,1587.68 L2310.15,1585.56 L2310.16,1585.56 L2313.51,1620.69 L2281.51,1622.98 L2278.49,1587.68" vector-effect="none"/>
            </Tooltip>)})}

        {[165].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(165)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2350.72,1542.06 L2386.35,1546.36 L2385.48,1577.26 L2351.08,1575.5 L2350.72,1542.06" vector-effect="none"/>
            </Tooltip>)})}

        {[166].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(166)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2433.25,1552.22 L2490.06,1559.32 L2488.09,1586.47 L2431.54,1579.91 L2433.25,1552.22" vector-effect="none"/>
            </Tooltip>)})}

        {[167].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(167)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2495.73,1559.82 L2544.84,1565.78 L2544.55,1570.76 L2543.06,1592.68 L2493.8,1587.18 L2495.73,1559.82" vector-effect="none"/>
            </Tooltip>)})}

        {[168].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(168)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2351.05,1585.65 L2385.16,1587.51 L2384.44,1615.51 L2351.28,1617.92 L2351.05,1585.65" vector-effect="none"/>
            </Tooltip>)})}

        {[169].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(169)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2430.74,1590 L2459.05,1593.37 L2455.67,1641.92 L2440.26,1636.98 L2427.28,1639.59 L2430.74,1590" vector-effect="none"/>
            </Tooltip>)})}

        {[170].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(170)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2459.05,1593.37 L2487.37,1596.74 L2484.21,1642.05 L2475.24,1639.8 L2464.91,1644.86 L2455.67,1641.92 L2459.05,1593.37" vector-effect="none"/>
            </Tooltip>)})}

        {[171].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(171)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2493.09,1597.52 L2518.06,1600.38 L2514.26,1652.55 L2508.68,1648.17 L2489.88,1643.45 L2493.09,1597.52" vector-effect="none"/>
            </Tooltip>)})}

        {[172].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(172)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2521.38,1600.77 L2542.09,1603.25 L2536.88,1670.32 L2517.41,1655.04 L2521.38,1600.77" vector-effect="none"/>
            </Tooltip>)})}

        {[173].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(173)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2211.13,1633.21 L2270.48,1628.91 L2273.39,1662.97 L2242.31,1665.22 L2211.81,1640.82 L2211.13,1633.21" vector-effect="none"/>
            </Tooltip>)})}

        {[174].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(174)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2281.93,1628.07 L2345.57,1623.47 L2345.72,1646.28 L2342.02,1646.3 L2286.66,1682.95 L2281.93,1628.07" vector-effect="none"/>
            </Tooltip>)})}

        {[175].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(175)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2351.32,1623.07 L2417.26,1618.27 L2415.58,1641.95 L2395.03,1646.08 L2351.44,1646.25 L2351.32,1623.07" vector-effect="none"/>
            </Tooltip>)})}

        {[176].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(176)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2145.26,1632.71 L2142.18,1597.67 L2157.35,1596.69 L2159.49,1600.86 L2162.06,1606.14 L2164.94,1610.22 L2170.38,1617.81 L2175.09,1623.54 L2181.52,1630.22 L2145.26,1632.71" vector-effect="none"/>
            </Tooltip>)})}

        {[177].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(177)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2091.2,1538.2 L2108.98,1537.69 L2110.62,1547.95 L2125.3,1546.9 L2126.14,1557.75 L2111.35,1557.82 L2112.04,1563.55 L2126.52,1562.86 L2126.7,1567.72 L2111.11,1568.79 L2111.47,1573.84 L2127.29,1573.57 L2128.54,1581.23 L2112.53,1580.76 L2113.28,1589.07 L2095.77,1590.69 L2091.2,1538.2" vector-effect="none"/>
            </Tooltip>)})}

        {[178].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(178)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2089.69,1521.15 L2088.38,1509.7 L2122.79,1513.91 L2123.29,1521.3 L2089.69,1521.15" vector-effect="none"/>
            </Tooltip>)})}

        {[179].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(179)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2080.89,1509.55 L2083.1,1533.35 L2061.03,1528.28 L2058.88,1504.68 L2080.89,1509.55" vector-effect="none"/>
            </Tooltip>)})}

        {[180].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(180)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2053.31,1503.43 L2054.11,1512.28 L2040.58,1511.51 L2039.57,1500.35 L2053.31,1503.43" vector-effect="none"/>
            </Tooltip>)})}

        {[181].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(181)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2034.86,1499.29 L2035.98,1511.61 L2035.12,1514.75 L2036.39,1514.77 L2054.43,1515.8 L2055.6,1528.6 L2014.15,1531.6 L2010.96,1496.51 L2020.92,1496.16 L2034.86,1499.29" vector-effect="none"/>
            </Tooltip>)})}

        {[182].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(182)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1979.87,1497.62 L2005.22,1496.72 L2008.25,1530.13 L1983.72,1531.91 L1979.87,1497.62" vector-effect="none"/>
            </Tooltip>)})}

        {[183].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(183)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1984.29,1537 L2008.7,1535.23 L2011.45,1565.29 L1987.65,1567.01 L1984.29,1537" vector-effect="none"/>
            </Tooltip>)})}

        {[184].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(184)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1986.52,1572.23 L2013.42,1570.29 L2016.09,1599.68 L2003.12,1600.63 L1989.93,1600.88 L1988.87,1595.61 L1986.52,1572.23" vector-effect="none"/>
            </Tooltip>)})}

        {[185].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(185)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2014.65,1536.65 L2056.04,1533.73 L2057.01,1542.75 L2015.49,1545.54 L2014.65,1536.65" vector-effect="none"/>
            </Tooltip>)})}

        {[186].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(186)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2025.09,1544.89 L2057.01,1542.62 L2058.76,1564.03 L2017.11,1567.01 L2015.3,1545.6 L2025.09,1544.89" vector-effect="none"/>
            </Tooltip>)})}

        {[187].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(187)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2061.52,1533.7 L2083.59,1538.76 L2085.7,1561.98 L2064.22,1563.55 L2061.52,1533.7" vector-effect="none"/>
            </Tooltip>)})}

        {[188].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(188)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2019.33,1571.92 L2057.52,1569.16 L2060.01,1596.51 L2048.55,1597.34 L2047.32,1583.73 L2020.58,1585.65 L2019.33,1571.92" vector-effect="none"/>
            </Tooltip>)})}

        {[189].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(189)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2214.64,1672.34 L2273.71,1668.16 L2276.34,1697.64 L2242.42,1709.32 L2217.12,1700.71 L2214.64,1672.34" vector-effect="none"/>
            </Tooltip>)})}

        {[190].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(190)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2097.24,1601.01 L2130.32,1598.68 L2133.53,1633.61 L2099.77,1636.24 L2096.65,1601.01 L2097.24,1601.01" vector-effect="none"/>
            </Tooltip>)})}

        {[191].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(191)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2100.55,1641.23 L2134.59,1638.74 L2137.78,1672.75 L2103.38,1675.33 L2100.55,1641.23" vector-effect="none"/>
            </Tooltip>)})}

        {[192].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(192)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2146.02,1637.91 L2175.72,1635.77 L2179.35,1674.93 L2208.93,1672.8 L2211.31,1701.18 L2149.29,1671.91 L2146.02,1637.91" vector-effect="none"/>
            </Tooltip>)})}

        {[193].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(193)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2175.73,1635.78 L2186.95,1634.96 L2206.93,1650.73 L2208.47,1667.64 L2178.83,1669.84 L2175.73,1635.78" vector-effect="none"/>
            </Tooltip>)})}

        {[194].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(194)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2063.23,1569.01 L2086.01,1567.37 L2088.52,1594.63 L2065.65,1596.27 L2063.23,1569.01" vector-effect="none"/>
            </Tooltip>)})}

        {[195].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(195)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2066.1,1600.55 L2069.84,1600.22 L2070.85,1610.82 L2067.05,1610.97 L2066.1,1600.55" vector-effect="none"/>
            </Tooltip>)})}

        {[196].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(196)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2069.97,1600.32 L2073.72,1600.01 L2074.61,1610.56 L2070.89,1610.79 L2069.97,1600.32" vector-effect="none"/>
            </Tooltip>)})}

        {[197].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(197)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2074.75,1610.5 L2073.72,1600.05 L2077.52,1599.75 L2078.44,1610.26 L2074.75,1610.5" vector-effect="none"/>
            </Tooltip>)})}

        {[198].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(198)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2077.56,1599.77 L2081.32,1599.5 L2082.26,1610.01 L2078.49,1610.3 L2077.56,1599.77" vector-effect="none"/>
            </Tooltip>)})}

        {[199].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(199)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2081.38,1599.48 L2085.18,1599.21 L2086.08,1609.74 L2082.3,1609.99 L2081.38,1599.48" vector-effect="none"/>
            </Tooltip>)})}

        {[200].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(200)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2085.22,1599.25 L2088.93,1598.97 L2089.9,1609.46 L2086.16,1609.72 L2085.22,1599.25" vector-effect="none"/>
            </Tooltip>)})}

        {[201].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(201)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2067.44,1611.18 L2078.46,1610.36 L2078.75,1613.7 L2067.38,1614.55 L2067.07,1611.2 L2067.44,1611.18" vector-effect="none"/>
            </Tooltip>)})}

        {[202].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(202)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2078.51,1610.36 L2089.92,1609.54 L2090.23,1612.8 L2078.79,1613.64 L2078.51,1610.36" vector-effect="none"/>
            </Tooltip>)})}

        {[203].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(203)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2089.9,1612.94 L2090.23,1612.94 L2090.58,1616.29 L2079.06,1617.09 L2078.81,1613.72 L2089.9,1612.94" vector-effect="none"/>
            </Tooltip>)})}

        {[204].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(204)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2067.54,1614.59 L2078.75,1613.72 L2079.08,1617.09 L2067.69,1617.87 L2067.38,1614.59 L2067.54,1614.59" vector-effect="none"/>
            </Tooltip>)})}

        {[205].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(205)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2067.69,1617.99 L2079.1,1617.13 L2079.41,1620.5 L2067.98,1621.32 L2067.69,1617.99" vector-effect="none"/>
            </Tooltip>)})}

        {[206].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(206)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2079.14,1617.15 L2090.53,1616.33 L2090.82,1619.68 L2079.41,1620.5 L2079.14,1617.15" vector-effect="none"/>
            </Tooltip>)})}

        {[207].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(207)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2067.99,1621.35 L2079.41,1620.55 L2079.74,1623.93 L2068.29,1624.77 L2067.99,1621.35" vector-effect="none"/>
            </Tooltip>)})}

        {[208].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(208)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2079.46,1620.54 L2090.86,1619.72 L2091.19,1623.07 L2079.75,1623.94 L2079.46,1620.54" vector-effect="none"/>
            </Tooltip>)})}

        {[209].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(209)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2091.17,1623.11 L2091.49,1626.49 L2080.05,1627.31 L2079.76,1623.95 L2091.17,1623.11" vector-effect="none"/>
            </Tooltip>)})}

        {[210].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(210)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2068.52,1624.79 L2079.71,1623.95 L2080.04,1627.3 L2068.58,1628.12 L2068.3,1624.78 L2068.52,1624.79" vector-effect="none"/>
            </Tooltip>)})}

        {[211].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(211)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2068.59,1628.19 L2072.41,1627.9 L2073.34,1638.42 L2069.57,1638.7 L2068.59,1628.19" vector-effect="none"/>
            </Tooltip>)})}

        {[212].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(212)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2073.38,1638.4 L2072.41,1627.89 L2076.23,1627.61 L2077.18,1638.15 L2073.38,1638.4" vector-effect="none"/>
            </Tooltip>)})}

        {[213].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(213)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2076.23,1627.61 L2080.04,1627.33 L2081.01,1637.9 L2077.2,1638.17 L2076.23,1627.61" vector-effect="none"/>
            </Tooltip>)})}

        {[214].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(214)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2080.12,1627.36 L2083.86,1627.07 L2084.79,1637.6 L2081,1637.86 L2080.12,1627.36" vector-effect="none"/>
            </Tooltip>)})}

        {[215].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(215)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2084.82,1637.57 L2083.91,1627.06 L2087.67,1626.78 L2088.63,1637.32 L2084.82,1637.57" vector-effect="none"/>
            </Tooltip>)})}

        {[216].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(216)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2087.71,1626.79 L2091.49,1626.53 L2092.45,1637.07 L2088.66,1637.34 L2087.71,1626.79" vector-effect="none"/>
            </Tooltip>)})}

        {[217].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(217)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2021.22,1585.68 L2032.04,1585.02 L2032.24,1588.33 L2020.85,1589.21 L2020.56,1585.72 L2021.22,1585.68" vector-effect="none"/>
            </Tooltip>)})}

        {[218].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(218)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2032.12,1585.08 L2035.81,1584.78 L2037,1598.32 L2033.27,1598.53 L2032.12,1585.08" vector-effect="none"/>
            </Tooltip>)})}

        {[219].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(219)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2036.31,1584.76 L2039.59,1584.49 L2040.6,1598.04 L2037.07,1598.28 L2035.87,1584.76 L2036.31,1584.76" vector-effect="none"/>
            </Tooltip>)})}

        {[220].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(220)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2039.65,1584.51 L2043.39,1584.24 L2044.62,1597.75 L2040.84,1598.1 L2039.65,1584.51" vector-effect="none"/>
            </Tooltip>)})}

        {[221].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(221)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2043.45,1584.24 L2047.31,1584.02 L2048.31,1597.56 L2044.66,1597.81 L2043.45,1584.24" vector-effect="none"/>
            </Tooltip>)})}

        {[222].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(222)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2020.87,1589.27 L2032.24,1588.45 L2032.59,1591.82 L2021.2,1592.64 L2020.87,1589.27" vector-effect="none"/>
            </Tooltip>)})}

        {[223].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(223)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2021.16,1592.68 L2032.55,1591.84 L2032.88,1595.22 L2021.49,1596.02 L2021.16,1592.68" vector-effect="none"/>
            </Tooltip>)})}

        {[224].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(224)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2021.59,1596.11 L2032.88,1595.31 L2033.21,1598.65 L2021.79,1599.43 L2021.59,1596.11" vector-effect="none"/>
            </Tooltip>)})}

        {[225].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(225)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1993.51,1605.8 L1997.33,1605.55 L1998.23,1615.57 L1994.49,1615.85 L1993.51,1605.8" vector-effect="none"/>
            </Tooltip>)})}

        {[226].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(226)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1997.37,1605.55 L2001.1,1605.3 L2002.05,1615.32 L1998.29,1615.65 L1997.37,1605.55" vector-effect="none"/>
            </Tooltip>)})}

        {[227].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(227)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2001.21,1605.3 L2004.92,1605.04 L2005.84,1615.07 L2002.11,1615.24 L2001.21,1605.3" vector-effect="none"/>
            </Tooltip>)})}

        {[228].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(228)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2005.02,1604.99 L2008.78,1604.75 L2009.7,1614.77 L2005.91,1615.01 L2005.02,1604.99" vector-effect="none"/>
            </Tooltip>)})}

        {[229].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(229)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2008.96,1604.73 L2012.6,1604.46 L2013.5,1614.54 L2009.72,1614.81 L2008.96,1604.73" vector-effect="none"/>
            </Tooltip>)})}

        {[230].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(230)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2012.68,1604.44 L2016.42,1604.17 L2017.3,1614.19 L2013.56,1614.56 L2012.68,1604.44" vector-effect="none"/>
            </Tooltip>)})}

        {[231].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(231)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1994.45,1615.89 L2005.87,1615.08 L2006.19,1618.44 L1994.76,1619.29 L1994.45,1615.89" vector-effect="none"/>
            </Tooltip>)})}

        {[232].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(232)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1994.78,1619.33 L2006.23,1618.51 L2006.43,1621.89 L1995.08,1622.67 L1994.78,1619.33" vector-effect="none"/>
            </Tooltip>)})}

        {[233].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(233)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1995.08,1622.69 L2006.52,1621.87 L2006.85,1626.04 L1995.49,1626.86 L1995.08,1622.69" vector-effect="none"/>
            </Tooltip>)})}

        {[234].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(234)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1995.45,1626.94 L2006.91,1626.1 L2007.17,1629.67 L1995.82,1630.53 L1995.45,1626.94" vector-effect="none"/>
            </Tooltip>)})}

        {[235].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(235)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1995.78,1630.56 L2007.19,1629.69 L2007.5,1633.24 L1996.09,1634.13 L1995.78,1630.56" vector-effect="none"/>
            </Tooltip>)})}

        {[236].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(236)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1996.11,1634.13 L1999.87,1633.88 L2000.73,1643.67 L1996.99,1643.88 L1996.11,1634.13" vector-effect="none"/>
            </Tooltip>)})}

        {[237].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(237)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2000.01,1633.86 L2003.73,1633.61 L2004.63,1643.36 L2000.83,1643.61 L2000.01,1633.86" vector-effect="none"/>
            </Tooltip>)})}

        {[238].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(238)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2003.75,1633.59 L2007.54,1633.31 L2008.43,1643.1 L2004.63,1643.38 L2003.75,1633.59" vector-effect="none"/>
            </Tooltip>)})}

        {[239].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(239)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2007.65,1633.26 L2011.36,1633.08 L2012.24,1642.89 L2008.47,1643.1 L2007.65,1633.26" vector-effect="none"/>
            </Tooltip>)})}

        {[240].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(240)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2011.59,1633.04 L2015.18,1632.73 L2016.08,1642.56 L2012.24,1642.81 L2011.36,1633.06 L2011.59,1633.04" vector-effect="none"/>
            </Tooltip>)})}

        {[241].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(241)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2015.18,1632.73 L2018.96,1632.46 L2019.9,1642.38 L2016.06,1642.56 L2015.18,1632.73" vector-effect="none"/>
            </Tooltip>)})}

        {[242].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(242)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2007.24,1629.69 L2018.65,1628.97 L2018.96,1632.42 L2007.63,1633.2 L2007.24,1629.69" vector-effect="none"/>
            </Tooltip>)})}

        {[243].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(243)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2006.97,1626.06 L2018.28,1625.26 L2018.59,1628.85 L2007.24,1629.61 L2006.97,1626.06" vector-effect="none"/>
            </Tooltip>)})}

        {[244].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(244)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2006.64,1622.43 L2017.97,1621.63 L2018.3,1625.18 L2006.91,1625.94 L2006.64,1622.43" vector-effect="none"/>
            </Tooltip>)})}

        {[245].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(245)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2006.21,1618.49 L2017.6,1617.69 L2017.99,1621.61 L2006.58,1622.41 L2006.21,1618.49" vector-effect="none"/>
            </Tooltip>)})}

        {[246].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(246)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2005.89,1615.07 L2017.32,1614.27 L2017.64,1617.63 L2006.21,1618.47 L2005.89,1615.07" vector-effect="none"/>
            </Tooltip>)})}

        {[247].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(247)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2022.17,1603.74 L2033.62,1602.92 L2033.91,1606.17 L2022.47,1606.97 L2022.17,1603.74" vector-effect="none"/>
            </Tooltip>)})}

        {[248].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(248)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2022.45,1607.01 L2033.91,1606.19 L2034.2,1609.45 L2022.74,1610.28 L2022.45,1607.01" vector-effect="none"/>
            </Tooltip>)})}

        {[249].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(249)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2022.75,1610.31 L2034.2,1609.47 L2034.49,1612.75 L2023.03,1613.58 L2022.75,1610.31" vector-effect="none"/>
            </Tooltip>)})}

        {[250].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(250)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2023.06,1613.59 L2034.5,1612.77 L2034.8,1616 L2023.36,1616.87 L2023.06,1613.59" vector-effect="none"/>
            </Tooltip>)})}

        {[251].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(251)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2023.36,1616.86 L2034.81,1616.04 L2035.09,1619.33 L2023.65,1620.11 L2023.36,1616.86" vector-effect="none"/>
            </Tooltip>)})}

        {[252].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(252)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2023.68,1620.16 L2035.09,1619.34 L2035.4,1622.58 L2023.95,1623.4 L2023.68,1620.16" vector-effect="none"/>
            </Tooltip>)})}

        {[253].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(253)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2023.95,1623.43 L2035.42,1622.61 L2035.68,1625.88 L2024.26,1626.7 L2023.95,1623.43" vector-effect="none"/>
            </Tooltip>)})}

        {[254].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(254)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2024.27,1626.74 L2035.7,1625.9 L2035.93,1629.14 L2024.57,1630 L2024.27,1626.74" vector-effect="none"/>
            </Tooltip>)})}

        {[255].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(255)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2033.65,1602.96 L2037.41,1602.67 L2038.58,1615.7 L2034.78,1615.97 L2033.65,1602.96" vector-effect="none"/>
            </Tooltip>)})}

        {[256].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(256)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2037.82,1602.67 L2041.27,1602.42 L2042.46,1615.46 L2038.66,1615.7 L2037.47,1602.63 L2037.82,1602.67" vector-effect="none"/>
            </Tooltip>)})}

        {[257].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(257)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2041.29,1602.38 L2045.11,1602.12 L2046.26,1615.17 L2042.46,1615.54 L2041.29,1602.38" vector-effect="none"/>
            </Tooltip>)})}

        {[258].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(258)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2045.13,1602.1 L2048.9,1601.83 L2050.07,1614.95 L2046.26,1615.25 L2045.13,1602.1" vector-effect="none"/>
            </Tooltip>)})}

        {[259].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(259)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2048.94,1601.83 L2060.32,1601.03 L2060.58,1604.23 L2049.23,1605.05 L2048.94,1601.83" vector-effect="none"/>
            </Tooltip>)})}

        {[260].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(260)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2049.21,1605.13 L2060.62,1604.31 L2060.95,1607.45 L2049.52,1608.38 L2049.21,1605.13" vector-effect="none"/>
            </Tooltip>)})}

        {[261].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(261)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2049.52,1608.46 L2060.99,1607.56 L2061.2,1610.82 L2049.77,1611.58 L2049.52,1608.46" vector-effect="none"/>
            </Tooltip>)})}

        {[262].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(262)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2049.85,1611.68 L2061.26,1610.86 L2061.51,1614.08 L2050.18,1614.9 L2049.85,1611.68" vector-effect="none"/>
            </Tooltip>)})}

        {[263].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(263)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2050.15,1615 L2061.56,1614.13 L2061.83,1617.38 L2050.43,1618.2 L2050.15,1615" vector-effect="none"/>
            </Tooltip>)})}

        {[264].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(264)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2050.39,1618.28 L2061.8,1617.4 L2062.13,1620.64 L2050.72,1621.42 L2050.39,1618.28" vector-effect="none"/>
            </Tooltip>)})}

        {[265].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(265)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2050.72,1621.5 L2062.09,1620.68 L2062.38,1623.9 L2051.01,1624.71 L2050.72,1621.5" vector-effect="none"/>
            </Tooltip>)})}

        {[266].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(266)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2051.07,1624.83 L2062.44,1623.99 L2062.71,1627.19 L2051.3,1628.05 L2051.07,1624.83" vector-effect="none"/>
            </Tooltip>)})}

        {[267].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(267)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2034.83,1616.04 L2038.6,1615.76 L2039.8,1628.89 L2036.01,1629.15 L2034.83,1616.04" vector-effect="none"/>
            </Tooltip>)})}

        {[268].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(268)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2039.84,1628.86 L2038.66,1615.77 L2042.43,1615.51 L2043.62,1628.58 L2039.84,1628.86" vector-effect="none"/>
            </Tooltip>)})}

        {[269].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(269)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2042.47,1615.53 L2046.27,1615.2 L2047.46,1628.32 L2043.64,1628.61 L2042.47,1615.53" vector-effect="none"/>
            </Tooltip>)})}

        {[270].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(270)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2047.48,1628.29 L2046.3,1615.26 L2050.06,1614.95 L2051.26,1628.04 L2047.48,1628.29" vector-effect="none"/>
            </Tooltip>)})}

        {[271].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(271)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1997.43,1649.11 L2001.23,1648.84 L2002.15,1659.05 L1998.38,1659.25 L1997.43,1649.11" vector-effect="none"/>
            </Tooltip>)})}

        {[272].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(272)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2001.26,1648.82 L2005.07,1648.55 L2006,1658.71 L2002.19,1659.03 L2001.26,1648.82" vector-effect="none"/>
            </Tooltip>)})}

        {[273].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(273)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2006.04,1658.71 L2005.12,1648.57 L2008.84,1648.3 L2009.82,1658.44 L2006.04,1658.71" vector-effect="none"/>
            </Tooltip>)})}

        {[274].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(274)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2008.91,1648.25 L2012.73,1648 L2013.64,1658.17 L2009.85,1658.45 L2008.91,1648.25" vector-effect="none"/>
            </Tooltip>)})}

        {[275].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(275)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2013.65,1658.15 L2012.76,1647.97 L2016.53,1647.73 L2017.47,1657.89 L2013.65,1658.15" vector-effect="none"/>
            </Tooltip>)})}

        {[276].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(276)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2016.62,1647.66 L2020.35,1647.44 L2021.25,1657.56 L2017.52,1657.87 L2016.62,1647.66" vector-effect="none"/>
            </Tooltip>)})}

        {[277].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(277)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1998.37,1659.34 L2009.82,1658.5 L2010.12,1661.83 L1998.68,1662.71 L1998.37,1659.34" vector-effect="none"/>
            </Tooltip>)})}

        {[278].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(278)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2009.9,1658.5 L2021.28,1657.64 L2021.58,1661.03 L2010.19,1661.89 L2009.9,1658.5" vector-effect="none"/>
            </Tooltip>)})}

        {[279].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(279)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1998.71,1662.71 L2010.13,1661.86 L2010.45,1665.26 L1999,1666.06 L1998.71,1662.71" vector-effect="none"/>
            </Tooltip>)})}

        {[280].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(280)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1999.02,1666.11 L2010.45,1665.29 L2010.75,1668.66 L1999.29,1669.5 L1999.02,1666.11" vector-effect="none"/>
            </Tooltip>)})}

        {[281].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(281)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1999.32,1669.52 L2010.78,1668.68 L2011.04,1672.07 L1999.63,1672.88 L1999.32,1669.52" vector-effect="none"/>
            </Tooltip>)})}

        {[282].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(282)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1999.63,1672.9 L2003.44,1672.64 L2004.35,1682.83 L2000.56,1683.13 L1999.63,1672.9" vector-effect="none"/>
            </Tooltip>)})}

        {[283].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(283)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2004.36,1682.84 L2003.44,1672.63 L2007.22,1672.35 L2008.17,1682.55 L2004.36,1682.84" vector-effect="none"/>
            </Tooltip>)})}

        {[284].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(284)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2007.28,1672.37 L2011.07,1672.07 L2011.98,1682.27 L2008.2,1682.57 L2007.28,1672.37" vector-effect="none"/>
            </Tooltip>)})}

        {[285].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(285)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2012,1682.27 L2011.11,1672.07 L2014.88,1671.81 L2015.8,1681.98 L2012,1682.27" vector-effect="none"/>
            </Tooltip>)})}

        {[286].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(286)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2014.93,1671.81 L2018.68,1671.53 L2019.61,1681.76 L2015.86,1682 L2014.93,1671.81" vector-effect="none"/>
            </Tooltip>)})}

        {[287].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(287)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2019.69,1681.74 L2018.69,1671.56 L2022.51,1671.25 L2023.43,1681.39 L2019.69,1681.74" vector-effect="none"/>
            </Tooltip>)})}

        {[288].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(288)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2022.22,1667.84 L2022.52,1671.24 L2011.08,1672.03 L2010.76,1668.67 L2022.22,1667.84" vector-effect="none"/>
            </Tooltip>)})}

        {[289].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(289)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2021.89,1664.42 L2022.22,1667.83 L2010.75,1668.66 L2010.45,1665.25 L2021.89,1664.42" vector-effect="none"/>
            </Tooltip>)})}

        {[290].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(290)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2021.58,1661.05 L2021.91,1664.42 L2010.44,1665.23 L2010.14,1661.87 L2021.58,1661.05" vector-effect="none"/>
            </Tooltip>)})}

        {[291].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(291)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2025.16,1635.06 L2036.48,1634.28 L2036.74,1637.66 L2025.35,1638.5 L2025,1635.12 L2025.16,1635.06" vector-effect="none"/>
            </Tooltip>)})}

        {[292].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(292)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2036.5,1634.26 L2040.29,1634.05 L2041.22,1644.19 L2037.44,1644.48 L2036.5,1634.26" vector-effect="none"/>
            </Tooltip>)})}

        {[293].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(293)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2025.45,1638.52 L2036.76,1637.72 L2037.03,1641.05 L2025.7,1641.93 L2025.35,1638.57 L2025.45,1638.52" vector-effect="none"/>
            </Tooltip>)})}

        {[294].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(294)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2025.92,1641.9 L2037.06,1641.08 L2037.39,1644.48 L2025.98,1645.27 L2025.63,1641.91 L2025.92,1641.9" vector-effect="none"/>
            </Tooltip>)})}

        {[295].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(295)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2025.93,1645.32 L2037.41,1644.5 L2037.69,1647.9 L2026.26,1648.68 L2025.93,1645.32" vector-effect="none"/>
            </Tooltip>)})}

        {[296].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(296)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2026.25,1648.75 L2037.7,1647.9 L2038.01,1651.3 L2026.55,1652.11 L2026.25,1648.75" vector-effect="none"/>
            </Tooltip>)})}

        {[297].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(297)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2026.62,1652.13 L2038.01,1651.3 L2038.31,1654.67 L2026.87,1655.49 L2026.62,1652.13" vector-effect="none"/>
            </Tooltip>)})}

        {[298].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(298)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2037.49,1644.55 L2041.23,1644.28 L2042.15,1654.42 L2038.35,1654.65 L2037.49,1644.55" vector-effect="none"/>
            </Tooltip>)})}

        {[299].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(299)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2041.19,1644.24 L2045.02,1643.95 L2045.95,1654.11 L2042.11,1654.4 L2041.19,1644.24" vector-effect="none"/>
            </Tooltip>)})}

        {[300].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(300)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2040.28,1634.02 L2044.08,1633.73 L2045,1643.95 L2041.23,1644.28 L2040.28,1634.02" vector-effect="none"/>
            </Tooltip>)})}

        {[301].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(301)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2044.22,1633.73 L2047.9,1633.46 L2048.8,1643.65 L2045.02,1643.89 L2044.22,1633.73" vector-effect="none"/>
            </Tooltip>)})}

        {[302].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(302)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2045.06,1643.95 L2048.87,1643.65 L2049.77,1653.86 L2045.92,1654.14 L2045.06,1643.95" vector-effect="none"/>
            </Tooltip>)})}

        {[303].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(303)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2049.8,1653.83 L2048.86,1643.66 L2052.63,1643.38 L2053.61,1653.57 L2049.8,1653.83" vector-effect="none"/>
            </Tooltip>)})}

        {[304].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(304)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2048.87,1643.62 L2047.94,1633.44 L2051.72,1633.18 L2052.7,1643.36 L2048.87,1643.62" vector-effect="none"/>
            </Tooltip>)})}

        {[305].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(305)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2051.75,1633.18 L2063.2,1632.33 L2063.5,1635.71 L2052.06,1636.56 L2051.75,1633.18" vector-effect="none"/>
            </Tooltip>)})}

        {[306].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(306)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2063.5,1635.77 L2063.81,1639.14 L2052.38,1639.94 L2052.05,1636.57 L2063.5,1635.77" vector-effect="none"/>
            </Tooltip>)})}

        {[307].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(307)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2063.81,1639.15 L2064.13,1642.56 L2052.68,1643.37 L2052.39,1639.97 L2063.81,1639.15" vector-effect="none"/>
            </Tooltip>)})}

        {[308].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(308)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2052.68,1643.4 L2064.1,1642.55 L2064.39,1645.95 L2052.98,1646.79 L2052.68,1643.4" vector-effect="none"/>
            </Tooltip>)})}

        {[309].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(309)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2064.45,1645.95 L2064.75,1649.33 L2053.3,1650.18 L2053.01,1646.78 L2064.45,1645.95" vector-effect="none"/>
            </Tooltip>)})}

        {[310].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(310)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2064.74,1649.39 L2065.04,1652.77 L2053.57,1653.58 L2053.31,1650.2 L2064.74,1649.39" vector-effect="none"/>
            </Tooltip>)})}

        {[311].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(311)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2027.34,1660.62 L2038.78,1659.79 L2039.09,1663.19 L2027.63,1664.01 L2027.34,1660.62" vector-effect="none"/>
            </Tooltip>)})}

        {[312].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(312)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2027.64,1664.06 L2039.07,1663.23 L2039.38,1666.6 L2027.96,1667.41 L2027.64,1664.06" vector-effect="none"/>
            </Tooltip>)})}

        {[313].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(313)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2039.35,1666.65 L2039.69,1670.02 L2028.26,1670.82 L2027.95,1667.42 L2039.35,1666.65" vector-effect="none"/>
            </Tooltip>)})}

        {[314].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(314)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2028.26,1670.85 L2039.72,1670.02 L2040.03,1673.41 L2028.58,1674.24 L2028.26,1670.85" vector-effect="none"/>
            </Tooltip>)})}

        {[315].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(315)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2028.61,1674.24 L2040.03,1673.42 L2040.33,1676.81 L2028.85,1677.61 L2028.61,1674.24" vector-effect="none"/>
            </Tooltip>)})}

        {[316].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(316)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2028.88,1677.66 L2040.33,1676.82 L2040.64,1680.21 L2029.2,1681.05 L2028.88,1677.66" vector-effect="none"/>
            </Tooltip>)})}

        {[317].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(317)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2040.66,1680.21 L2039.73,1670.03 L2043.47,1669.75 L2044.46,1679.94 L2040.66,1680.21" vector-effect="none"/>
            </Tooltip>)})}

        {[318].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(318)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2039.72,1669.98 L2038.77,1659.82 L2042.6,1659.52 L2043.55,1669.71 L2039.72,1669.98" vector-effect="none"/>
            </Tooltip>)})}

        {[319].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(319)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2042.62,1659.55 L2046.44,1659.25 L2047.35,1669.48 L2043.55,1669.72 L2042.62,1659.55" vector-effect="none"/>
            </Tooltip>)})}

        {[320].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(320)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2043.55,1669.75 L2047.36,1669.47 L2048.27,1679.68 L2044.47,1679.94 L2043.55,1669.75" vector-effect="none"/>
            </Tooltip>)})}

        {[321].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(321)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2048.3,1679.65 L2047.36,1669.46 L2051.17,1669.18 L2052.13,1679.37 L2048.3,1679.65" vector-effect="none"/>
            </Tooltip>)})}

        {[322].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(322)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2047.35,1669.43 L2046.42,1659.24 L2050.25,1659 L2051.17,1669.16 L2047.35,1669.43" vector-effect="none"/>
            </Tooltip>)})}

        {[323].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(323)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2050.26,1658.99 L2054.05,1658.71 L2054.99,1668.89 L2051.16,1669.17 L2050.26,1658.99" vector-effect="none"/>
            </Tooltip>)})}

        {[324].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(324)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2051.21,1669.2 L2054.98,1668.93 L2055.92,1679.11 L2052.1,1679.38 L2051.21,1669.2" vector-effect="none"/>
            </Tooltip>)})}

        {[325].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(325)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2055.64,1675.72 L2067.06,1674.88 L2067.39,1678.3 L2055.92,1679.11 L2055.64,1675.72" vector-effect="none"/>
            </Tooltip>)})}

        {[326].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(326)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2055.63,1675.72 L2055.32,1672.3 L2066.76,1671.5 L2067.08,1674.87 L2055.63,1675.72" vector-effect="none"/>
            </Tooltip>)})}

        {[327].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(327)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2066.76,1671.45 L2055.3,1672.3 L2054.99,1668.92 L2066.45,1668.08 L2066.76,1671.45" vector-effect="none"/>
            </Tooltip>)})}

        {[328].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(328)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2055,1668.89 L2054.72,1665.53 L2066.16,1664.69 L2066.42,1668.05 L2055,1668.89" vector-effect="none"/>
            </Tooltip>)})}

        {[329].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(329)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2065.83,1661.28 L2066.13,1664.64 L2054.72,1665.5 L2054.44,1662.08 L2065.83,1661.28" vector-effect="none"/>
            </Tooltip>)})}

        {[330].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(330)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2054.84,1658.65 L2065.53,1657.88 L2065.85,1661.26 L2054.37,1662.09 L2054.06,1658.71 L2054.84,1658.65" vector-effect="none"/>
            </Tooltip>)})}

        {[331].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(331)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2070.02,1643.83 L2073.83,1643.56 L2074.77,1653.78 L2070.93,1654.04 L2070.02,1643.83" vector-effect="none"/>
            </Tooltip>)})}

        {[332].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(332)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2073.84,1643.57 L2077.66,1643.3 L2078.55,1653.49 L2074.77,1653.77 L2073.84,1643.57" vector-effect="none"/>
            </Tooltip>)})}

        {[333].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(333)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2077.66,1643.29 L2081.47,1643.01 L2082.4,1653.22 L2078.58,1653.49 L2077.66,1643.29" vector-effect="none"/>
            </Tooltip>)})}

        {[334].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(334)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2082.41,1653.22 L2081.47,1643.01 L2085.29,1642.73 L2086.22,1652.94 L2082.41,1653.22" vector-effect="none"/>
            </Tooltip>)})}

        {[335].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(335)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2085.3,1642.73 L2089.11,1642.46 L2090.04,1652.67 L2086.22,1652.94 L2085.3,1642.73" vector-effect="none"/>
            </Tooltip>)})}

        {[336].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(336)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2090.04,1652.66 L2089.12,1642.46 L2092.93,1642.18 L2093.86,1652.39 L2090.04,1652.66" vector-effect="none"/>
            </Tooltip>)})}

        {[337].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(337)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2070.95,1654.06 L2082.39,1653.25 L2082.69,1656.66 L2071.28,1657.43 L2070.95,1654.06" vector-effect="none"/>
            </Tooltip>)})}

        {[338].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(338)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2071.27,1657.49 L2082.69,1656.63 L2083,1659.99 L2071.57,1660.86 L2071.27,1657.49" vector-effect="none"/>
            </Tooltip>)})}

        {[339].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(339)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2071.57,1660.86 L2083.02,1660.04 L2083.3,1663.42 L2071.85,1664.24 L2071.57,1660.86" vector-effect="none"/>
            </Tooltip>)})}

        {[340].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(340)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2071.9,1664.28 L2083.33,1663.46 L2083.64,1666.86 L2072.21,1667.66 L2071.9,1664.28" vector-effect="none"/>
            </Tooltip>)})}

        {[341].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(341)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2072.17,1667.69 L2075.98,1667.41 L2076.91,1677.58 L2073.11,1677.85 L2072.17,1667.69" vector-effect="none"/>
            </Tooltip>)})}

        {[342].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(342)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2076.97,1677.58 L2076,1667.4 L2079.81,1667.13 L2080.74,1677.32 L2076.97,1677.58" vector-effect="none"/>
            </Tooltip>)})}

        {[343].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(343)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2079.83,1667.13 L2083.64,1666.87 L2084.56,1677.05 L2080.74,1677.32 L2079.83,1667.13" vector-effect="none"/>
            </Tooltip>)})}

        {[344].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(344)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2084.59,1677.04 L2083.63,1666.84 L2087.45,1666.57 L2088.39,1676.76 L2084.59,1677.04" vector-effect="none"/>
            </Tooltip>)})}

        {[345].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(345)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2087.47,1666.56 L2091.28,1666.29 L2092.18,1676.49 L2088.39,1676.78 L2087.47,1666.56" vector-effect="none"/>
            </Tooltip>)})}

        {[346].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(346)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2092.21,1676.49 L2091.28,1666.29 L2095.09,1666.02 L2096.03,1676.21 L2092.21,1676.49" vector-effect="none"/>
            </Tooltip>)})}

        {[347].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(347)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2083.65,1666.83 L2083.34,1663.44 L2094.78,1662.62 L2095.09,1666 L2083.65,1666.83" vector-effect="none"/>
            </Tooltip>)})}

        {[348].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(348)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2083.33,1663.41 L2083.03,1660.03 L2094.47,1659.2 L2094.79,1662.6 L2083.33,1663.41" vector-effect="none"/>
            </Tooltip>)})}

        {[349].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(349)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2083.02,1660.01 L2082.72,1656.63 L2094.16,1655.8 L2094.48,1659.19 L2083.02,1660.01" vector-effect="none"/>
            </Tooltip>)})}

        {[350].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(350)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2094.17,1655.79 L2082.71,1656.62 L2082.42,1653.22 L2093.87,1652.4 L2094.17,1655.79" vector-effect="none"/>
            </Tooltip>)})}

        {[351].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(351)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2001.04,1688.25 L2023.95,1686.58 L2025.79,1707 L2002.86,1708.66 L2001.04,1688.25" vector-effect="none"/>
            </Tooltip>)})}

        {[352].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(352)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2003.35,1713.74 L2014.78,1712.93 L2015.08,1716.33 L2003.62,1717.23 L2003.35,1713.74" vector-effect="none"/>
            </Tooltip>)})}

        {[353].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(353)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2029.66,1686.17 L2041.1,1685.35 L2041.4,1688.73 L2029.95,1689.56 L2029.66,1686.17" vector-effect="none"/>
            </Tooltip>)})}

        {[354].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(354)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2029.97,1689.6 L2041.4,1688.77 L2041.75,1692.11 L2030.26,1692.96 L2029.97,1689.6" vector-effect="none"/>
            </Tooltip>)})}

        {[355].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(355)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2030.27,1692.99 L2041.73,1692.17 L2042.04,1695.54 L2030.6,1696.36 L2030.27,1692.99" vector-effect="none"/>
            </Tooltip>)})}

        {[356].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(356)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2030.58,1696.39 L2042.07,1695.54 L2042.34,1698.95 L2030.87,1699.76 L2030.58,1696.39" vector-effect="none"/>
            </Tooltip>)})}

        {[357].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(357)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2030.9,1699.8 L2042.36,1698.97 L2042.64,1702.34 L2031.2,1703.19 L2030.9,1699.8" vector-effect="none"/>
            </Tooltip>)})}

        {[358].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(358)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2031.2,1703.18 L2042.67,1702.38 L2042.96,1705.75 L2031.54,1706.64 L2031.2,1703.18" vector-effect="none"/>
            </Tooltip>)})}

        {[359].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(359)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2042.99,1705.75 L2042.06,1695.53 L2045.85,1695.27 L2046.78,1705.47 L2042.99,1705.75" vector-effect="none"/>
            </Tooltip>)})}

        {[360].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(360)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2045.86,1695.27 L2049.65,1695.01 L2050.59,1705.18 L2046.77,1705.45 L2045.86,1695.27" vector-effect="none"/>
            </Tooltip>)})}

        {[361].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(361)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2050.61,1705.18 L2049.68,1695 L2053.46,1694.68 L2054.44,1704.9 L2050.61,1705.18" vector-effect="none"/>
            </Tooltip>)})}

        {[362].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(362)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2053.54,1694.72 L2057.31,1694.45 L2058.23,1704.63 L2054.43,1704.93 L2053.54,1694.72" vector-effect="none"/>
            </Tooltip>)})}

        {[363].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(363)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2058.26,1704.65 L2057.97,1701.21 L2069.39,1700.42 L2069.71,1703.81 L2058.26,1704.65" vector-effect="none"/>
            </Tooltip>)})}

        {[364].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(364)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2057.96,1701.24 L2057.66,1697.85 L2069.06,1697.01 L2069.37,1700.4 L2057.96,1701.24" vector-effect="none"/>
            </Tooltip>)})}

        {[365].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(365)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2069.06,1696.96 L2057.64,1697.83 L2057.33,1694.41 L2068.74,1693.64 L2069.06,1696.96" vector-effect="none"/>
            </Tooltip>)})}

        {[366].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(366)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2068.77,1693.6 L2057.31,1694.43 L2057,1691.02 L2068.44,1690.21 L2068.77,1693.6" vector-effect="none"/>
            </Tooltip>)})}

        {[367].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(367)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2056.7,1687.65 L2068.17,1686.86 L2068.48,1690.2 L2057.01,1691.03 L2056.7,1687.65" vector-effect="none"/>
            </Tooltip>)})}

        {[368].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(368)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2067.83,1683.39 L2068.13,1686.83 L2056.69,1687.6 L2056.37,1684.24 L2067.83,1683.39" vector-effect="none"/>
            </Tooltip>)})}

        {[369].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(369)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2052.78,1684.48 L2056.4,1684.25 L2057.29,1694.45 L2053.52,1694.73 L2052.6,1684.52 L2052.78,1684.48" vector-effect="none"/>
            </Tooltip>)})}

        {[370].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(370)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2048.76,1684.78 L2052.56,1684.54 L2053.48,1694.71 L2049.69,1695.01 L2048.76,1684.78" vector-effect="none"/>
            </Tooltip>)})}

        {[371].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(371)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2044.94,1685.06 L2048.72,1684.81 L2049.65,1694.97 L2045.87,1695.23 L2044.94,1685.06" vector-effect="none"/>
            </Tooltip>)})}

        {[372].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(372)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2045.85,1695.22 L2042.03,1695.53 L2041.14,1685.36 L2044.9,1685.05 L2045.85,1695.22" vector-effect="none"/>
            </Tooltip>)})}

        {[373].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(373)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2073.57,1683.06 L2111.72,1680.29 L2113.61,1700.57 L2075.51,1703.43 L2073.57,1683.06" vector-effect="none"/>
            </Tooltip>)})}

        {[374].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(374)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M191.303,1623.67 L441.807,1623.3 L427.767,1703.11 L435.156,1740.79 L212.363,1755.57 L201.648,1760.01 L200.54,1759.27 L189.086,1623.3 L191.303,1623.67" vector-effect="none"/>
            </Tooltip>)})}

        {[375].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(375)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M433.309,1739.31 L441.622,1785.31 L447.303,1820.51 L457.971,1854.87 L447.303,1890.48 L432.062,1925.95 L428.875,1937.17 L421.393,1973.19 L420.562,1991.62 L400.888,1998.27 L393.821,1998.13 L385.231,2003.81 L373.038,2007.69 L350.593,1998.27 L302.93,1968.2 L239.196,1890.06 L204.973,1830.9 L192.088,1761.76 L212.594,1754.97 L433.309,1739.31" vector-effect="none"/>
            </Tooltip>)})}

        {[376].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(376)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M407.573,2023.28 L433.24,2021.3 L437.5,2025.46 L441.241,2036.37 L443.527,2056.95 L441.553,2058.61 L436.981,2059.23 L432.928,2056.43 L426.797,2054.14 L409.651,2041.78 L407.573,2023.28" vector-effect="none"/>
            </Tooltip>)})}

        {[377].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(377)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2452.31,1121.45 L2471.84,1112.05 L2567.89,1204.33 L2526.63,1208.61 L2452.31,1121.45" vector-effect="none"/>
            </Tooltip>)})}

        {[378].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(378)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2567.91,1204.33 L2471.79,1112.09 L2491.3,1102.68 L2603.66,1200.64 L2567.91,1204.33" vector-effect="none"/>
            </Tooltip>)})}

        {[379].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(379)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2533.41,1218.21 L2614.05,1209.9 L2724.25,1305.81 L2739.12,1328.99 L2736.05,1392.63 L2717.39,1457.58 L2718.9,1476.75 L2745.29,1508.65 L2736.51,1533.54 L2564.43,1512.5 L2565.73,1496.13 L2533.41,1218.21" vector-effect="none"/>
            </Tooltip>)})}

        {[380].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(380)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2724.39,1305.9 L2806.94,1377.87 L2735.88,1435.48 L2726.38,1426.19 L2736.07,1392.47 L2739.12,1328.99 L2724.39,1305.9" vector-effect="none"/>
            </Tooltip>)})}

        {[381].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(381)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2806.93,1377.87 L2838.95,1405.78 L2765.96,1464.96 L2735.88,1435.48 L2806.93,1377.87" vector-effect="none"/>
            </Tooltip>)})}

        {[382].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(382)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2765.96,1464.96 L2838.95,1405.78 L2870.07,1432.91 L2795.2,1493.62 L2765.96,1464.96" vector-effect="none"/>
            </Tooltip>)})}

        {[383].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(383)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2795.2,1493.62 L2870.07,1432.91 L2900.37,1459.33 L2823.67,1521.51 L2795.2,1493.62" vector-effect="none"/>
            </Tooltip>)})}

        {[384].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(384)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2823.67,1521.51 L2900.37,1459.33 L2929.91,1485.08 L2851.42,1548.71 L2823.67,1521.51" vector-effect="none"/>
            </Tooltip>)})}

        {[385].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(385)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2851.42,1548.71 L2929.91,1485.08 L2965.96,1516.51 L2877.42,1564.04 L2861.52,1558.62 L2851.42,1548.71" vector-effect="none"/>
            </Tooltip>)})}

        {[386].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(386)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2877.44,1563.99 L2965.96,1516.51 L3010.15,1556.64 L2947.66,1590.18 L2877.44,1563.99" vector-effect="none"/>
            </Tooltip>)})}

        {[387].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(387)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2947.68,1590.16 L3010.14,1556.64 L3106.08,1643.88 L3111.58,1649.98 L3106.6,1648.49 L3083.91,1641.64 L3020.68,1617.74 L2947.68,1590.16" vector-effect="none"/>
            </Tooltip>)})}

        {[388].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(388)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2736.5,1533.56 L2745.29,1508.63 L2718.96,1476.67 L2717.43,1457.55 L2726.39,1426.42 L2861.49,1558.61 L2859.37,1557.92 L2840.56,1552.02 L2826.88,1547.68 L2783.37,1539.86 L2766.41,1537.52 L2736.5,1533.56" vector-effect="none"/>
            </Tooltip>)})}

        {[389].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(389)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2552.51,1566.94 L2718.96,1587.58 L2690.79,1698 L2637.44,1675.87 L2595.73,1666.72 L2565.34,1678.25 L2541.55,1710.2 L2552.51,1566.94" vector-effect="none"/>
            </Tooltip>)})}

        {[390].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(390)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2726.71,1588.52 L2771.46,1594.08 L2809.58,1601.84 L2839.01,1610.41 L2796.45,1776.47 L2746.19,1724.34 L2709.27,1706.08 L2697.86,1701.1 L2726.71,1588.52" vector-effect="none"/>
            </Tooltip>)})}

        {[391].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(391)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2846.33,1612.55 L2935.98,1646.17 L2956.04,1708.13 L2954.52,1708.18 L2903.82,1724.59 L2872.41,1758.69 L2859.85,1812.68 L2850.56,1827.03 L2834.56,1819.97 L2813.71,1794.37 L2802.68,1782.91 L2846.33,1612.55" vector-effect="none"/>
            </Tooltip>)})}

        {[392].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(392)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2955.05,1653.32 L3061.52,1693.38 L3104.94,1706.63 L3157.03,1715.93 L3085.72,1872.61 L3085.69,1872.55 L3073.95,1850.54 L3067.08,1837.83 L3050.93,1797.04 L3034.9,1763.15 L3018.79,1738.9 L2995.21,1720.64 L2974.03,1711.25 L2955.05,1653.32" vector-effect="none"/>
            </Tooltip>)})}

        {[393].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(393)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M3164.7,1717.06 L3191.75,1764.65 L3216.21,1838.45 L3230.78,1943.41 L3170.91,1939.45 L3156.46,1932.91 L3108.89,1899.05 L3090.47,1880.41 L3164.7,1717.06" vector-effect="none"/>
            </Tooltip>)})}

        {[394].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(394)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2309.45,1536.97 L2344.89,1541.33 L2345.23,1575.08 L2312.67,1575.3 L2309.45,1536.97" vector-effect="none"/>
            </Tooltip>)})}

        {[395].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(395)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2386.36,1546.36 L2421.96,1550.73 L2419.98,1579.14 L2385.48,1577.26 L2386.36,1546.36" vector-effect="none"/>
            </Tooltip>)})}

        {[396].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(396)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2310.16,1585.56 L2345.3,1585.33 L2345.51,1618.38 L2313.51,1620.69 L2310.16,1585.56" vector-effect="none"/>
            </Tooltip>)})}

        {[397].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(397)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2385.16,1587.51 L2419.27,1589.37 L2417.61,1613.19 L2384.44,1615.51 L2385.16,1587.51" vector-effect="none"/>
            </Tooltip>)})}

        {[398].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(398)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2112.86,1236.35 L2231.73,1231.81 L2232.72,1231.86 L2236.94,1273.31 L2116.77,1275.08 L2112.86,1236.35" vector-effect="none"/>
            </Tooltip>)})}

        {[399].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(399)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2116.77,1275.08 L2236.94,1273.31 L2241.16,1314.83 L2120.69,1313.82 L2116.77,1275.08" vector-effect="none"/>
            </Tooltip>)})}

        {[400].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(400)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2120.69,1313.82 L2241.16,1314.83 L2243.37,1336.58 L2122.89,1335.56 L2120.69,1313.82" vector-effect="none"/>
            </Tooltip>)})}

        {[401].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(401)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2124.61,1352.65 L2245.1,1353.67 L2251.73,1418.88 L2131.22,1417.86 L2124.61,1352.65" vector-effect="none"/>
            </Tooltip>)})}

        {[402].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(402)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2131.2,1417.88 L2251.72,1418.89 L2257.12,1471.87 L2135.15,1456.89 L2131.2,1417.88" vector-effect="none"/>
            </Tooltip>)})}

        {[403].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(403)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2244.32,1232.36 L2400.18,1239.35 L2430.46,1235.03 L2414.86,1348.15 L2254.94,1336.85 L2244.32,1232.36" vector-effect="none"/>
            </Tooltip>)})}

        {[404].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(404)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2256.7,1354.11 L2412.51,1365.1 L2405.34,1417.1 L2262.07,1407 L2256.7,1354.11" vector-effect="none"/>
            </Tooltip>)})}

        {[405].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(405)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2262.08,1407.02 L2337.12,1412.29 L2332.12,1481.09 L2268.72,1473.22 L2262.08,1407.02" vector-effect="none"/>
            </Tooltip>)})}

        {[406].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(406)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2337.12,1412.29 L2405.34,1417.11 L2395.45,1488.86 L2332.13,1481.09 L2337.12,1412.29" vector-effect="none"/>
            </Tooltip>)})}

        {[407].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(407)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2138.13,1556.1 L2163.65,1529.89 L2196.3,1532.9 L2199.33,1566.26 L2169.97,1567.89 L2153.55,1571.61 L2138.13,1556.1" vector-effect="none"/>
            </Tooltip>)})}

        {[408].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(408)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2153.55,1571.61 L2169.97,1567.91 L2199.33,1566.26 L2200.86,1583.15 L2162.74,1585.9 L2156.59,1575.8 L2153.55,1571.61" vector-effect="none"/>
            </Tooltip>)})}

        {[409].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(409)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2138.11,1556.12 L2153.55,1571.61 L2156.6,1575.81 L2162.74,1585.89 L2162.25,1585.5 L2156.54,1582.51 L2149.82,1580.13 L2143.4,1579.45 L2140.25,1579.57 L2138.11,1556.12" vector-effect="none"/>
            </Tooltip>)})}

        {[410].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(410)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2040.85,933.063 L2097.51,928.024 L2105.35,1018.65 L2155.79,1019.91 L2135.93,1147.27 L2025.01,1118.6 L2033.19,1014.79 L2040.85,933.063" vector-effect="none"/>
            </Tooltip>)})}

        {[411].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(411)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2192.96,1157.18 L2198.65,1071.07 L2333.72,1067.21 L2338.28,1146.31 L2318.84,1151.16 L2277.39,1157.34 L2235.62,1159.4 L2192.96,1157.18" vector-effect="none"/>
            </Tooltip>)})}

        {[412].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(412)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2451.43,1102.2 L1886.89,607.71 L1881.89,562.761 L2481.34,1087.84 L2451.43,1102.2" vector-effect="none"/>
            </Tooltip>)})}

        {[413].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(413)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1552.78,968.133 L1610.5,938.014 L1734.92,1049.99 L1781.02,1448.19 L1735.21,1457.12 L1717.63,1462.12 L1673.6,1459.4 L1696.92,1410.21 L1678.06,1391.59 L1679.04,1386.93 L1676.69,1365.5 L1634.22,1305.89 L1645.67,1286.93 L1631.19,1257.19 L1641.88,1192.5 L1645.07,1140.32 L1624.97,1114.68 L1588.49,1092.69 L1571.5,1076.91 L1559.44,1055.45 L1552.78,968.133" vector-effect="none"/>
            </Tooltip>)})}

        {[414].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(414)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2089.47,1521.3 L2123.37,1521.53 L2124.13,1530.56 L2090.6,1533.06 L2089.47,1521.3" vector-effect="none"/>
            </Tooltip>)})}

        {[415].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(415)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2113.28,1589.07 L2112.54,1580.76 L2128.54,1581.11 L2129.11,1588.03 L2113.28,1589.07" vector-effect="none"/>
            </Tooltip>)})}

        {[416].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(416)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2127.27,1573.49 L2111.48,1573.83 L2111.12,1568.81 L2126.67,1567.71 L2127.27,1573.49" vector-effect="none"/>
            </Tooltip>)})}

        {[417].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(417)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2126.5,1562.86 L2112.04,1563.55 L2111.3,1557.9 L2126.22,1557.62 L2126.5,1562.86" vector-effect="none"/>
            </Tooltip>)})}

        {[418].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(418)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M2125.3,1546.87 L2110.65,1547.9 L2108.97,1537.67 L2124.53,1536.31 L2125.3,1546.87" vector-effect="none"/>
            </Tooltip>)})}

        {[419].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(419)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M929.324,491.886 L985.297,483.695 L1016.39,521.617 L953.442,537.847 L950.56,527.533 L935.543,530.415 L929.324,491.886" vector-effect="none"/>
            </Tooltip>)})}

        {[420].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(420)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M535.466,480.737 L512.94,478.537 L515.215,469.36 L515.215,464.81 L638.917,452.295 L653.271,538.53 L522.421,498.902 L536.774,480.737 L535.466,480.737" vector-effect="none"/>
            </Tooltip>)})}

        {[421].map((tooltipValue) => {
          const objetoEncontrado = lotes.find(item => item.mapa == tooltipValue);
          return (
            <Tooltip title={objetoEncontrado ? "Area: "+objetoEncontrado.superficie+" Perimetro: "+objetoEncontrado.perimetro :"Sin datos"}>
            <path onClick={() => handleOpenDialog(421)}fillOpacity={imagenDeFondoActivada ? objetoEncontrado ? 0.5:0:1 } fill={seleccion ? objetoEncontrado ? (objetoEncontrado.categoria1 === "Verde" && seleccion ==="Verde") ? "#76ff03" : (objetoEncontrado.categoria1 === "Amarillo" && seleccion ==="Amarillo") ? "#ffea00" : (objetoEncontrado.categoria1 === "Rojo" && seleccion ==="Rojo") ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd":objetoEncontrado ? objetoEncontrado.categoria1 === "Verde" ? "#76ff03" : objetoEncontrado.categoria1 === "Amarillo" ? "#ffea00" : objetoEncontrado.categoria1 === "Rojo" ? "#f44336" : objetoEncontrado.categoria1 === "Otro" ? "#81c784" : objetoEncontrado.categoria1 === "Equipamiento del parque" ? "#bdbdbd" : "#bdbdbd" : "#bdbdbd" }   stroke="#3e2723" strokeWidth="5" fill-rule="evenodd" d="M1339.42,567.379 L1340.84,566.706 L1644.25,470.419 L1659.18,500.639 L1667.18,520.615 L1659.38,539.95 L1644.16,542.534 L1648.88,571.888 L1635.39,609.947 L1598.01,643.869 L1576.13,649.576 L1561.5,659.597 L1530.92,699.491 L1527.8,716.082 L1538.4,724.671 L1526.46,748.685 L1522.66,794.789 L1506.83,777.254 L1478.16,747.069 L1433.56,701.562 L1420.52,685.331 L1414.75,676.382 L1528.82,662.578 L1486.5,580.97 L1425.15,591.361 L1414,593.181 L1368.41,599.476 L1351.96,580.363 L1339.42,567.379" vector-effect="none"/>
            </Tooltip>)})}
  </g>

         
          
        
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(1,0,0,1,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(11.8081,0,0,11.8081,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
  <g stroke-opacity="1" fill="none" font-weight="400" stroke-linejoin="bevel" stroke="#000000" stroke-width="1" transform="matrix(1,0,0,1,0,0)" stroke-linecap="square" font-family="MS Shell Dlg 2" font-size="32.5" font-style="normal"/>
 </g>

</svg>





                  </div>
                </> : <></>}




              </TransformComponent>
            </React.Fragment>
          )}
        </TransformWrapper>


      </div>
      <DialogComponent ref={dialogRef} title=""
        info={info}
        mapa={'usur'}
        getClients={ async () => {

          const lotess = await servicioLotes.listausur()
      console.log(lotess)
          setLotes(lotess[0])
      
        }
      
      }>

      </DialogComponent>
    </>


  )
}

export default Arg;